<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="742" onload="init(evt)" viewBox="0 0 1200 742" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="725"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="725"> </text>
<g id="frames">
<g>
<title>all (16,733 samples, 100.00%)</title><rect x="10.0" y="691.0" width="1180.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="13.0" y="702.0">all</text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (5 samples, 0.03%)</title><rect x="10.1" y="675.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.1" y="686.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (35 samples, 0.21%)</title><rect x="10.9" y="675.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.9" y="686.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (17 samples, 0.10%)</title><rect x="11.0" y="659.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="14.0" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (11 samples, 0.07%)</title><rect x="11.1" y="643.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="14.1" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (8 samples, 0.05%)</title><rect x="11.1" y="627.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="14.1" y="638.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (6 samples, 0.04%)</title><rect x="11.3" y="611.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.3" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (5 samples, 0.03%)</title><rect x="11.3" y="595.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="14.3" y="606.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (16 samples, 0.10%)</title><rect x="12.3" y="659.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="15.3" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (15 samples, 0.09%)</title><rect x="12.3" y="643.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="15.3" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (11 samples, 0.07%)</title><rect x="12.4" y="627.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="15.4" y="638.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation() (4 samples, 0.02%)</title><rect x="12.5" y="611.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="15.5" y="622.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (6 samples, 0.04%)</title><rect x="12.8" y="611.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="15.8" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (6 samples, 0.04%)</title><rect x="12.8" y="595.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="15.8" y="606.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (16 samples, 0.10%)</title><rect x="13.4" y="675.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="16.4" y="686.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (14 samples, 0.08%)</title><rect x="13.5" y="659.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="16.5" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (14 samples, 0.08%)</title><rect x="13.5" y="643.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="16.5" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (13 samples, 0.08%)</title><rect x="13.5" y="627.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="16.5" y="638.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (11 samples, 0.07%)</title><rect x="13.6" y="611.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="16.6" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (9 samples, 0.05%)</title><rect x="13.7" y="595.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="16.7" y="606.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (117 samples, 0.70%)</title><rect x="14.5" y="675.0" width="8.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="17.5" y="686.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.02%)</title><rect x="15.7" y="659.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="18.7" y="670.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (87 samples, 0.52%)</title><rect x="16.0" y="659.0" width="6.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="19.0" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (83 samples, 0.50%)</title><rect x="16.3" y="643.0" width="5.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="19.3" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (80 samples, 0.48%)</title><rect x="16.4" y="627.0" width="5.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="19.4" y="638.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation() (13 samples, 0.08%)</title><rect x="16.9" y="611.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="19.9" y="622.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (6 samples, 0.04%)</title><rect x="16.9" y="595.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="19.9" y="606.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (47 samples, 0.28%)</title><rect x="18.2" y="611.0" width="3.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="21.2" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (46 samples, 0.27%)</title><rect x="18.3" y="595.0" width="3.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="21.3" y="606.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (5 samples, 0.03%)</title><rect x="18.5" y="579.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="21.5" y="590.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation(unsigned long, unsigned long, unsigned long*) (21 samples, 0.13%)</title><rect x="19.0" y="579.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="22.0" y="590.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (13 samples, 0.08%)</title><rect x="19.2" y="563.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="22.2" y="574.0"></text>
</g>
<g>
<title>Monitor::lock(Thread*) (9 samples, 0.05%)</title><rect x="19.4" y="547.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="22.4" y="558.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (8 samples, 0.05%)</title><rect x="19.4" y="531.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="22.4" y="542.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (8 samples, 0.05%)</title><rect x="19.4" y="515.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="22.4" y="526.0"></text>
</g>
<g>
<title>__psynch_cvwait (8 samples, 0.05%)</title><rect x="19.4" y="499.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="22.4" y="510.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::make_parsable(bool, bool) (5 samples, 0.03%)</title><rect x="20.6" y="579.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="23.6" y="590.0"></text>
</g>
<g>
<title>_platform_memset$VARIANT$Haswell (4 samples, 0.02%)</title><rect x="21.0" y="579.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="24.0" y="590.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (516 samples, 3.08%)</title><rect x="22.8" y="675.0" width="36.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="25.8" y="686.0">Sha..</text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (507 samples, 3.03%)</title><rect x="23.0" y="659.0" width="35.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="26.0" y="670.0">Obj..</text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (260 samples, 1.55%)</title><rect x="23.7" y="643.0" width="18.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="26.7" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (63 samples, 0.38%)</title><rect x="23.8" y="627.0" width="4.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="26.8" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (24 samples, 0.14%)</title><rect x="26.6" y="611.0" width="1.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="29.6" y="622.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.03%)</title><rect x="28.3" y="627.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="31.3" y="638.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (49 samples, 0.29%)</title><rect x="28.6" y="627.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="31.6" y="638.0"></text>
</g>
<g>
<title>__psynch_cvwait (49 samples, 0.29%)</title><rect x="28.6" y="611.0" width="3.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="31.6" y="622.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (140 samples, 0.84%)</title><rect x="32.1" y="627.0" width="9.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="35.1" y="638.0"></text>
</g>
<g>
<title>__gettimeofday (4 samples, 0.02%)</title><rect x="32.1" y="611.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="35.1" y="622.0"></text>
</g>
<g>
<title>__psynch_cvwait (129 samples, 0.77%)</title><rect x="32.4" y="611.0" width="9.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="35.4" y="622.0"></text>
</g>
<g>
<title>_pthread_cond_wait (4 samples, 0.02%)</title><rect x="41.5" y="611.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="44.5" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (11 samples, 0.07%)</title><rect x="42.0" y="643.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="45.0" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (202 samples, 1.21%)</title><rect x="42.8" y="643.0" width="14.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="45.8" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (85 samples, 0.51%)</title><rect x="51.0" y="627.0" width="6.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="54.0" y="638.0"></text>
</g>
<g>
<title>SpinPause (25 samples, 0.15%)</title><rect x="57.0" y="643.0" width="1.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="60.0" y="654.0"></text>
</g>
<g>
<title>ThreadInVMfromJava::~ThreadInVMfromJava() (5 samples, 0.03%)</title><rect x="59.2" y="675.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="62.2" y="686.0"></text>
</g>
<g>
<title>[not_walkable] (34 samples, 0.20%)</title><rect x="59.6" y="675.0" width="2.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="62.6" y="686.0"></text>
</g>
<g>
<title>[not_walkable_Java] (34 samples, 0.20%)</title><rect x="62.0" y="675.0" width="2.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="65.0" y="686.0"></text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long) (5 samples, 0.03%)</title><rect x="62.4" y="659.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="65.4" y="670.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (16 samples, 0.10%)</title><rect x="62.8" y="659.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="65.8" y="670.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (14 samples, 0.08%)</title><rect x="62.9" y="643.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="65.9" y="654.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (11 samples, 0.07%)</title><rect x="63.1" y="627.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="66.1" y="638.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (8 samples, 0.05%)</title><rect x="63.3" y="611.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="66.3" y="622.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (5 samples, 0.03%)</title><rect x="63.5" y="595.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="66.5" y="606.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (4 samples, 0.02%)</title><rect x="63.6" y="579.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="66.6" y="590.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.02%)</title><rect x="63.9" y="659.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="66.9" y="670.0"></text>
</g>
<g>
<title>[unknown_Java] (317 samples, 1.89%)</title><rect x="64.4" y="675.0" width="22.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="67.4" y="686.0">[..</text>
</g>
<g>
<title>os::javaTimeNanos() (115 samples, 0.69%)</title><rect x="78.7" y="659.0" width="8.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="81.7" y="670.0"></text>
</g>
<g>
<title>_res (115 samples, 0.69%)</title><rect x="78.7" y="643.0" width="8.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="81.7" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.run (8,146 samples, 48.68%)</title><rect x="86.8" y="675.0" width="574.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="89.8" y="686.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (8,146 samples, 48.68%)</title><rect x="86.8" y="659.0" width="574.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="89.8" y="670.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (8,146 samples, 48.68%)</title><rect x="86.8" y="643.0" width="574.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="89.8" y="654.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="88.6" y="627.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="91.6" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (11 samples, 0.07%)</title><rect x="88.9" y="627.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="91.9" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (10 samples, 0.06%)</title><rect x="89.0" y="611.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="92.0" y="622.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (4 samples, 0.02%)</title><rect x="89.1" y="595.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="92.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (448 samples, 2.68%)</title><rect x="89.7" y="627.0" width="31.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="92.7" y="638.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (447 samples, 2.67%)</title><rect x="89.8" y="611.0" width="31.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="92.8" y="622.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (444 samples, 2.65%)</title><rect x="90.0" y="595.0" width="31.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="93.0" y="606.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$133/477450495.apply (442 samples, 2.64%)</title><rect x="90.1" y="579.0" width="31.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="93.1" y="590.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$1 (442 samples, 2.64%)</title><rect x="90.1" y="563.0" width="31.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="93.1" y="574.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (442 samples, 2.64%)</title><rect x="90.1" y="547.0" width="31.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="93.1" y="558.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.02%)</title><rect x="90.2" y="531.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="93.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (394 samples, 2.35%)</title><rect x="90.5" y="531.0" width="27.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="93.5" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (394 samples, 2.35%)</title><rect x="90.5" y="515.0" width="27.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="93.5" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (394 samples, 2.35%)</title><rect x="90.5" y="499.0" width="27.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="93.5" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (182 samples, 1.09%)</title><rect x="90.5" y="483.0" width="12.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="93.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (182 samples, 1.09%)</title><rect x="90.5" y="467.0" width="12.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="93.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (181 samples, 1.08%)</title><rect x="90.5" y="451.0" width="12.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="93.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$200/846686280.apply (180 samples, 1.08%)</title><rect x="90.5" y="435.0" width="12.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="93.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (179 samples, 1.07%)</title><rect x="90.6" y="419.0" width="12.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="93.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (179 samples, 1.07%)</title><rect x="90.6" y="403.0" width="12.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="93.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$156/1859135568.apply (179 samples, 1.07%)</title><rect x="90.6" y="387.0" width="12.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="93.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (179 samples, 1.07%)</title><rect x="90.6" y="371.0" width="12.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="93.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (6 samples, 0.04%)</title><rect x="90.6" y="355.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="93.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (6 samples, 0.04%)</title><rect x="90.6" y="339.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="93.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (4 samples, 0.02%)</title><rect x="90.6" y="323.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="93.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$220/1881559820.apply (4 samples, 0.02%)</title><rect x="90.6" y="307.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="93.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (4 samples, 0.02%)</title><rect x="90.6" y="291.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="93.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (4 samples, 0.02%)</title><rect x="90.6" y="275.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="93.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$154/1991052763.apply (4 samples, 0.02%)</title><rect x="90.6" y="259.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="93.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (4 samples, 0.02%)</title><rect x="90.6" y="243.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="93.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (172 samples, 1.03%)</title><rect x="91.1" y="355.0" width="12.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="94.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (159 samples, 0.95%)</title><rect x="91.1" y="339.0" width="11.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="94.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (155 samples, 0.93%)</title><rect x="91.3" y="323.0" width="10.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="94.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (6 samples, 0.04%)</title><rect x="91.4" y="307.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="94.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$217/823875895.apply (146 samples, 0.87%)</title><rect x="91.9" y="307.0" width="10.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="94.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (146 samples, 0.87%)</title><rect x="91.9" y="291.0" width="10.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="94.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (5 samples, 0.03%)</title><rect x="92.2" y="275.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="95.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (5 samples, 0.03%)</title><rect x="92.2" y="259.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="95.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.03%)</title><rect x="92.2" y="243.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="95.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.03%)</title><rect x="92.2" y="227.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="95.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (23 samples, 0.14%)</title><rect x="92.6" y="275.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="95.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (22 samples, 0.13%)</title><rect x="92.6" y="259.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="95.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (7 samples, 0.04%)</title><rect x="92.6" y="243.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="95.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (14 samples, 0.08%)</title><rect x="93.2" y="243.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="96.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (14 samples, 0.08%)</title><rect x="93.2" y="227.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="96.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (7 samples, 0.04%)</title><rect x="93.2" y="211.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="96.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (7 samples, 0.04%)</title><rect x="93.2" y="195.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="96.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (7 samples, 0.04%)</title><rect x="93.2" y="179.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.2" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (7 samples, 0.04%)</title><rect x="93.2" y="163.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="96.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (6 samples, 0.04%)</title><rect x="93.3" y="147.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="96.3" y="158.0"></text>
</g>
<g>
<title>write (6 samples, 0.04%)</title><rect x="93.3" y="131.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="96.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (5 samples, 0.03%)</title><rect x="93.8" y="211.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="96.8" y="222.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.03%)</title><rect x="93.8" y="195.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="96.8" y="206.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (5 samples, 0.03%)</title><rect x="93.8" y="179.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="96.8" y="190.0"></text>
</g>
<g>
<title>__psynch_cvsignal (4 samples, 0.02%)</title><rect x="93.8" y="163.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="96.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (113 samples, 0.68%)</title><rect x="94.2" y="275.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="97.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (84 samples, 0.50%)</title><rect x="94.5" y="259.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="97.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (6 samples, 0.04%)</title><rect x="94.7" y="243.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="97.7" y="254.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (4 samples, 0.02%)</title><rect x="94.8" y="227.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="97.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (39 samples, 0.23%)</title><rect x="95.1" y="243.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="98.1" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext (16 samples, 0.10%)</title><rect x="95.2" y="227.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="98.2" y="238.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.03%)</title><rect x="95.9" y="211.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="98.9" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$234/300523585.test (12 samples, 0.07%)</title><rect x="97.0" y="227.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="100.0" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (10 samples, 0.06%)</title><rect x="97.2" y="211.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="100.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/119290689.test (5 samples, 0.03%)</title><rect x="97.5" y="195.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="100.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (5 samples, 0.03%)</title><rect x="97.5" y="179.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="100.5" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$71/917831210.test (5 samples, 0.03%)</title><rect x="97.5" y="163.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="100.5" y="174.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (5 samples, 0.03%)</title><rect x="97.5" y="147.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="100.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$70/298430307.test (5 samples, 0.03%)</title><rect x="97.5" y="131.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="100.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (5 samples, 0.03%)</title><rect x="97.5" y="115.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="100.5" y="126.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.03%)</title><rect x="97.5" y="99.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="100.5" y="110.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.03%)</title><rect x="97.5" y="83.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="100.5" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.03%)</title><rect x="97.5" y="67.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="100.5" y="78.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (4 samples, 0.02%)</title><rect x="97.6" y="51.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="100.6" y="62.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (4 samples, 0.02%)</title><rect x="97.6" y="35.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="100.6" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.headerFilter (4 samples, 0.02%)</title><rect x="97.9" y="243.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="100.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.isConnect (4 samples, 0.02%)</title><rect x="97.9" y="227.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="100.9" y="238.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.02%)</title><rect x="97.9" y="211.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="100.9" y="222.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.02%)</title><rect x="97.9" y="195.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="100.9" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.02%)</title><rect x="97.9" y="179.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="100.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (32 samples, 0.19%)</title><rect x="98.1" y="243.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="101.1" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (32 samples, 0.19%)</title><rect x="98.1" y="227.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="101.1" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (32 samples, 0.19%)</title><rect x="98.1" y="211.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="101.1" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (28 samples, 0.17%)</title><rect x="98.4" y="195.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="101.4" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/938808288.accept (27 samples, 0.16%)</title><rect x="98.5" y="179.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="101.5" y="190.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (26 samples, 0.16%)</title><rect x="98.6" y="163.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="101.6" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (8 samples, 0.05%)</title><rect x="99.1" y="147.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="102.1" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$124/787427873.accept (8 samples, 0.05%)</title><rect x="99.1" y="131.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="102.1" y="142.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (8 samples, 0.05%)</title><rect x="99.1" y="115.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="102.1" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.02%)</title><rect x="99.3" y="99.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="102.3" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.02%)</title><rect x="99.3" y="83.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="102.3" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.02%)</title><rect x="99.3" y="67.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="102.3" y="78.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.02%)</title><rect x="99.3" y="51.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="102.3" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.02%)</title><rect x="99.3" y="35.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="102.3" y="46.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (10 samples, 0.06%)</title><rect x="99.7" y="147.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="102.7" y="158.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.03%)</title><rect x="99.9" y="131.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="102.9" y="142.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.03%)</title><rect x="99.9" y="115.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="102.9" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (5 samples, 0.03%)</title><rect x="99.9" y="99.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="102.9" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (6 samples, 0.04%)</title><rect x="100.6" y="259.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="103.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (6 samples, 0.04%)</title><rect x="100.6" y="243.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="103.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.02%)</title><rect x="100.7" y="227.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="103.7" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (4 samples, 0.02%)</title><rect x="100.7" y="211.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="103.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/7967307.invoke (4 samples, 0.02%)</title><rect x="100.7" y="195.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="103.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (16 samples, 0.10%)</title><rect x="101.0" y="259.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="104.0" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.03%)</title><rect x="101.1" y="243.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="104.1" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.03%)</title><rect x="101.1" y="227.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="104.1" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (9 samples, 0.05%)</title><rect x="101.5" y="243.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="104.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (13 samples, 0.08%)</title><rect x="102.3" y="339.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="105.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (13 samples, 0.08%)</title><rect x="102.3" y="323.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="105.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (5 samples, 0.03%)</title><rect x="102.3" y="307.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="105.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (5 samples, 0.03%)</title><rect x="102.3" y="291.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="105.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.first (5 samples, 0.03%)</title><rect x="102.3" y="275.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="105.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.05%)</title><rect x="102.7" y="307.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="105.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.05%)</title><rect x="102.7" y="291.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="105.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (8 samples, 0.05%)</title><rect x="102.7" y="275.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="105.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (7 samples, 0.04%)</title><rect x="102.7" y="259.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="105.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5 samples, 0.03%)</title><rect x="102.7" y="243.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="105.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$189/1017919595.run (5 samples, 0.03%)</title><rect x="102.7" y="227.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="105.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (5 samples, 0.03%)</title><rect x="102.7" y="211.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="105.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (209 samples, 1.25%)</title><rect x="103.5" y="483.0" width="14.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="106.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.03%)</title><rect x="103.6" y="467.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="106.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (5 samples, 0.03%)</title><rect x="103.6" y="451.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="106.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (6 samples, 0.04%)</title><rect x="103.9" y="467.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="106.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (197 samples, 1.18%)</title><rect x="104.4" y="467.0" width="13.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="107.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (182 samples, 1.09%)</title><rect x="104.4" y="451.0" width="12.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="107.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (182 samples, 1.09%)</title><rect x="104.4" y="435.0" width="12.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="107.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (182 samples, 1.09%)</title><rect x="104.4" y="419.0" width="12.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="107.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$160/1662199070.apply (180 samples, 1.08%)</title><rect x="104.5" y="403.0" width="12.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="107.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (180 samples, 1.08%)</title><rect x="104.5" y="387.0" width="12.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="107.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (180 samples, 1.08%)</title><rect x="104.5" y="371.0" width="12.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="107.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (101 samples, 0.60%)</title><rect x="104.5" y="355.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="107.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (101 samples, 0.60%)</title><rect x="104.5" y="339.0" width="7.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="107.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (101 samples, 0.60%)</title><rect x="104.5" y="323.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="107.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$193/1960149510.apply (101 samples, 0.60%)</title><rect x="104.5" y="307.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="107.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (101 samples, 0.60%)</title><rect x="104.5" y="291.0" width="7.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="107.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (101 samples, 0.60%)</title><rect x="104.5" y="275.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="107.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (101 samples, 0.60%)</title><rect x="104.5" y="259.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="107.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (82 samples, 0.49%)</title><rect x="104.5" y="243.0" width="5.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="107.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (69 samples, 0.41%)</title><rect x="104.6" y="227.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="107.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (67 samples, 0.40%)</title><rect x="104.6" y="211.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="107.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (67 samples, 0.40%)</title><rect x="104.6" y="195.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="107.6" y="206.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (64 samples, 0.38%)</title><rect x="104.8" y="179.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="107.8" y="190.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (51 samples, 0.30%)</title><rect x="105.0" y="163.0" width="3.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="108.0" y="174.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (11 samples, 0.07%)</title><rect x="105.4" y="147.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="108.4" y="158.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (5 samples, 0.03%)</title><rect x="105.7" y="131.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="108.7" y="142.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (4 samples, 0.02%)</title><rect x="106.2" y="147.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="109.2" y="158.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (5 samples, 0.03%)</title><rect x="106.6" y="147.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="109.6" y="158.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (5 samples, 0.03%)</title><rect x="106.6" y="131.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="109.6" y="142.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (5 samples, 0.03%)</title><rect x="106.6" y="115.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="109.6" y="126.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (5 samples, 0.03%)</title><rect x="106.6" y="99.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="109.6" y="110.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (4 samples, 0.02%)</title><rect x="106.6" y="83.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="109.6" y="94.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (21 samples, 0.13%)</title><rect x="107.1" y="147.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="110.1" y="158.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (4 samples, 0.02%)</title><rect x="107.1" y="131.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="110.1" y="142.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (17 samples, 0.10%)</title><rect x="107.4" y="131.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="110.4" y="142.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.02%)</title><rect x="107.5" y="115.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="110.5" y="126.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (4 samples, 0.02%)</title><rect x="107.5" y="99.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="110.5" y="110.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.02%)</title><rect x="107.5" y="83.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="110.5" y="94.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (12 samples, 0.07%)</title><rect x="107.7" y="115.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="110.7" y="126.0"></text>
</g>
<g>
<title>CompiledMethod::find_pc_desc(unsigned char*, bool) (8 samples, 0.05%)</title><rect x="107.9" y="99.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="110.9" y="110.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (5 samples, 0.03%)</title><rect x="108.1" y="83.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="111.1" y="94.0"></text>
</g>
<g>
<title>PcDescCache::find_pc_desc(int, bool) (4 samples, 0.02%)</title><rect x="108.2" y="67.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="111.2" y="78.0"></text>
</g>
<g>
<title>call_stub (4 samples, 0.02%)</title><rect x="108.7" y="163.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="111.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$66/1706292388.run (4 samples, 0.02%)</title><rect x="109.0" y="163.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="112.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (11 samples, 0.07%)</title><rect x="109.5" y="227.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="112.5" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.05%)</title><rect x="109.5" y="211.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="112.5" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.05%)</title><rect x="109.5" y="195.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="112.5" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.05%)</title><rect x="109.5" y="179.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="112.5" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.04%)</title><rect x="109.5" y="163.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="112.5" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.04%)</title><rect x="109.5" y="147.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="112.5" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="109.5" y="131.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="112.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (19 samples, 0.11%)</title><rect x="110.3" y="243.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="113.3" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (13 samples, 0.08%)</title><rect x="110.7" y="227.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="113.7" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (5 samples, 0.03%)</title><rect x="111.3" y="211.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="114.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (79 samples, 0.47%)</title><rect x="111.6" y="355.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="114.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (77 samples, 0.46%)</title><rect x="111.8" y="339.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="114.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (10 samples, 0.06%)</title><rect x="111.9" y="323.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="114.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (20 samples, 0.12%)</title><rect x="112.6" y="323.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="115.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (14 samples, 0.08%)</title><rect x="112.7" y="307.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="115.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (13 samples, 0.08%)</title><rect x="112.8" y="291.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="115.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (11 samples, 0.07%)</title><rect x="113.0" y="275.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="116.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (45 samples, 0.27%)</title><rect x="114.0" y="323.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="117.0" y="334.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (37 samples, 0.22%)</title><rect x="114.6" y="307.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="117.6" y="318.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (23 samples, 0.14%)</title><rect x="114.6" y="291.0" width="1.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="117.6" y="302.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (8 samples, 0.05%)</title><rect x="114.9" y="275.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="117.9" y="286.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (5 samples, 0.03%)</title><rect x="115.8" y="275.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="118.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$163/960945384.run (10 samples, 0.06%)</title><rect x="116.4" y="291.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="119.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (9 samples, 0.05%)</title><rect x="116.5" y="275.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="119.5" y="286.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (9 samples, 0.05%)</title><rect x="116.5" y="259.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="119.5" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (9 samples, 0.05%)</title><rect x="116.5" y="243.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="119.5" y="254.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (9 samples, 0.05%)</title><rect x="116.5" y="227.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="119.5" y="238.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (9 samples, 0.05%)</title><rect x="116.5" y="211.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="119.5" y="222.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (9 samples, 0.05%)</title><rect x="116.5" y="195.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="119.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (6 samples, 0.04%)</title><rect x="116.6" y="179.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="119.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.03%)</title><rect x="117.2" y="451.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="120.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (10 samples, 0.06%)</title><rect x="117.5" y="451.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="120.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (15 samples, 0.09%)</title><rect x="118.2" y="531.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="121.2" y="542.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (9 samples, 0.05%)</title><rect x="118.2" y="515.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="121.2" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (9 samples, 0.05%)</title><rect x="118.2" y="499.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="121.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (6 samples, 0.04%)</title><rect x="118.9" y="515.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="121.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (6 samples, 0.04%)</title><rect x="118.9" y="499.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="121.9" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (6 samples, 0.04%)</title><rect x="118.9" y="483.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="121.9" y="494.0"></text>
</g>
<g>
<title>write (6 samples, 0.04%)</title><rect x="118.9" y="467.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="121.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (14 samples, 0.08%)</title><rect x="119.3" y="531.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="122.3" y="542.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (14 samples, 0.08%)</title><rect x="119.3" y="515.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="122.3" y="526.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (12 samples, 0.07%)</title><rect x="119.4" y="499.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="122.4" y="510.0"></text>
</g>
<g>
<title>__psynch_cvsignal (10 samples, 0.06%)</title><rect x="119.4" y="483.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="122.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (10 samples, 0.06%)</title><rect x="120.3" y="531.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="123.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (9 samples, 0.05%)</title><rect x="120.3" y="515.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="123.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (6 samples, 0.04%)</title><rect x="120.5" y="499.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="123.5" y="510.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (5 samples, 0.03%)</title><rect x="120.6" y="483.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="123.6" y="494.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (5 samples, 0.03%)</title><rect x="120.6" y="467.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="123.6" y="478.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (5 samples, 0.03%)</title><rect x="120.6" y="451.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="123.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (4 samples, 0.02%)</title><rect x="121.0" y="531.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="124.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (4 samples, 0.02%)</title><rect x="121.0" y="515.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="124.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (4 samples, 0.02%)</title><rect x="121.0" y="499.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="124.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (10 samples, 0.06%)</title><rect x="121.3" y="627.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="124.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (10 samples, 0.06%)</title><rect x="121.3" y="611.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="124.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (9 samples, 0.05%)</title><rect x="121.4" y="595.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="124.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (9 samples, 0.05%)</title><rect x="121.4" y="579.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="124.4" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (9 samples, 0.05%)</title><rect x="121.4" y="563.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (4 samples, 0.02%)</title><rect x="121.7" y="547.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="124.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (10 samples, 0.06%)</title><rect x="122.0" y="627.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="125.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.06%)</title><rect x="122.0" y="611.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="125.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.02%)</title><rect x="122.4" y="595.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="125.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.02%)</title><rect x="122.4" y="579.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="125.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4,948 samples, 29.57%)</title><rect x="122.7" y="627.0" width="348.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="125.7" y="638.0">java/util/concurrent/ThreadPoolExecutor.getTask</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (422 samples, 2.52%)</title><rect x="123.1" y="611.0" width="29.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="126.1" y="622.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (415 samples, 2.48%)</title><rect x="123.1" y="595.0" width="29.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="126.1" y="606.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (406 samples, 2.43%)</title><rect x="123.7" y="579.0" width="28.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="126.7" y="590.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (404 samples, 2.41%)</title><rect x="123.9" y="563.0" width="28.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="126.9" y="574.0">jd..</text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (387 samples, 2.31%)</title><rect x="125.0" y="547.0" width="27.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="128.0" y="558.0">U..</text>
</g>
<g>
<title>Parker::park(bool, long) (360 samples, 2.15%)</title><rect x="125.7" y="531.0" width="25.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="128.7" y="542.0">P..</text>
</g>
<g>
<title>JavaThread::handle_special_suspend_equivalent_condition() (5 samples, 0.03%)</title><rect x="125.9" y="515.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="128.9" y="526.0"></text>
</g>
<g>
<title>__psynch_cvwait (342 samples, 2.04%)</title><rect x="126.4" y="515.0" width="24.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="129.4" y="526.0">_..</text>
</g>
<g>
<title>_pthread_cond_wait (7 samples, 0.04%)</title><rect x="150.5" y="515.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="153.5" y="526.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (7 samples, 0.04%)</title><rect x="151.3" y="531.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="154.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.04%)</title><rect x="152.4" y="595.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="155.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.04%)</title><rect x="152.4" y="579.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="155.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.04%)</title><rect x="152.4" y="563.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="155.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.04%)</title><rect x="152.4" y="547.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="155.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (4,519 samples, 27.01%)</title><rect x="152.9" y="611.0" width="318.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="155.9" y="622.0">java/util/concurrent/SynchronousQueue.poll</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (4,508 samples, 26.94%)</title><rect x="153.4" y="595.0" width="317.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="156.4" y="606.0">java/util/concurrent/SynchronousQueue$Trans..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (20 samples, 0.12%)</title><rect x="154.7" y="579.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="157.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (15 samples, 0.09%)</title><rect x="155.1" y="563.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="158.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (14 samples, 0.08%)</title><rect x="155.1" y="547.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="158.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (4,049 samples, 24.20%)</title><rect x="156.1" y="579.0" width="285.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="159.1" y="590.0">java/util/concurrent/SynchronousQueue$..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (4,048 samples, 24.19%)</title><rect x="156.2" y="563.0" width="285.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="159.2" y="574.0">java/util/concurrent/locks/LockSupport..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4,048 samples, 24.19%)</title><rect x="156.2" y="547.0" width="285.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="159.2" y="558.0">jdk/internal/misc/Unsafe.park</text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (3,932 samples, 23.50%)</title><rect x="164.2" y="531.0" width="277.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="167.2" y="542.0">Unsafe_Park(JNIEnv_*, _jobject*, unsi..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.02%)</title><rect x="164.4" y="515.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="167.4" y="526.0"></text>
</g>
<g>
<title>Chunk::next() const (4 samples, 0.02%)</title><rect x="164.4" y="499.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="167.4" y="510.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (6 samples, 0.04%)</title><rect x="164.8" y="515.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="167.8" y="526.0"></text>
</g>
<g>
<title>JavaThread::is_terminated() const (5 samples, 0.03%)</title><rect x="164.8" y="499.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="167.8" y="510.0"></text>
</g>
<g>
<title>int OrderAccess::load_acquire&lt;int&gt;(int const volatile*) (4 samples, 0.02%)</title><rect x="164.9" y="483.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="167.9" y="494.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;int, OrderAccess::PlatformOrderedLoad&lt;4ul, (ScopedFenceType)0&gt;, void&gt;::operator()(int const volatile*) const (4 samples, 0.02%)</title><rect x="164.9" y="467.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="167.9" y="478.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (9 samples, 0.05%)</title><rect x="165.2" y="515.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="168.2" y="526.0"></text>
</g>
<g>
<title>ThreadService::is_thread_monitoring_contention() (4 samples, 0.02%)</title><rect x="165.5" y="499.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="168.5" y="510.0"></text>
</g>
<g>
<title>JfrEvent&lt;EventThreadPark&gt;::JfrEvent(EventStartTime) (5 samples, 0.03%)</title><rect x="166.1" y="515.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="169.1" y="526.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3,849 samples, 23.00%)</title><rect x="166.6" y="515.0" width="271.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="169.6" y="526.0">Parker::park(bool, long)</text>
</g>
<g>
<title>JavaThread::handle_special_suspend_equivalent_condition() (15 samples, 0.09%)</title><rect x="167.5" y="499.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="170.5" y="510.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (5 samples, 0.03%)</title><rect x="168.1" y="483.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="171.1" y="494.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (4 samples, 0.02%)</title><rect x="168.2" y="467.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="171.2" y="478.0"></text>
</g>
<g>
<title>Monitor::TryFast() (4 samples, 0.02%)</title><rect x="168.2" y="451.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="171.2" y="462.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) (5 samples, 0.03%)</title><rect x="168.8" y="499.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="171.8" y="510.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (4 samples, 0.02%)</title><rect x="168.8" y="483.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="171.8" y="494.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (4 samples, 0.02%)</title><rect x="168.8" y="467.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="171.8" y="478.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (4 samples, 0.02%)</title><rect x="168.8" y="451.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="171.8" y="462.0"></text>
</g>
<g>
<title>__gettimeofday (118 samples, 0.71%)</title><rect x="169.4" y="499.0" width="8.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="172.4" y="510.0"></text>
</g>
<g>
<title>__psynch_cvwait (3,645 samples, 21.78%)</title><rect x="177.7" y="499.0" width="257.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="180.7" y="510.0">__psynch_cvwait</text>
</g>
<g>
<title>_pthread_cond_wait (19 samples, 0.11%)</title><rect x="434.7" y="499.0" width="1.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="437.7" y="510.0"></text>
</g>
<g>
<title>_pthread_mutex_droplock (4 samples, 0.02%)</title><rect x="435.8" y="483.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="438.8" y="494.0"></text>
</g>
<g>
<title>_pthread_testcancel (6 samples, 0.04%)</title><rect x="436.1" y="499.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="439.1" y="510.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (13 samples, 0.08%)</title><rect x="437.1" y="499.0" width="0.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="440.1" y="510.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.02%)</title><rect x="437.6" y="483.0" width="0.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="440.6" y="494.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (4 samples, 0.02%)</title><rect x="437.6" y="467.0" width="0.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="440.6" y="478.0"></text>
</g>
<g>
<title>_res (4 samples, 0.02%)</title><rect x="437.6" y="451.0" width="0.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="440.6" y="462.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (7 samples, 0.04%)</title><rect x="438.6" y="515.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="441.6" y="526.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (4 samples, 0.02%)</title><rect x="438.8" y="499.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="441.8" y="510.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (6 samples, 0.04%)</title><rect x="439.1" y="515.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="442.1" y="526.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (5 samples, 0.03%)</title><rect x="440.0" y="515.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="443.0" y="526.0"></text>
</g>
<g>
<title>pthread_cond_timedwait (5 samples, 0.03%)</title><rect x="440.4" y="515.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="443.4" y="526.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (4 samples, 0.02%)</title><rect x="440.9" y="515.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="443.9" y="526.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (4 samples, 0.02%)</title><rect x="441.2" y="515.0" width="0.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="444.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (273 samples, 1.63%)</title><rect x="441.6" y="579.0" width="19.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="444.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (269 samples, 1.61%)</title><rect x="441.9" y="563.0" width="19.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="444.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (267 samples, 1.60%)</title><rect x="442.1" y="547.0" width="18.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="445.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (147 samples, 0.88%)</title><rect x="460.9" y="579.0" width="10.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="463.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (17 samples, 0.10%)</title><rect x="462.7" y="563.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="465.7" y="574.0"></text>
</g>
<g>
<title>_res (4 samples, 0.02%)</title><rect x="462.9" y="547.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="465.9" y="558.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (10 samples, 0.06%)</title><rect x="463.2" y="547.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="466.2" y="558.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (104 samples, 0.62%)</title><rect x="463.9" y="563.0" width="7.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="466.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/TimeUnit.toNanos (4 samples, 0.02%)</title><rect x="471.3" y="595.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="474.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$237/297625770.run (738 samples, 4.41%)</title><rect x="471.7" y="627.0" width="52.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="474.7" y="638.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (737 samples, 4.40%)</title><rect x="471.8" y="611.0" width="51.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="474.8" y="622.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (736 samples, 4.40%)</title><rect x="471.8" y="595.0" width="51.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="474.8" y="606.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (727 samples, 4.34%)</title><rect x="472.5" y="579.0" width="51.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="475.5" y="590.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (727 samples, 4.34%)</title><rect x="472.5" y="563.0" width="51.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="475.5" y="574.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (727 samples, 4.34%)</title><rect x="472.5" y="547.0" width="51.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="475.5" y="558.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (722 samples, 4.31%)</title><rect x="472.8" y="531.0" width="50.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="475.8" y="542.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (721 samples, 4.31%)</title><rect x="472.9" y="515.0" width="50.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="475.9" y="526.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (721 samples, 4.31%)</title><rect x="472.9" y="499.0" width="50.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="475.9" y="510.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (716 samples, 4.28%)</title><rect x="473.2" y="483.0" width="50.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="476.2" y="494.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (715 samples, 4.27%)</title><rect x="473.2" y="467.0" width="50.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="476.2" y="478.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (106 samples, 0.63%)</title><rect x="473.5" y="451.0" width="7.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="476.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (94 samples, 0.56%)</title><rect x="473.7" y="435.0" width="6.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="476.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (4 samples, 0.02%)</title><rect x="474.8" y="419.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="477.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (75 samples, 0.45%)</title><rect x="475.1" y="419.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="478.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (73 samples, 0.44%)</title><rect x="475.1" y="403.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="478.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (73 samples, 0.44%)</title><rect x="475.1" y="387.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="478.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (24 samples, 0.14%)</title><rect x="475.9" y="371.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="478.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$248/577952506.apply (21 samples, 0.13%)</title><rect x="476.1" y="355.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="479.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (18 samples, 0.11%)</title><rect x="476.1" y="339.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="479.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (18 samples, 0.11%)</title><rect x="476.1" y="323.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="479.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (12 samples, 0.07%)</title><rect x="476.1" y="307.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="479.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (6 samples, 0.04%)</title><rect x="476.3" y="291.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="479.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (6 samples, 0.04%)</title><rect x="476.3" y="275.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="479.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.wrapForDebug (5 samples, 0.03%)</title><rect x="477.0" y="307.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="480.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (31 samples, 0.19%)</title><rect x="477.5" y="371.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="480.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (5 samples, 0.03%)</title><rect x="477.5" y="355.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="480.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.03%)</title><rect x="477.5" y="339.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="480.5" y="350.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.02%)</title><rect x="477.5" y="323.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="480.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (26 samples, 0.16%)</title><rect x="477.9" y="355.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="480.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$220/1881559820.apply (25 samples, 0.15%)</title><rect x="478.0" y="339.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="481.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (25 samples, 0.15%)</title><rect x="478.0" y="323.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="481.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (25 samples, 0.15%)</title><rect x="478.0" y="307.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="481.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$154/1991052763.apply (11 samples, 0.07%)</title><rect x="478.2" y="291.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="481.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (11 samples, 0.07%)</title><rect x="478.2" y="275.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="481.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (9 samples, 0.05%)</title><rect x="478.2" y="259.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="481.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (9 samples, 0.05%)</title><rect x="478.2" y="243.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="481.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.04%)</title><rect x="478.4" y="227.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="481.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.04%)</title><rect x="478.4" y="211.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="481.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$156/1859135568.apply (11 samples, 0.07%)</title><rect x="479.0" y="291.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="482.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (11 samples, 0.07%)</title><rect x="479.0" y="275.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="482.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (10 samples, 0.06%)</title><rect x="479.0" y="259.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="482.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (10 samples, 0.06%)</title><rect x="479.0" y="243.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="482.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (9 samples, 0.05%)</title><rect x="479.1" y="227.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="482.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$220/1881559820.apply (9 samples, 0.05%)</title><rect x="479.1" y="211.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="482.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (9 samples, 0.05%)</title><rect x="479.1" y="195.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="482.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (9 samples, 0.05%)</title><rect x="479.1" y="179.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="482.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$154/1991052763.apply (8 samples, 0.05%)</title><rect x="479.1" y="163.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="482.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (8 samples, 0.05%)</title><rect x="479.1" y="147.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="482.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (8 samples, 0.05%)</title><rect x="480.4" y="435.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="483.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (7 samples, 0.04%)</title><rect x="480.4" y="419.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="483.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (5 samples, 0.03%)</title><rect x="480.6" y="403.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="483.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedSuccessors (4 samples, 0.02%)</title><rect x="480.6" y="387.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="483.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (7 samples, 0.04%)</title><rect x="480.9" y="451.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="483.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (7 samples, 0.04%)</title><rect x="480.9" y="435.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="483.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (7 samples, 0.04%)</title><rect x="480.9" y="419.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="483.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (595 samples, 3.56%)</title><rect x="481.4" y="451.0" width="42.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="484.4" y="462.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (595 samples, 3.56%)</title><rect x="481.4" y="435.0" width="42.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="484.4" y="446.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (591 samples, 3.53%)</title><rect x="481.7" y="419.0" width="41.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="484.7" y="430.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (585 samples, 3.50%)</title><rect x="481.9" y="403.0" width="41.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="484.9" y="414.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$253/1252625978.run (7 samples, 0.04%)</title><rect x="482.2" y="387.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="485.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (7 samples, 0.04%)</title><rect x="482.2" y="371.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="485.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (574 samples, 3.43%)</title><rect x="482.7" y="387.0" width="40.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="485.7" y="398.0">jdk..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (562 samples, 3.36%)</title><rect x="482.7" y="371.0" width="39.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="485.7" y="382.0">jav..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (562 samples, 3.36%)</title><rect x="482.7" y="355.0" width="39.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="485.7" y="366.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (555 samples, 3.32%)</title><rect x="483.0" y="339.0" width="39.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="486.0" y="350.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (552 samples, 3.30%)</title><rect x="483.2" y="323.0" width="38.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="486.2" y="334.0">sun..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (4 samples, 0.02%)</title><rect x="483.3" y="307.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="486.3" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (7 samples, 0.04%)</title><rect x="483.6" y="307.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="486.6" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.04%)</title><rect x="483.6" y="291.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="486.6" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (7 samples, 0.04%)</title><rect x="483.6" y="275.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="486.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (518 samples, 3.10%)</title><rect x="484.1" y="307.0" width="36.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="487.1" y="318.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (509 samples, 3.04%)</title><rect x="484.5" y="291.0" width="35.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="487.5" y="302.0">sun..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_writev0 (8 samples, 0.05%)</title><rect x="485.4" y="275.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="488.4" y="286.0"></text>
</g>
<g>
<title>fdval (4 samples, 0.02%)</title><rect x="485.7" y="259.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="488.7" y="270.0"></text>
</g>
<g>
<title>writev (486 samples, 2.90%)</title><rect x="486.1" y="275.0" width="34.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="489.1" y="286.0">wr..</text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (21 samples, 0.13%)</title><rect x="520.6" y="307.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="523.6" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (9 samples, 0.05%)</title><rect x="521.1" y="291.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="524.1" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (9 samples, 0.05%)</title><rect x="521.1" y="275.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="524.1" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (6 samples, 0.04%)</title><rect x="521.2" y="259.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="524.2" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (4 samples, 0.02%)</title><rect x="521.8" y="291.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="524.8" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (9 samples, 0.05%)</title><rect x="522.3" y="371.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="525.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (4 samples, 0.02%)</title><rect x="523.4" y="451.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="526.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (4 samples, 0.02%)</title><rect x="523.4" y="435.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="526.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,429 samples, 8.54%)</title><rect x="523.7" y="627.0" width="100.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="526.7" y="638.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,427 samples, 8.53%)</title><rect x="523.9" y="611.0" width="100.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="526.9" y="622.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (614 samples, 3.67%)</title><rect x="524.2" y="595.0" width="43.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="527.2" y="606.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$189/1017919595.run (607 samples, 3.63%)</title><rect x="524.5" y="579.0" width="42.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="527.5" y="590.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (607 samples, 3.63%)</title><rect x="524.5" y="563.0" width="42.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="527.5" y="574.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (25 samples, 0.15%)</title><rect x="525.3" y="547.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="528.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (25 samples, 0.15%)</title><rect x="525.3" y="531.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="528.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (25 samples, 0.15%)</title><rect x="525.3" y="515.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="528.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (25 samples, 0.15%)</title><rect x="525.3" y="499.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="528.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (25 samples, 0.15%)</title><rect x="525.3" y="483.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="528.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (25 samples, 0.15%)</title><rect x="525.3" y="467.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="528.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (24 samples, 0.14%)</title><rect x="525.4" y="451.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="528.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (24 samples, 0.14%)</title><rect x="525.4" y="435.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="528.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (9 samples, 0.05%)</title><rect x="525.4" y="419.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="528.4" y="430.0"></text>
</g>
<g>
<title>java/util/HashSet.add (9 samples, 0.05%)</title><rect x="525.4" y="403.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="528.4" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.put (9 samples, 0.05%)</title><rect x="525.4" y="387.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="528.4" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (9 samples, 0.05%)</title><rect x="525.4" y="371.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="528.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (15 samples, 0.09%)</title><rect x="526.0" y="419.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="529.0" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (12 samples, 0.07%)</title><rect x="526.2" y="403.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="529.2" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (9 samples, 0.05%)</title><rect x="526.4" y="387.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="529.4" y="398.0"></text>
</g>
<g>
<title>write (8 samples, 0.05%)</title><rect x="526.5" y="371.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="529.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (569 samples, 3.40%)</title><rect x="527.2" y="547.0" width="40.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="530.2" y="558.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (9 samples, 0.05%)</title><rect x="527.2" y="531.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="530.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.02%)</title><rect x="527.5" y="515.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="530.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.02%)</title><rect x="527.5" y="499.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="530.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (560 samples, 3.35%)</title><rect x="527.8" y="531.0" width="39.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="530.8" y="542.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (558 samples, 3.33%)</title><rect x="528.0" y="515.0" width="39.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="531.0" y="526.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (557 samples, 3.33%)</title><rect x="528.0" y="499.0" width="39.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="531.0" y="510.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (330 samples, 1.97%)</title><rect x="528.1" y="483.0" width="23.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="531.1" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (328 samples, 1.96%)</title><rect x="528.2" y="467.0" width="23.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="531.2" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (323 samples, 1.93%)</title><rect x="528.6" y="451.0" width="22.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="531.6" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (323 samples, 1.93%)</title><rect x="528.6" y="435.0" width="22.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="531.6" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (322 samples, 1.92%)</title><rect x="528.7" y="419.0" width="22.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="531.7" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (318 samples, 1.90%)</title><rect x="528.7" y="403.0" width="22.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="531.7" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (318 samples, 1.90%)</title><rect x="528.7" y="387.0" width="22.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="531.7" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (10 samples, 0.06%)</title><rect x="528.7" y="371.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="531.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (281 samples, 1.68%)</title><rect x="529.4" y="371.0" width="19.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="532.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (281 samples, 1.68%)</title><rect x="529.4" y="355.0" width="19.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="532.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (213 samples, 1.27%)</title><rect x="529.9" y="339.0" width="15.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="532.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (7 samples, 0.04%)</title><rect x="530.3" y="323.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="533.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (7 samples, 0.04%)</title><rect x="530.3" y="307.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="533.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$250/1677809941.apply (4 samples, 0.02%)</title><rect x="530.9" y="323.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="533.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (4 samples, 0.02%)</title><rect x="530.9" y="307.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="533.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (4 samples, 0.02%)</title><rect x="530.9" y="291.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="533.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (4 samples, 0.02%)</title><rect x="530.9" y="275.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="533.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4 samples, 0.02%)</title><rect x="530.9" y="259.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="533.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.02%)</title><rect x="530.9" y="243.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="533.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$136/1630948186.apply (151 samples, 0.90%)</title><rect x="531.1" y="323.0" width="10.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="534.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (151 samples, 0.90%)</title><rect x="531.1" y="307.0" width="10.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="534.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (149 samples, 0.89%)</title><rect x="531.3" y="291.0" width="10.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="534.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (148 samples, 0.88%)</title><rect x="531.3" y="275.0" width="10.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="534.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (146 samples, 0.87%)</title><rect x="531.5" y="259.0" width="10.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="534.5" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (55 samples, 0.33%)</title><rect x="532.1" y="243.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="535.1" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (5 samples, 0.03%)</title><rect x="532.1" y="227.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="535.1" y="238.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (5 samples, 0.03%)</title><rect x="532.1" y="211.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="535.1" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (5 samples, 0.03%)</title><rect x="532.1" y="195.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="535.1" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (5 samples, 0.03%)</title><rect x="532.1" y="179.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="535.1" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (5 samples, 0.03%)</title><rect x="532.1" y="163.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="535.1" y="174.0"></text>
</g>
<g>
<title>java/util/Collection.stream (16 samples, 0.10%)</title><rect x="532.5" y="227.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="535.5" y="238.0"></text>
</g>
<g>
<title>java/util/List.spliterator (4 samples, 0.02%)</title><rect x="532.5" y="211.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="535.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (12 samples, 0.07%)</title><rect x="532.8" y="211.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="535.8" y="222.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.characteristics (5 samples, 0.03%)</title><rect x="533.0" y="195.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="536.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (30 samples, 0.18%)</title><rect x="533.6" y="227.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="536.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (30 samples, 0.18%)</title><rect x="533.6" y="211.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="536.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (30 samples, 0.18%)</title><rect x="533.6" y="195.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="536.6" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (17 samples, 0.10%)</title><rect x="534.5" y="179.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="537.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (15 samples, 0.09%)</title><rect x="534.5" y="163.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="537.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (14 samples, 0.08%)</title><rect x="534.6" y="147.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="537.6" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (12 samples, 0.07%)</title><rect x="534.7" y="131.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="537.7" y="142.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (10 samples, 0.06%)</title><rect x="534.7" y="115.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="537.7" y="126.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$List12.get (4 samples, 0.02%)</title><rect x="534.7" y="99.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="537.7" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (8 samples, 0.05%)</title><rect x="535.9" y="243.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="538.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5 samples, 0.03%)</title><rect x="536.1" y="227.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="539.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (72 samples, 0.43%)</title><rect x="536.7" y="243.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="539.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$266/1609474805.run (72 samples, 0.43%)</title><rect x="536.7" y="227.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="539.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (72 samples, 0.43%)</title><rect x="536.7" y="211.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="539.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.02%)</title><rect x="536.8" y="195.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="539.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (20 samples, 0.12%)</title><rect x="537.1" y="195.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="540.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (12 samples, 0.07%)</title><rect x="537.4" y="179.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="540.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (12 samples, 0.07%)</title><rect x="537.4" y="163.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="540.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.first (12 samples, 0.07%)</title><rect x="537.4" y="147.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="540.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.02%)</title><rect x="538.3" y="179.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="541.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.acquire (11 samples, 0.07%)</title><rect x="538.5" y="195.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="541.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (29 samples, 0.17%)</title><rect x="539.3" y="195.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="542.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (29 samples, 0.17%)</title><rect x="539.3" y="179.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="542.3" y="190.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (24 samples, 0.14%)</title><rect x="539.4" y="163.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="542.4" y="174.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (22 samples, 0.13%)</title><rect x="539.5" y="147.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="542.5" y="158.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (18 samples, 0.11%)</title><rect x="539.8" y="131.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="542.8" y="142.0"></text>
</g>
<g>
<title>JVM_IHashCode (12 samples, 0.07%)</title><rect x="539.8" y="115.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="542.8" y="126.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (6 samples, 0.04%)</title><rect x="540.1" y="99.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="543.1" y="110.0"></text>
</g>
<g>
<title>Java_java_lang_System_identityHashCode (4 samples, 0.02%)</title><rect x="540.7" y="115.0" width="0.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="543.7" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.02%)</title><rect x="541.1" y="163.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="544.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.02%)</title><rect x="541.1" y="147.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="544.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (4 samples, 0.02%)</title><rect x="541.5" y="195.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="544.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$223/1818542728.apply (45 samples, 0.27%)</title><rect x="541.8" y="323.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="544.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$5 (45 samples, 0.27%)</title><rect x="541.8" y="307.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="544.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (43 samples, 0.26%)</title><rect x="541.8" y="291.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="544.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (30 samples, 0.18%)</title><rect x="542.5" y="275.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="545.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (28 samples, 0.17%)</title><rect x="542.6" y="259.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="545.6" y="270.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (23 samples, 0.14%)</title><rect x="543.0" y="243.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="546.0" y="254.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (5 samples, 0.03%)</title><rect x="543.1" y="227.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="546.1" y="238.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (17 samples, 0.10%)</title><rect x="543.4" y="227.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="546.4" y="238.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (16 samples, 0.10%)</title><rect x="543.5" y="211.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="546.5" y="222.0"></text>
</g>
<g>
<title>JVM_IHashCode (11 samples, 0.07%)</title><rect x="543.6" y="195.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="546.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (45 samples, 0.27%)</title><rect x="545.0" y="339.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="548.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (41 samples, 0.25%)</title><rect x="545.2" y="323.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="548.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$224/1842993601.apply (40 samples, 0.24%)</title><rect x="545.3" y="307.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="548.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (40 samples, 0.24%)</title><rect x="545.3" y="291.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="548.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (33 samples, 0.20%)</title><rect x="545.4" y="275.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="548.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (33 samples, 0.20%)</title><rect x="545.4" y="259.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="548.4" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (32 samples, 0.19%)</title><rect x="545.5" y="243.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="548.5" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (32 samples, 0.19%)</title><rect x="545.5" y="227.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="548.5" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (16 samples, 0.10%)</title><rect x="545.7" y="211.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="548.7" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterDeletion (10 samples, 0.06%)</title><rect x="546.2" y="195.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="549.2" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (12 samples, 0.07%)</title><rect x="546.9" y="211.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="549.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (7 samples, 0.04%)</title><rect x="547.2" y="195.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="550.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (6 samples, 0.04%)</title><rect x="547.7" y="275.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="550.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (5 samples, 0.03%)</title><rect x="547.8" y="259.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="550.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.03%)</title><rect x="547.8" y="243.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="550.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (8 samples, 0.05%)</title><rect x="548.1" y="339.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="551.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (4 samples, 0.02%)</title><rect x="548.4" y="323.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="551.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.02%)</title><rect x="548.4" y="307.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="551.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$256/1416383859.apply (7 samples, 0.04%)</title><rect x="548.7" y="339.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="551.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$256/1416383859.apply (27 samples, 0.16%)</title><rect x="549.2" y="371.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="552.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (27 samples, 0.16%)</title><rect x="549.2" y="355.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="552.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (23 samples, 0.14%)</title><rect x="549.5" y="339.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="552.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (13 samples, 0.08%)</title><rect x="550.2" y="323.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="553.2" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.getLocalAddress (13 samples, 0.08%)</title><rect x="550.2" y="307.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="553.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.02%)</title><rect x="551.1" y="403.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="554.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (4 samples, 0.02%)</title><rect x="551.1" y="387.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="554.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (217 samples, 1.30%)</title><rect x="551.5" y="483.0" width="15.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="554.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (11 samples, 0.07%)</title><rect x="552.2" y="467.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="555.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (31 samples, 0.19%)</title><rect x="553.0" y="467.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="556.0" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (22 samples, 0.13%)</title><rect x="553.6" y="451.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="556.6" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (22 samples, 0.13%)</title><rect x="553.6" y="435.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="556.6" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (22 samples, 0.13%)</title><rect x="553.6" y="419.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="556.6" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (22 samples, 0.13%)</title><rect x="553.6" y="403.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="556.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (12 samples, 0.07%)</title><rect x="555.2" y="467.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="558.2" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (10 samples, 0.06%)</title><rect x="555.3" y="451.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="558.3" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (10 samples, 0.06%)</title><rect x="555.3" y="435.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="558.3" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (10 samples, 0.06%)</title><rect x="555.3" y="419.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="558.3" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.06%)</title><rect x="555.3" y="403.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="558.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (16 samples, 0.10%)</title><rect x="556.0" y="467.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="559.0" y="478.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (12 samples, 0.07%)</title><rect x="556.2" y="451.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="559.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (65 samples, 0.39%)</title><rect x="557.2" y="467.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="560.2" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (65 samples, 0.39%)</title><rect x="557.2" y="451.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="560.2" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (65 samples, 0.39%)</title><rect x="557.2" y="435.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="560.2" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (53 samples, 0.32%)</title><rect x="558.0" y="419.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="561.0" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/938808288.accept (51 samples, 0.30%)</title><rect x="558.1" y="403.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="561.1" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (47 samples, 0.28%)</title><rect x="558.4" y="387.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="561.4" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (16 samples, 0.10%)</title><rect x="559.7" y="371.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="562.7" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$124/787427873.accept (15 samples, 0.09%)</title><rect x="559.8" y="355.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="562.8" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (15 samples, 0.09%)</title><rect x="559.8" y="339.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="562.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$67/1522132780.test (6 samples, 0.04%)</title><rect x="560.4" y="323.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="563.4" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (13 samples, 0.08%)</title><rect x="560.8" y="371.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="563.8" y="382.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.02%)</title><rect x="561.4" y="355.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="564.4" y="366.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.02%)</title><rect x="561.4" y="339.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="564.4" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (4 samples, 0.02%)</title><rect x="561.4" y="323.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="564.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (72 samples, 0.43%)</title><rect x="561.7" y="467.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="564.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (52 samples, 0.31%)</title><rect x="563.1" y="451.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="566.1" y="462.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (22 samples, 0.13%)</title><rect x="563.2" y="435.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="566.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (12 samples, 0.07%)</title><rect x="563.9" y="419.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="566.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (13 samples, 0.08%)</title><rect x="564.8" y="435.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="567.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (12 samples, 0.07%)</title><rect x="564.8" y="419.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="567.8" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (15 samples, 0.09%)</title><rect x="565.7" y="435.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="568.7" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (7 samples, 0.04%)</title><rect x="565.8" y="419.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="568.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$204/1787594300.accept (7 samples, 0.04%)</title><rect x="566.8" y="483.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="569.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (7 samples, 0.04%)</title><rect x="566.8" y="467.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="569.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (808 samples, 4.83%)</title><rect x="567.5" y="595.0" width="57.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="570.5" y="606.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (801 samples, 4.79%)</title><rect x="568.0" y="579.0" width="56.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="571.0" y="590.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (796 samples, 4.76%)</title><rect x="568.2" y="563.0" width="56.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="571.2" y="574.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$189/1017919595.run (794 samples, 4.75%)</title><rect x="568.3" y="547.0" width="56.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="571.3" y="558.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (794 samples, 4.75%)</title><rect x="568.3" y="531.0" width="56.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="571.3" y="542.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (11 samples, 0.07%)</title><rect x="568.3" y="515.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="571.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (4 samples, 0.02%)</title><rect x="568.3" y="499.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="571.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (4 samples, 0.02%)</title><rect x="568.3" y="483.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="571.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (5 samples, 0.03%)</title><rect x="568.6" y="499.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="571.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (777 samples, 4.64%)</title><rect x="569.1" y="515.0" width="54.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="572.1" y="526.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (777 samples, 4.64%)</title><rect x="569.1" y="499.0" width="54.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="572.1" y="510.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (777 samples, 4.64%)</title><rect x="569.1" y="483.0" width="54.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="572.1" y="494.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (777 samples, 4.64%)</title><rect x="569.1" y="467.0" width="54.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="572.1" y="478.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (777 samples, 4.64%)</title><rect x="569.1" y="451.0" width="54.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="572.1" y="462.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (777 samples, 4.64%)</title><rect x="569.1" y="435.0" width="54.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="572.1" y="446.0">jdk/i..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (5 samples, 0.03%)</title><rect x="569.4" y="419.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="572.4" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.03%)</title><rect x="569.4" y="403.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="572.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$268/2092591718.run (530 samples, 3.17%)</title><rect x="569.7" y="419.0" width="37.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="572.7" y="430.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (530 samples, 3.17%)</title><rect x="569.7" y="403.0" width="37.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="572.7" y="414.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (527 samples, 3.15%)</title><rect x="569.9" y="387.0" width="37.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="572.9" y="398.0">jdk..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (32 samples, 0.19%)</title><rect x="569.9" y="371.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="572.9" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (17 samples, 0.10%)</title><rect x="569.9" y="355.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="572.9" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (17 samples, 0.10%)</title><rect x="569.9" y="339.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="572.9" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (17 samples, 0.10%)</title><rect x="569.9" y="323.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="572.9" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (17 samples, 0.10%)</title><rect x="569.9" y="307.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="572.9" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (17 samples, 0.10%)</title><rect x="569.9" y="291.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="572.9" y="302.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (13 samples, 0.08%)</title><rect x="570.1" y="275.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="573.1" y="286.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (13 samples, 0.08%)</title><rect x="570.1" y="259.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="573.1" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (11 samples, 0.07%)</title><rect x="570.3" y="243.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="573.3" y="254.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (8 samples, 0.05%)</title><rect x="570.5" y="227.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="573.5" y="238.0"></text>
</g>
<g>
<title>java/util/Collection.stream (6 samples, 0.04%)</title><rect x="571.1" y="355.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="574.1" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (6 samples, 0.04%)</title><rect x="571.1" y="339.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="574.1" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (6 samples, 0.04%)</title><rect x="571.1" y="323.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="574.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (9 samples, 0.05%)</title><rect x="571.5" y="355.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="574.5" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (9 samples, 0.05%)</title><rect x="571.5" y="339.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="574.5" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (9 samples, 0.05%)</title><rect x="571.5" y="323.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="574.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (492 samples, 2.94%)</title><rect x="572.2" y="371.0" width="34.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="575.2" y="382.0">jd..</text>
</g>
<g>
<title>java/time/Instant.now (18 samples, 0.11%)</title><rect x="572.2" y="355.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="575.2" y="366.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (18 samples, 0.11%)</title><rect x="572.2" y="339.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="575.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (13 samples, 0.08%)</title><rect x="572.5" y="323.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="575.5" y="334.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (11 samples, 0.07%)</title><rect x="572.7" y="307.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="575.7" y="318.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.03%)</title><rect x="572.8" y="291.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="575.8" y="302.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (4 samples, 0.02%)</title><rect x="573.2" y="291.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="576.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (474 samples, 2.83%)</title><rect x="573.4" y="355.0" width="33.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="576.4" y="366.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (358 samples, 2.14%)</title><rect x="573.9" y="339.0" width="25.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="576.9" y="350.0">j..</text>
</g>
<g>
<title>java/time/Instant.plus (4 samples, 0.02%)</title><rect x="598.6" y="323.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="601.6" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (4 samples, 0.02%)</title><rect x="598.6" y="307.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="601.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (16 samples, 0.10%)</title><rect x="599.2" y="339.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="602.2" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.get (14 samples, 0.08%)</title><rect x="599.3" y="323.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="602.3" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (11 samples, 0.07%)</title><rect x="599.3" y="307.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="602.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (9 samples, 0.05%)</title><rect x="599.5" y="291.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="602.5" y="302.0"></text>
</g>
<g>
<title>java/util/Objects.equals (9 samples, 0.05%)</title><rect x="599.5" y="275.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="602.5" y="286.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (9 samples, 0.05%)</title><rect x="599.5" y="259.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="602.5" y="270.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (9 samples, 0.05%)</title><rect x="599.5" y="243.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="602.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (93 samples, 0.56%)</title><rect x="600.3" y="339.0" width="6.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="603.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (89 samples, 0.53%)</title><rect x="600.6" y="323.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="603.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (26 samples, 0.16%)</title><rect x="600.6" y="307.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="603.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (13 samples, 0.08%)</title><rect x="601.5" y="291.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="604.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (13 samples, 0.08%)</title><rect x="601.5" y="275.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="604.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (9 samples, 0.05%)</title><rect x="601.7" y="259.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="604.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (9 samples, 0.05%)</title><rect x="601.7" y="243.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="604.7" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (9 samples, 0.05%)</title><rect x="601.7" y="227.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="604.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (63 samples, 0.38%)</title><rect x="602.4" y="307.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="605.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (63 samples, 0.38%)</title><rect x="602.4" y="291.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="605.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (35 samples, 0.21%)</title><rect x="602.4" y="275.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="605.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (35 samples, 0.21%)</title><rect x="602.4" y="259.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="605.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (35 samples, 0.21%)</title><rect x="602.4" y="243.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="605.4" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (34 samples, 0.20%)</title><rect x="602.5" y="227.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="605.5" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (33 samples, 0.20%)</title><rect x="602.6" y="211.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="605.6" y="222.0"></text>
</g>
<g>
<title>write (33 samples, 0.20%)</title><rect x="602.6" y="195.0" width="2.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="605.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (25 samples, 0.15%)</title><rect x="605.1" y="275.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="608.1" y="286.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (23 samples, 0.14%)</title><rect x="605.3" y="259.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="608.3" y="270.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (23 samples, 0.14%)</title><rect x="605.3" y="243.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="608.3" y="254.0"></text>
</g>
<g>
<title>__psynch_cvsignal (11 samples, 0.07%)</title><rect x="605.3" y="227.0" width="0.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="608.3" y="238.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (8 samples, 0.05%)</title><rect x="606.1" y="227.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="609.1" y="238.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (8 samples, 0.05%)</title><rect x="606.1" y="211.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="609.1" y="222.0"></text>
</g>
<g>
<title>__psynch_mutexwait (8 samples, 0.05%)</title><rect x="606.1" y="195.0" width="0.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="609.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$269/536020518.accept (20 samples, 0.12%)</title><rect x="607.1" y="419.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="610.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (20 samples, 0.12%)</title><rect x="607.1" y="403.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="610.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (20 samples, 0.12%)</title><rect x="607.1" y="387.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="610.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (18 samples, 0.11%)</title><rect x="607.1" y="371.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="610.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (18 samples, 0.11%)</title><rect x="607.1" y="355.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="610.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (17 samples, 0.10%)</title><rect x="607.2" y="339.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="610.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (17 samples, 0.10%)</title><rect x="607.2" y="323.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="610.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.02%)</title><rect x="607.2" y="307.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="610.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (4 samples, 0.02%)</title><rect x="607.2" y="291.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="610.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$273/419320299.accept (5 samples, 0.03%)</title><rect x="607.4" y="307.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="610.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$2 (5 samples, 0.03%)</title><rect x="607.4" y="291.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="610.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.tryRelease (4 samples, 0.02%)</title><rect x="607.5" y="275.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="610.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (4 samples, 0.02%)</title><rect x="607.5" y="259.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="610.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (4 samples, 0.02%)</title><rect x="607.5" y="243.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="610.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$274/801904823.accept (8 samples, 0.05%)</title><rect x="607.8" y="307.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="610.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (8 samples, 0.05%)</title><rect x="607.8" y="291.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="610.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (8 samples, 0.05%)</title><rect x="607.8" y="275.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="610.8" y="286.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (8 samples, 0.05%)</title><rect x="607.8" y="259.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="610.8" y="270.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (8 samples, 0.05%)</title><rect x="607.8" y="243.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="610.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (191 samples, 1.14%)</title><rect x="608.5" y="419.0" width="13.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="611.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (191 samples, 1.14%)</title><rect x="608.5" y="403.0" width="13.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="611.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (189 samples, 1.13%)</title><rect x="608.6" y="387.0" width="13.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="611.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (185 samples, 1.11%)</title><rect x="608.6" y="371.0" width="13.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="611.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (185 samples, 1.11%)</title><rect x="608.6" y="355.0" width="13.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="611.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (185 samples, 1.11%)</title><rect x="608.6" y="339.0" width="13.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="611.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (185 samples, 1.11%)</title><rect x="608.6" y="323.0" width="13.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="611.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$276/128011993.accept (185 samples, 1.11%)</title><rect x="608.6" y="307.0" width="13.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="611.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (182 samples, 1.09%)</title><rect x="608.9" y="291.0" width="12.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="611.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (181 samples, 1.08%)</title><rect x="608.9" y="275.0" width="12.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="611.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (181 samples, 1.08%)</title><rect x="608.9" y="259.0" width="12.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="611.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (9 samples, 0.05%)</title><rect x="609.1" y="243.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="612.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$282/1443783454.apply (6 samples, 0.04%)</title><rect x="609.3" y="227.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="612.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (6 samples, 0.04%)</title><rect x="609.3" y="211.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="612.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (167 samples, 1.00%)</title><rect x="609.8" y="243.0" width="11.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="612.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (164 samples, 0.98%)</title><rect x="610.0" y="227.0" width="11.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="613.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (161 samples, 0.96%)</title><rect x="610.0" y="211.0" width="11.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="613.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (157 samples, 0.94%)</title><rect x="610.1" y="195.0" width="11.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="613.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (157 samples, 0.94%)</title><rect x="610.1" y="179.0" width="11.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="613.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (149 samples, 0.89%)</title><rect x="610.7" y="163.0" width="10.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="613.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (143 samples, 0.85%)</title><rect x="611.1" y="147.0" width="10.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="614.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (141 samples, 0.84%)</title><rect x="611.2" y="131.0" width="10.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="614.2" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (140 samples, 0.84%)</title><rect x="611.3" y="115.0" width="9.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="614.3" y="126.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (129 samples, 0.77%)</title><rect x="611.8" y="99.0" width="9.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="614.8" y="110.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (4 samples, 0.02%)</title><rect x="612.4" y="83.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="615.4" y="94.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.02%)</title><rect x="612.9" y="83.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="615.9" y="94.0"></text>
</g>
<g>
<title>__psynch_cvsignal (104 samples, 0.62%)</title><rect x="613.2" y="83.0" width="7.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="616.2" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (4 samples, 0.02%)</title><rect x="621.7" y="371.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="624.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (17 samples, 0.10%)</title><rect x="622.0" y="419.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="625.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (16 samples, 0.10%)</title><rect x="622.0" y="403.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="625.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (15 samples, 0.09%)</title><rect x="622.1" y="387.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="625.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (15 samples, 0.09%)</title><rect x="622.1" y="371.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="625.1" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (15 samples, 0.09%)</title><rect x="622.1" y="355.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="625.1" y="366.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (4 samples, 0.02%)</title><rect x="622.4" y="339.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="625.4" y="350.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (4 samples, 0.02%)</title><rect x="622.4" y="323.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="625.4" y="334.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.&lt;init&gt; (4 samples, 0.02%)</title><rect x="622.4" y="307.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="625.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.sliceWithLimitedCapacity (10 samples, 0.06%)</title><rect x="623.2" y="419.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="626.2" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.slice (7 samples, 0.04%)</title><rect x="623.4" y="403.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="626.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (6 samples, 0.04%)</title><rect x="623.9" y="515.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (6 samples, 0.04%)</title><rect x="623.9" y="499.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="626.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (6 samples, 0.04%)</title><rect x="623.9" y="483.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="626.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (6 samples, 0.04%)</title><rect x="623.9" y="467.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="626.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica$$Lambda$258/1838535232.run (521 samples, 3.11%)</title><rect x="624.5" y="627.0" width="36.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="627.5" y="638.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.lambda$asyncAct$5 (520 samples, 3.11%)</title><rect x="624.6" y="611.0" width="36.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="627.6" y="622.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (281 samples, 1.68%)</title><rect x="624.6" y="595.0" width="19.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="627.6" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (271 samples, 1.62%)</title><rect x="625.0" y="579.0" width="19.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="628.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (12 samples, 0.07%)</title><rect x="625.1" y="563.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="628.1" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (258 samples, 1.54%)</title><rect x="625.9" y="563.0" width="18.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="628.9" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (258 samples, 1.54%)</title><rect x="625.9" y="547.0" width="18.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="628.9" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (252 samples, 1.51%)</title><rect x="626.3" y="531.0" width="17.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="629.3" y="542.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (250 samples, 1.49%)</title><rect x="626.4" y="515.0" width="17.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="629.4" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.02%)</title><rect x="626.4" y="499.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="629.4" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (4 samples, 0.02%)</title><rect x="626.4" y="483.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="629.4" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (246 samples, 1.47%)</title><rect x="626.7" y="499.0" width="17.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="629.7" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (244 samples, 1.46%)</title><rect x="626.8" y="483.0" width="17.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="629.8" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (244 samples, 1.46%)</title><rect x="626.8" y="467.0" width="17.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="629.8" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (231 samples, 1.38%)</title><rect x="627.0" y="451.0" width="16.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="630.0" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (231 samples, 1.38%)</title><rect x="627.0" y="435.0" width="16.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="630.0" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (231 samples, 1.38%)</title><rect x="627.0" y="419.0" width="16.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="630.0" y="430.0"></text>
</g>
<g>
<title>write (220 samples, 1.31%)</title><rect x="627.8" y="403.0" width="15.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="630.8" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (8 samples, 0.05%)</title><rect x="643.3" y="451.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="646.3" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (6 samples, 0.04%)</title><rect x="643.5" y="435.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="646.5" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.next (4 samples, 0.02%)</title><rect x="643.6" y="419.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="646.6" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.03%)</title><rect x="644.1" y="579.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="647.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica$$Lambda$306/1430989963.act (238 samples, 1.42%)</title><rect x="644.5" y="595.0" width="16.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="647.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.lambda$execGet$4 (238 samples, 1.42%)</title><rect x="644.5" y="579.0" width="16.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="647.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.get (238 samples, 1.42%)</title><rect x="644.5" y="563.0" width="16.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="647.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/LSMDao.getCell (221 samples, 1.32%)</title><rect x="645.0" y="547.0" width="15.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="648.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (14 samples, 0.08%)</title><rect x="645.2" y="531.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="648.2" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (12 samples, 0.07%)</title><rect x="645.2" y="515.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="648.2" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (9 samples, 0.05%)</title><rect x="645.4" y="499.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="648.4" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8 samples, 0.05%)</title><rect x="645.4" y="483.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="648.4" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8 samples, 0.05%)</title><rect x="645.4" y="467.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="648.4" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8 samples, 0.05%)</title><rect x="645.4" y="451.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="648.4" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.05%)</title><rect x="645.4" y="435.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="648.4" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.05%)</title><rect x="645.4" y="419.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="648.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5 samples, 0.03%)</title><rect x="645.4" y="403.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="648.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/LSMDao.getIterator (202 samples, 1.21%)</title><rect x="646.3" y="531.0" width="14.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="649.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$ValueIterator.next (7 samples, 0.04%)</title><rect x="646.6" y="515.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="649.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.advance (7 samples, 0.04%)</title><rect x="646.6" y="499.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="649.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (8 samples, 0.05%)</title><rect x="647.1" y="515.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="650.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$ValueIterator.&lt;init&gt; (8 samples, 0.05%)</title><rect x="647.1" y="499.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="650.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.&lt;init&gt; (8 samples, 0.05%)</title><rect x="647.1" y="483.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="650.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.advance (6 samples, 0.04%)</title><rect x="647.2" y="467.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="650.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.iterator (76 samples, 0.45%)</title><rect x="647.6" y="515.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="650.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable$1.&lt;init&gt; (76 samples, 0.45%)</title><rect x="647.6" y="499.0" width="5.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="650.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.position (76 samples, 0.45%)</title><rect x="647.6" y="483.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="650.6" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (22 samples, 0.13%)</title><rect x="647.7" y="467.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="650.7" y="478.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (21 samples, 0.13%)</title><rect x="647.8" y="451.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="650.8" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (6 samples, 0.04%)</title><rect x="648.1" y="435.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="651.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (6 samples, 0.04%)</title><rect x="648.6" y="435.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="651.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.keyAt (53 samples, 0.32%)</title><rect x="649.3" y="467.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="652.3" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (21 samples, 0.13%)</title><rect x="649.3" y="451.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="652.3" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (21 samples, 0.13%)</title><rect x="649.3" y="435.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="652.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (21 samples, 0.13%)</title><rect x="649.3" y="419.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="652.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (21 samples, 0.13%)</title><rect x="649.3" y="403.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="652.3" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (7 samples, 0.04%)</title><rect x="650.7" y="451.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="653.7" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (7 samples, 0.04%)</title><rect x="650.7" y="435.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="653.7" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="650.7" y="419.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="653.7" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (6 samples, 0.04%)</title><rect x="650.8" y="403.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="653.8" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.04%)</title><rect x="650.8" y="387.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="653.8" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.04%)</title><rect x="650.8" y="371.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="653.8" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="651.0" y="355.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="654.0" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (5 samples, 0.03%)</title><rect x="651.2" y="451.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="654.2" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.02%)</title><rect x="651.3" y="435.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="654.3" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="651.3" y="419.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="654.3" y="430.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (19 samples, 0.11%)</title><rect x="651.6" y="451.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="654.6" y="462.0"></text>
</g>
<g>
<title>java/nio/Bits.swap (19 samples, 0.11%)</title><rect x="651.6" y="435.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="654.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/LSMDao.getCellsIterator (42 samples, 0.25%)</title><rect x="653.0" y="515.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="656.0" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (30 samples, 0.18%)</title><rect x="653.0" y="499.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="656.0" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (30 samples, 0.18%)</title><rect x="653.0" y="483.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="656.0" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (21 samples, 0.13%)</title><rect x="653.4" y="467.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="656.4" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (21 samples, 0.13%)</title><rect x="653.4" y="451.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="656.4" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (21 samples, 0.13%)</title><rect x="653.4" y="435.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="656.4" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (21 samples, 0.13%)</title><rect x="653.4" y="419.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="656.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (21 samples, 0.13%)</title><rect x="653.4" y="403.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="656.4" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (21 samples, 0.13%)</title><rect x="653.4" y="387.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="656.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (19 samples, 0.11%)</title><rect x="653.4" y="371.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="656.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (12 samples, 0.07%)</title><rect x="653.4" y="355.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="656.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.04%)</title><rect x="653.4" y="339.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="656.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (6 samples, 0.04%)</title><rect x="653.4" y="323.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="656.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable$1.next (6 samples, 0.04%)</title><rect x="653.4" y="307.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="656.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable$1.next (6 samples, 0.04%)</title><rect x="653.4" y="291.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="656.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.cellAt (6 samples, 0.04%)</title><rect x="653.4" y="275.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="656.4" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (5 samples, 0.03%)</title><rect x="653.4" y="259.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="656.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/MemoryTablePool$$Lambda$307/822626118.apply (6 samples, 0.04%)</title><rect x="653.8" y="339.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="656.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/Cell.getKey (6 samples, 0.04%)</title><rect x="653.8" y="323.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="656.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable$1.next (7 samples, 0.04%)</title><rect x="654.3" y="355.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="657.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable$1.next (7 samples, 0.04%)</title><rect x="654.3" y="339.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="657.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.cellAt (7 samples, 0.04%)</title><rect x="654.3" y="323.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="657.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (12 samples, 0.07%)</title><rect x="655.1" y="499.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="658.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (12 samples, 0.07%)</title><rect x="655.1" y="483.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="658.1" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (11 samples, 0.07%)</title><rect x="655.2" y="467.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="658.2" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (10 samples, 0.06%)</title><rect x="655.3" y="451.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="658.3" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (10 samples, 0.06%)</title><rect x="655.3" y="435.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="658.3" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (10 samples, 0.06%)</title><rect x="655.3" y="419.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="658.3" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (10 samples, 0.06%)</title><rect x="655.3" y="403.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="658.3" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.06%)</title><rect x="655.3" y="387.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="658.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.06%)</title><rect x="655.3" y="371.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="658.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5 samples, 0.03%)</title><rect x="655.3" y="355.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="658.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (5 samples, 0.03%)</title><rect x="655.3" y="339.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="658.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.02%)</title><rect x="655.3" y="323.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="658.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (4 samples, 0.02%)</title><rect x="655.3" y="307.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="658.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable$1.next (4 samples, 0.02%)</title><rect x="655.3" y="291.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="658.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable$1.next (4 samples, 0.02%)</title><rect x="655.3" y="275.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="658.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.cellAt (4 samples, 0.02%)</title><rect x="655.3" y="259.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="658.3" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (4 samples, 0.02%)</title><rect x="655.3" y="243.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="658.3" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$293/1525323786.compare (5 samples, 0.03%)</title><rect x="655.6" y="355.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="658.6" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (5 samples, 0.03%)</title><rect x="655.6" y="339.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="658.6" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$304/764283472.compare (5 samples, 0.03%)</title><rect x="655.6" y="323.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="658.6" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (5 samples, 0.03%)</title><rect x="655.6" y="307.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="658.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/MemoryTablePool.iterator (65 samples, 0.39%)</title><rect x="656.0" y="515.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="659.0" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (7 samples, 0.04%)</title><rect x="656.0" y="499.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="659.0" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (7 samples, 0.04%)</title><rect x="656.0" y="483.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="659.0" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (4 samples, 0.02%)</title><rect x="656.0" y="467.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="659.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (4 samples, 0.02%)</title><rect x="656.5" y="499.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="659.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (4 samples, 0.02%)</title><rect x="656.5" y="483.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="659.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (4 samples, 0.02%)</title><rect x="656.5" y="467.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="659.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (9 samples, 0.05%)</title><rect x="656.8" y="499.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="659.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (9 samples, 0.05%)</title><rect x="656.8" y="483.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="659.8" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.03%)</title><rect x="657.1" y="467.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="660.1" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (5 samples, 0.03%)</title><rect x="657.1" y="451.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="660.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable$1.next (5 samples, 0.03%)</title><rect x="657.1" y="435.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="660.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable$1.next (5 samples, 0.03%)</title><rect x="657.1" y="419.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="660.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.cellAt (5 samples, 0.03%)</title><rect x="657.1" y="403.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="660.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/MemTable.iterator (44 samples, 0.26%)</title><rect x="657.4" y="499.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="660.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (43 samples, 0.26%)</title><rect x="657.5" y="483.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="660.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (43 samples, 0.26%)</title><rect x="657.5" y="467.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="660.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (43 samples, 0.26%)</title><rect x="657.5" y="451.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="660.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (43 samples, 0.26%)</title><rect x="657.5" y="435.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="660.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (43 samples, 0.26%)</title><rect x="657.5" y="419.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="660.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (41 samples, 0.25%)</title><rect x="657.6" y="403.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="660.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (20 samples, 0.12%)</title><rect x="659.1" y="387.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="662.1" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (19 samples, 0.11%)</title><rect x="659.2" y="371.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="662.2" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.05%)</title><rect x="659.9" y="355.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="662.9" y="366.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (9 samples, 0.05%)</title><rect x="659.9" y="339.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="662.9" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.04%)</title><rect x="660.0" y="323.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="663.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/Value.getData (10 samples, 0.06%)</title><rect x="660.5" y="547.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="663.5" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (10 samples, 0.06%)</title><rect x="660.5" y="531.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="663.5" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (10 samples, 0.06%)</title><rect x="660.5" y="515.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="663.5" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (5 samples, 0.03%)</title><rect x="660.8" y="499.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="663.8" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="660.8" y="483.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="663.8" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="660.8" y="467.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="663.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (1,319 samples, 7.88%)</title><rect x="661.2" y="675.0" width="93.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="664.2" y="686.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (1,319 samples, 7.88%)</title><rect x="661.2" y="659.0" width="93.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="664.2" y="670.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (370 samples, 2.21%)</title><rect x="662.0" y="643.0" width="26.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="665.0" y="654.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (357 samples, 2.13%)</title><rect x="662.7" y="627.0" width="25.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="665.7" y="638.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (6 samples, 0.04%)</title><rect x="662.8" y="611.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="665.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (348 samples, 2.08%)</title><rect x="663.4" y="611.0" width="24.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="666.4" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (111 samples, 0.66%)</title><rect x="663.4" y="595.0" width="7.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="666.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (111 samples, 0.66%)</title><rect x="663.4" y="579.0" width="7.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="666.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils$$Lambda$113/949432318.get (108 samples, 0.65%)</title><rect x="663.6" y="563.0" width="7.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="666.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils.lambda$replication$6 (108 samples, 0.65%)</title><rect x="663.6" y="547.0" width="7.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="666.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica$$Lambda$306/1430989963.act (104 samples, 0.62%)</title><rect x="663.9" y="531.0" width="7.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="666.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.lambda$execGet$4 (104 samples, 0.62%)</title><rect x="663.9" y="515.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="666.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.get (104 samples, 0.62%)</title><rect x="663.9" y="499.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="666.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/LSMDao.getCell (98 samples, 0.59%)</title><rect x="664.1" y="483.0" width="6.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="667.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (10 samples, 0.06%)</title><rect x="664.1" y="467.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="667.1" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.05%)</title><rect x="664.1" y="451.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="667.1" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (9 samples, 0.05%)</title><rect x="664.1" y="435.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="667.1" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8 samples, 0.05%)</title><rect x="664.1" y="419.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="667.1" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (7 samples, 0.04%)</title><rect x="664.2" y="403.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="667.2" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (7 samples, 0.04%)</title><rect x="664.2" y="387.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="667.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.04%)</title><rect x="664.2" y="371.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="667.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.04%)</title><rect x="664.2" y="355.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="667.2" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$293/1525323786.compare (5 samples, 0.03%)</title><rect x="664.3" y="339.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="667.3" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.02%)</title><rect x="664.4" y="323.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="667.4" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$304/764283472.compare (4 samples, 0.02%)</title><rect x="664.4" y="307.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="667.4" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (4 samples, 0.02%)</title><rect x="664.4" y="291.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="667.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/LSMDao.getIterator (88 samples, 0.53%)</title><rect x="664.8" y="467.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="667.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.03%)</title><rect x="665.3" y="451.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="668.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$ValueIterator.&lt;init&gt; (4 samples, 0.02%)</title><rect x="665.3" y="435.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="668.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.iterator (23 samples, 0.14%)</title><rect x="665.7" y="451.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="668.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable$1.&lt;init&gt; (23 samples, 0.14%)</title><rect x="665.7" y="435.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="668.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.position (22 samples, 0.13%)</title><rect x="665.8" y="419.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="668.8" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (12 samples, 0.07%)</title><rect x="665.8" y="403.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="668.8" y="414.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (10 samples, 0.06%)</title><rect x="665.8" y="387.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="668.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.keyAt (10 samples, 0.06%)</title><rect x="666.6" y="403.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="669.6" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (5 samples, 0.03%)</title><rect x="666.7" y="387.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="669.7" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (5 samples, 0.03%)</title><rect x="666.7" y="371.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="669.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (5 samples, 0.03%)</title><rect x="666.7" y="355.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="669.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (5 samples, 0.03%)</title><rect x="666.7" y="339.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="669.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/LSMDao.getCellsIterator (26 samples, 0.16%)</title><rect x="667.3" y="451.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="670.3" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (17 samples, 0.10%)</title><rect x="667.3" y="435.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="670.3" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (17 samples, 0.10%)</title><rect x="667.3" y="419.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="670.3" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (13 samples, 0.08%)</title><rect x="667.6" y="403.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="670.6" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (13 samples, 0.08%)</title><rect x="667.6" y="387.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="670.6" y="398.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (13 samples, 0.08%)</title><rect x="667.6" y="371.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="670.6" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (13 samples, 0.08%)</title><rect x="667.6" y="355.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="670.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (13 samples, 0.08%)</title><rect x="667.6" y="339.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="670.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (13 samples, 0.08%)</title><rect x="667.6" y="323.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="670.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (12 samples, 0.07%)</title><rect x="667.6" y="307.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="670.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (9 samples, 0.05%)</title><rect x="667.6" y="291.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="670.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.03%)</title><rect x="667.6" y="275.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="670.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (4 samples, 0.02%)</title><rect x="667.6" y="259.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="670.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/MemoryTablePool$$Lambda$307/822626118.apply (4 samples, 0.02%)</title><rect x="667.9" y="275.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="670.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/Cell.getKey (4 samples, 0.02%)</title><rect x="667.9" y="259.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="670.9" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.02%)</title><rect x="667.9" y="243.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="670.9" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (4 samples, 0.02%)</title><rect x="667.9" y="227.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="670.9" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="667.9" y="211.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="670.9" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="667.9" y="195.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="670.9" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="667.9" y="179.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="670.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (9 samples, 0.05%)</title><rect x="668.5" y="435.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="671.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (9 samples, 0.05%)</title><rect x="668.5" y="419.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="671.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8 samples, 0.05%)</title><rect x="668.6" y="403.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="671.6" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8 samples, 0.05%)</title><rect x="668.6" y="387.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="671.6" y="398.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8 samples, 0.05%)</title><rect x="668.6" y="371.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="671.6" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8 samples, 0.05%)</title><rect x="668.6" y="355.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="671.6" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8 samples, 0.05%)</title><rect x="668.6" y="339.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="671.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.05%)</title><rect x="668.6" y="323.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="671.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.05%)</title><rect x="668.6" y="307.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="671.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (6 samples, 0.04%)</title><rect x="668.6" y="291.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="671.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable$1.next (4 samples, 0.02%)</title><rect x="668.7" y="275.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="671.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable$1.next (4 samples, 0.02%)</title><rect x="668.7" y="259.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="671.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.cellAt (4 samples, 0.02%)</title><rect x="668.7" y="243.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="671.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/MemoryTablePool.iterator (26 samples, 0.16%)</title><rect x="669.1" y="451.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="672.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (6 samples, 0.04%)</title><rect x="669.3" y="435.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="672.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (6 samples, 0.04%)</title><rect x="669.3" y="419.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="672.3" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.03%)</title><rect x="669.4" y="403.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="672.4" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (4 samples, 0.02%)</title><rect x="669.4" y="387.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="672.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable$1.next (4 samples, 0.02%)</title><rect x="669.4" y="371.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="672.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable$1.next (4 samples, 0.02%)</title><rect x="669.4" y="355.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="672.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.cellAt (4 samples, 0.02%)</title><rect x="669.4" y="339.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="672.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/MemTable.iterator (18 samples, 0.11%)</title><rect x="669.7" y="435.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="672.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (18 samples, 0.11%)</title><rect x="669.7" y="419.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="672.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (18 samples, 0.11%)</title><rect x="669.7" y="403.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="672.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (18 samples, 0.11%)</title><rect x="669.7" y="387.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="672.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (17 samples, 0.10%)</title><rect x="669.8" y="371.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="672.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (17 samples, 0.10%)</title><rect x="669.8" y="355.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="672.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (17 samples, 0.10%)</title><rect x="669.8" y="339.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="672.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (12 samples, 0.07%)</title><rect x="670.1" y="323.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="673.1" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (12 samples, 0.07%)</title><rect x="670.1" y="307.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="673.1" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.03%)</title><rect x="670.6" y="291.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="673.6" y="302.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.03%)</title><rect x="670.6" y="275.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="673.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/Value.getData (4 samples, 0.02%)</title><rect x="671.0" y="483.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="674.0" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4 samples, 0.02%)</title><rect x="671.0" y="467.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="674.0" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4 samples, 0.02%)</title><rect x="671.0" y="451.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="674.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (236 samples, 1.41%)</title><rect x="671.3" y="595.0" width="16.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="674.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (235 samples, 1.40%)</title><rect x="671.3" y="579.0" width="16.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="674.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (54 samples, 0.32%)</title><rect x="671.5" y="563.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="674.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (54 samples, 0.32%)</title><rect x="671.5" y="547.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="674.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (19 samples, 0.11%)</title><rect x="671.6" y="531.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="674.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils$$Lambda$146/1951641922.apply (15 samples, 0.09%)</title><rect x="671.9" y="515.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="674.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils.lambda$replication$7 (15 samples, 0.09%)</title><rect x="671.9" y="499.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="674.9" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (14 samples, 0.08%)</title><rect x="672.0" y="483.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="675.0" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (8 samples, 0.05%)</title><rect x="672.0" y="467.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="675.0" y="478.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (8 samples, 0.05%)</title><rect x="672.0" y="451.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="675.0" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (8 samples, 0.05%)</title><rect x="672.0" y="435.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="675.0" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (8 samples, 0.05%)</title><rect x="672.0" y="419.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="675.0" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (6 samples, 0.04%)</title><rect x="672.1" y="403.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="675.1" y="414.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.04%)</title><rect x="672.1" y="387.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="675.1" y="398.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.02%)</title><rect x="672.2" y="371.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="675.2" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (5 samples, 0.03%)</title><rect x="672.6" y="467.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="675.6" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.03%)</title><rect x="672.6" y="451.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="675.6" y="462.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (4 samples, 0.02%)</title><rect x="672.7" y="435.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="675.7" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.02%)</title><rect x="672.7" y="419.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="675.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (33 samples, 0.20%)</title><rect x="673.0" y="531.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="676.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (33 samples, 0.20%)</title><rect x="673.0" y="515.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="676.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils$$Lambda$147/1690205539.accept (33 samples, 0.20%)</title><rect x="673.0" y="499.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="676.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils.lambda$collect$4 (31 samples, 0.19%)</title><rect x="673.2" y="483.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="676.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (24 samples, 0.14%)</title><rect x="673.2" y="467.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="676.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (24 samples, 0.14%)</title><rect x="673.2" y="451.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="676.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (23 samples, 0.14%)</title><rect x="673.2" y="435.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="676.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (23 samples, 0.14%)</title><rect x="673.2" y="419.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="676.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (23 samples, 0.14%)</title><rect x="673.2" y="403.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="676.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (23 samples, 0.14%)</title><rect x="673.2" y="387.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="676.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (23 samples, 0.14%)</title><rect x="673.2" y="371.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="676.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (21 samples, 0.13%)</title><rect x="673.4" y="355.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="676.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (19 samples, 0.11%)</title><rect x="673.5" y="339.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="676.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (18 samples, 0.11%)</title><rect x="673.6" y="323.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="676.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (18 samples, 0.11%)</title><rect x="673.6" y="307.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="676.6" y="318.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (16 samples, 0.10%)</title><rect x="673.7" y="291.0" width="1.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="676.7" y="302.0"></text>
</g>
<g>
<title>__psynch_cvsignal (14 samples, 0.08%)</title><rect x="673.8" y="275.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="676.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.03%)</title><rect x="674.9" y="467.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="677.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.03%)</title><rect x="674.9" y="451.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="677.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.02%)</title><rect x="674.9" y="435.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="677.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.02%)</title><rect x="674.9" y="419.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="677.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.02%)</title><rect x="674.9" y="403.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="677.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.02%)</title><rect x="674.9" y="387.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="677.9" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (4 samples, 0.02%)</title><rect x="674.9" y="371.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="677.9" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.02%)</title><rect x="674.9" y="355.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="677.9" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (4 samples, 0.02%)</title><rect x="674.9" y="339.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="677.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (178 samples, 1.06%)</title><rect x="675.3" y="563.0" width="12.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="678.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils$$Lambda$149/975932011.accept (176 samples, 1.05%)</title><rect x="675.5" y="547.0" width="12.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="678.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils.lambda$merge$2 (176 samples, 1.05%)</title><rect x="675.5" y="531.0" width="12.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="678.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (140 samples, 0.84%)</title><rect x="675.8" y="515.0" width="9.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="678.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (140 samples, 0.84%)</title><rect x="675.8" y="499.0" width="9.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="678.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (139 samples, 0.83%)</title><rect x="675.8" y="483.0" width="9.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="678.8" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica$$Lambda$155/7802206.accept (139 samples, 0.83%)</title><rect x="675.8" y="467.0" width="9.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="678.8" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.lambda$schedule$1 (139 samples, 0.83%)</title><rect x="675.8" y="451.0" width="9.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="678.8" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (136 samples, 0.81%)</title><rect x="675.9" y="435.0" width="9.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="678.9" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (130 samples, 0.78%)</title><rect x="676.3" y="419.0" width="9.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="679.3" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (127 samples, 0.76%)</title><rect x="676.5" y="403.0" width="8.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.5" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (127 samples, 0.76%)</title><rect x="676.5" y="387.0" width="8.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="679.5" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (127 samples, 0.76%)</title><rect x="676.5" y="371.0" width="8.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.5" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (125 samples, 0.75%)</title><rect x="676.5" y="355.0" width="8.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="679.5" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (125 samples, 0.75%)</title><rect x="676.5" y="339.0" width="8.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="679.5" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (124 samples, 0.74%)</title><rect x="676.6" y="323.0" width="8.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="679.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (124 samples, 0.74%)</title><rect x="676.6" y="307.0" width="8.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="679.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (121 samples, 0.72%)</title><rect x="676.6" y="291.0" width="8.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="679.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (121 samples, 0.72%)</title><rect x="676.6" y="275.0" width="8.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="679.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (121 samples, 0.72%)</title><rect x="676.6" y="259.0" width="8.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="679.6" y="270.0"></text>
</g>
<g>
<title>write (110 samples, 0.66%)</title><rect x="677.4" y="243.0" width="7.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="680.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (17 samples, 0.10%)</title><rect x="685.6" y="515.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="688.6" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (17 samples, 0.10%)</title><rect x="685.6" y="499.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="688.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (15 samples, 0.09%)</title><rect x="685.8" y="483.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="688.8" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (14 samples, 0.08%)</title><rect x="685.9" y="467.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="688.9" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (14 samples, 0.08%)</title><rect x="685.9" y="451.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="688.9" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (7 samples, 0.04%)</title><rect x="686.0" y="435.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="689.0" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (7 samples, 0.04%)</title><rect x="686.0" y="419.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="689.0" y="430.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$41/580718781.accept (6 samples, 0.04%)</title><rect x="686.1" y="403.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="689.1" y="414.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.lambda$toMap$68 (6 samples, 0.04%)</title><rect x="686.1" y="387.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="689.1" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.merge (5 samples, 0.03%)</title><rect x="686.1" y="371.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="689.1" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (15 samples, 0.09%)</title><rect x="686.8" y="515.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="689.8" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (15 samples, 0.09%)</title><rect x="686.8" y="499.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="689.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (15 samples, 0.09%)</title><rect x="686.8" y="483.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="689.8" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (12 samples, 0.07%)</title><rect x="687.1" y="467.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="690.1" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (12 samples, 0.07%)</title><rect x="687.1" y="451.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="690.1" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (12 samples, 0.07%)</title><rect x="687.1" y="435.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="690.1" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySpliterator.forEachRemaining (6 samples, 0.04%)</title><rect x="687.2" y="419.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="690.2" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (4 samples, 0.02%)</title><rect x="687.3" y="403.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="690.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (272 samples, 1.63%)</title><rect x="688.0" y="643.0" width="19.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="691.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (272 samples, 1.63%)</title><rect x="688.0" y="627.0" width="19.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="691.0" y="638.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (265 samples, 1.58%)</title><rect x="688.5" y="611.0" width="18.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="691.5" y="622.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (264 samples, 1.58%)</title><rect x="688.5" y="595.0" width="18.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="691.5" y="606.0"></text>
</g>
<g>
<title>__psynch_cvwait (262 samples, 1.57%)</title><rect x="688.6" y="579.0" width="18.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="691.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (665 samples, 3.97%)</title><rect x="707.2" y="643.0" width="46.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="710.2" y="654.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (665 samples, 3.97%)</title><rect x="707.2" y="627.0" width="46.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="710.2" y="638.0">jdk/..</text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (650 samples, 3.88%)</title><rect x="708.2" y="611.0" width="45.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="711.2" y="622.0">Unsa..</text>
</g>
<g>
<title>Parker::park(bool, long) (630 samples, 3.77%)</title><rect x="709.1" y="595.0" width="44.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="712.1" y="606.0">Park..</text>
</g>
<g>
<title>__gettimeofday (16 samples, 0.10%)</title><rect x="709.7" y="579.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="712.7" y="590.0"></text>
</g>
<g>
<title>__psynch_cvwait (595 samples, 3.56%)</title><rect x="710.8" y="579.0" width="42.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="713.8" y="590.0">__p..</text>
</g>
<g>
<title>_pthread_cond_wait (4 samples, 0.02%)</title><rect x="752.8" y="579.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="755.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (4,148 samples, 24.79%)</title><rect x="754.3" y="675.0" width="292.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="757.3" y="686.0">jdk/internal/net/http/HttpClientImpl$Se..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.02%)</title><rect x="755.9" y="659.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="758.9" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (44 samples, 0.26%)</title><rect x="756.3" y="659.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="759.3" y="670.0"></text>
</g>
<g>
<title>itable stub (20 samples, 0.12%)</title><rect x="757.2" y="643.0" width="1.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="760.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$178/1353562590.run (6 samples, 0.04%)</title><rect x="758.6" y="643.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="761.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$180/1993165503.run (5 samples, 0.03%)</title><rect x="759.1" y="643.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="762.1" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (780 samples, 4.66%)</title><rect x="759.4" y="659.0" width="55.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="762.4" y="670.0">java/..</text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$124/787427873.accept (11 samples, 0.07%)</title><rect x="759.5" y="643.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="762.5" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (11 samples, 0.07%)</title><rect x="759.5" y="627.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="762.5" y="638.0"></text>
</g>
<g>
<title>java/lang/String.trim (9 samples, 0.05%)</title><rect x="759.6" y="611.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="762.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (9 samples, 0.05%)</title><rect x="759.6" y="595.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="762.6" y="606.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.02%)</title><rect x="759.6" y="579.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="762.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$229/1548822157.accept (752 samples, 4.49%)</title><rect x="760.3" y="643.0" width="53.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="763.3" y="654.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (752 samples, 4.49%)</title><rect x="760.3" y="627.0" width="53.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="763.3" y="638.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (752 samples, 4.49%)</title><rect x="760.3" y="611.0" width="53.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="763.3" y="622.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (752 samples, 4.49%)</title><rect x="760.3" y="595.0" width="53.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="763.3" y="606.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (752 samples, 4.49%)</title><rect x="760.3" y="579.0" width="53.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="763.3" y="590.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (12 samples, 0.07%)</title><rect x="760.3" y="563.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="763.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (10 samples, 0.06%)</title><rect x="760.3" y="547.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="763.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (10 samples, 0.06%)</title><rect x="760.3" y="531.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="763.3" y="542.0"></text>
</g>
<g>
<title>java/util/HashSet.add (10 samples, 0.06%)</title><rect x="760.3" y="515.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="763.3" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.put (10 samples, 0.06%)</title><rect x="760.3" y="499.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="763.3" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (10 samples, 0.06%)</title><rect x="760.3" y="483.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="763.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (740 samples, 4.42%)</title><rect x="761.1" y="563.0" width="52.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="764.1" y="574.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (740 samples, 4.42%)</title><rect x="761.1" y="547.0" width="52.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="764.1" y="558.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (740 samples, 4.42%)</title><rect x="761.1" y="531.0" width="52.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="764.1" y="542.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (739 samples, 4.42%)</title><rect x="761.2" y="515.0" width="52.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="764.2" y="526.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (737 samples, 4.40%)</title><rect x="761.3" y="499.0" width="52.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="764.3" y="510.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$176/521403122.run (732 samples, 4.37%)</title><rect x="761.4" y="483.0" width="51.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="764.4" y="494.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (731 samples, 4.37%)</title><rect x="761.5" y="467.0" width="51.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="764.5" y="478.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (506 samples, 3.02%)</title><rect x="761.6" y="451.0" width="35.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="764.6" y="462.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (506 samples, 3.02%)</title><rect x="761.6" y="435.0" width="35.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="764.6" y="446.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (506 samples, 3.02%)</title><rect x="761.6" y="419.0" width="35.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="764.6" y="430.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (505 samples, 3.02%)</title><rect x="761.7" y="403.0" width="35.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="764.7" y="414.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (505 samples, 3.02%)</title><rect x="761.7" y="387.0" width="35.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="764.7" y="398.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (492 samples, 2.94%)</title><rect x="762.4" y="371.0" width="34.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="765.4" y="382.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (492 samples, 2.94%)</title><rect x="762.4" y="355.0" width="34.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="765.4" y="366.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (491 samples, 2.93%)</title><rect x="762.5" y="339.0" width="34.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="765.5" y="350.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (491 samples, 2.93%)</title><rect x="762.5" y="323.0" width="34.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="765.5" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (481 samples, 2.87%)</title><rect x="762.7" y="307.0" width="33.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="765.7" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (481 samples, 2.87%)</title><rect x="762.7" y="291.0" width="33.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="765.7" y="302.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (481 samples, 2.87%)</title><rect x="762.7" y="275.0" width="33.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="765.7" y="286.0">jd..</text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (464 samples, 2.77%)</title><rect x="763.9" y="259.0" width="32.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="766.9" y="270.0">Un..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.02%)</title><rect x="764.1" y="243.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="767.1" y="254.0"></text>
</g>
<g>
<title>Parker::unpark() (5 samples, 0.03%)</title><rect x="764.7" y="243.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="767.7" y="254.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (5 samples, 0.03%)</title><rect x="764.7" y="227.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="767.7" y="238.0"></text>
</g>
<g>
<title>__psynch_mutexwait (5 samples, 0.03%)</title><rect x="764.7" y="211.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="767.7" y="222.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (4 samples, 0.02%)</title><rect x="765.4" y="243.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="768.4" y="254.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (6 samples, 0.04%)</title><rect x="765.7" y="243.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="768.7" y="254.0"></text>
</g>
<g>
<title>__psynch_cvsignal (419 samples, 2.50%)</title><rect x="766.1" y="243.0" width="29.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="769.1" y="254.0">__..</text>
</g>
<g>
<title>pthread_cond_signal (7 samples, 0.04%)</title><rect x="795.9" y="243.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="798.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (4 samples, 0.02%)</title><rect x="796.9" y="307.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="799.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (7 samples, 0.04%)</title><rect x="797.3" y="451.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="800.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (4 samples, 0.02%)</title><rect x="797.5" y="435.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="800.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (7 samples, 0.04%)</title><rect x="797.8" y="451.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="800.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (7 samples, 0.04%)</title><rect x="797.8" y="435.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="800.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (7 samples, 0.04%)</title><rect x="797.8" y="419.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="800.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (7 samples, 0.04%)</title><rect x="797.8" y="403.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="800.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (7 samples, 0.04%)</title><rect x="797.8" y="387.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="800.8" y="398.0"></text>
</g>
<g>
<title>java/util/HashSet.add (7 samples, 0.04%)</title><rect x="797.8" y="371.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="800.8" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.put (7 samples, 0.04%)</title><rect x="797.8" y="355.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="800.8" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (7 samples, 0.04%)</title><rect x="797.8" y="339.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="800.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (206 samples, 1.23%)</title><rect x="798.3" y="451.0" width="14.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="801.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (6 samples, 0.04%)</title><rect x="798.5" y="435.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="801.5" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="798.5" y="419.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="801.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (4 samples, 0.02%)</title><rect x="798.9" y="435.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="801.9" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (193 samples, 1.15%)</title><rect x="799.2" y="435.0" width="13.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="802.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.03%)</title><rect x="799.5" y="419.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="802.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.03%)</title><rect x="799.5" y="403.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="802.5" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (181 samples, 1.08%)</title><rect x="800.0" y="419.0" width="12.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="803.0" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (181 samples, 1.08%)</title><rect x="800.0" y="403.0" width="12.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="803.0" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (165 samples, 0.99%)</title><rect x="800.0" y="387.0" width="11.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="803.0" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (165 samples, 0.99%)</title><rect x="800.0" y="371.0" width="11.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="803.0" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (157 samples, 0.94%)</title><rect x="800.6" y="355.0" width="11.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="803.6" y="366.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (7 samples, 0.04%)</title><rect x="801.2" y="339.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="804.2" y="350.0"></text>
</g>
<g>
<title>read (138 samples, 0.82%)</title><rect x="801.8" y="339.0" width="9.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="804.8" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (16 samples, 0.10%)</title><rect x="811.7" y="387.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="814.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (4 samples, 0.02%)</title><rect x="813.0" y="483.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="816.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$236/218073880.accept (16 samples, 0.10%)</title><rect x="813.3" y="643.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="816.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (16 samples, 0.10%)</title><rect x="813.3" y="627.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="816.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$228/264193509.run (16 samples, 0.10%)</title><rect x="813.3" y="611.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="816.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (16 samples, 0.10%)</title><rect x="813.3" y="595.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="816.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (16 samples, 0.10%)</title><rect x="813.3" y="579.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="816.3" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (6 samples, 0.04%)</title><rect x="813.7" y="563.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="816.7" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (6 samples, 0.04%)</title><rect x="813.7" y="547.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="816.7" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (69 samples, 0.41%)</title><rect x="814.7" y="659.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="817.7" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (58 samples, 0.35%)</title><rect x="815.5" y="643.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="818.5" y="654.0"></text>
</g>
<g>
<title>itable stub (9 samples, 0.05%)</title><rect x="815.5" y="627.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="818.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (47 samples, 0.28%)</title><rect x="816.2" y="627.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="819.2" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (46 samples, 0.27%)</title><rect x="816.2" y="611.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="819.2" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (46 samples, 0.27%)</title><rect x="816.2" y="595.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="819.2" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (46 samples, 0.27%)</title><rect x="816.2" y="579.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="819.2" y="590.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.02%)</title><rect x="816.4" y="563.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="819.4" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (16 samples, 0.10%)</title><rect x="816.7" y="563.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="819.7" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (7 samples, 0.04%)</title><rect x="817.3" y="547.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="820.3" y="558.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (11 samples, 0.07%)</title><rect x="817.8" y="563.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="820.8" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap$HashMapSpliterator.estimateSize (4 samples, 0.02%)</title><rect x="818.2" y="547.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="821.2" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (5 samples, 0.03%)</title><rect x="818.6" y="563.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="821.6" y="574.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (5 samples, 0.03%)</title><rect x="818.6" y="547.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="821.6" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.estimateSize (5 samples, 0.03%)</title><rect x="818.6" y="531.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="821.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (6 samples, 0.04%)</title><rect x="818.9" y="563.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="821.9" y="574.0"></text>
</g>
<g>
<title>java/util/stream/Sink.begin (4 samples, 0.02%)</title><rect x="819.1" y="547.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="822.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (2,016 samples, 12.05%)</title><rect x="819.6" y="659.0" width="142.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="822.6" y="670.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$178/1353562590.run (874 samples, 5.22%)</title><rect x="821.1" y="643.0" width="61.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="824.1" y="654.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (874 samples, 5.22%)</title><rect x="821.1" y="627.0" width="61.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="824.1" y="638.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/Logger.log (11 samples, 0.07%)</title><rect x="821.5" y="611.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="824.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (858 samples, 5.13%)</title><rect x="822.2" y="611.0" width="60.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="825.2" y="622.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (858 samples, 5.13%)</title><rect x="822.2" y="595.0" width="60.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="825.2" y="606.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (855 samples, 5.11%)</title><rect x="822.5" y="579.0" width="60.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="825.5" y="590.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (850 samples, 5.08%)</title><rect x="822.8" y="563.0" width="59.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="825.8" y="574.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$176/521403122.run (835 samples, 4.99%)</title><rect x="823.1" y="547.0" width="58.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="826.1" y="558.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (835 samples, 4.99%)</title><rect x="823.1" y="531.0" width="58.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="826.1" y="542.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (820 samples, 4.90%)</title><rect x="823.2" y="515.0" width="57.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="826.2" y="526.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.getAndSet (12 samples, 0.07%)</title><rect x="824.4" y="499.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="827.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_L (12 samples, 0.07%)</title><rect x="824.4" y="483.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="827.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.getAndSet (12 samples, 0.07%)</title><rect x="824.4" y="467.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="827.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (791 samples, 4.73%)</title><rect x="825.2" y="499.0" width="55.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="828.2" y="510.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (16 samples, 0.10%)</title><rect x="825.6" y="483.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="828.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (11 samples, 0.07%)</title><rect x="825.9" y="467.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="828.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (11 samples, 0.07%)</title><rect x="825.9" y="451.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="828.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (11 samples, 0.07%)</title><rect x="825.9" y="435.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="828.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.04%)</title><rect x="825.9" y="419.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="828.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.04%)</title><rect x="825.9" y="403.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="828.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$238/389961045.get$Lambda (7 samples, 0.04%)</title><rect x="825.9" y="387.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="828.9" y="398.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.02%)</title><rect x="826.0" y="371.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="829.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (4 samples, 0.02%)</title><rect x="826.4" y="419.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="829.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (4 samples, 0.02%)</title><rect x="826.4" y="403.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="829.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (4 samples, 0.02%)</title><rect x="826.4" y="387.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="829.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (770 samples, 4.60%)</title><rect x="826.7" y="483.0" width="54.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="829.7" y="494.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (762 samples, 4.55%)</title><rect x="827.2" y="467.0" width="53.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="830.2" y="478.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (762 samples, 4.55%)</title><rect x="827.2" y="451.0" width="53.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="830.2" y="462.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (758 samples, 4.53%)</title><rect x="827.5" y="435.0" width="53.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="830.5" y="446.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (758 samples, 4.53%)</title><rect x="827.5" y="419.0" width="53.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="830.5" y="430.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (4 samples, 0.02%)</title><rect x="827.6" y="403.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="830.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (752 samples, 4.49%)</title><rect x="827.9" y="403.0" width="53.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="830.9" y="414.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (750 samples, 4.48%)</title><rect x="828.0" y="387.0" width="52.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="831.0" y="398.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (736 samples, 4.40%)</title><rect x="828.2" y="371.0" width="51.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="831.2" y="382.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (733 samples, 4.38%)</title><rect x="828.4" y="355.0" width="51.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="831.4" y="366.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (733 samples, 4.38%)</title><rect x="828.4" y="339.0" width="51.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="831.4" y="350.0">jdk/i..</text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (696 samples, 4.16%)</title><rect x="830.8" y="323.0" width="49.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="833.8" y="334.0">Unsaf..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (9 samples, 0.05%)</title><rect x="831.0" y="307.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="834.0" y="318.0"></text>
</g>
<g>
<title>Chunk::next() const (5 samples, 0.03%)</title><rect x="831.3" y="291.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="834.3" y="302.0"></text>
</g>
<g>
<title>OrderAccess::fence() (4 samples, 0.02%)</title><rect x="832.1" y="307.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="835.1" y="318.0"></text>
</g>
<g>
<title>Parker::unpark() (14 samples, 0.08%)</title><rect x="832.4" y="307.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="835.4" y="318.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (14 samples, 0.08%)</title><rect x="832.4" y="291.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="835.4" y="302.0"></text>
</g>
<g>
<title>__psynch_mutexwait (14 samples, 0.08%)</title><rect x="832.4" y="275.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="835.4" y="286.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (4 samples, 0.02%)</title><rect x="833.9" y="307.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="836.9" y="318.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (4 samples, 0.02%)</title><rect x="834.2" y="307.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="837.2" y="318.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (14 samples, 0.08%)</title><rect x="834.5" y="307.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="837.5" y="318.0"></text>
</g>
<g>
<title>__psynch_cvsignal (601 samples, 3.59%)</title><rect x="835.5" y="307.0" width="42.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="838.5" y="318.0">__ps..</text>
</g>
<g>
<title>pthread_cond_signal (15 samples, 0.09%)</title><rect x="878.0" y="307.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="881.0" y="318.0"></text>
</g>
<g>
<title>_pthread_cond_updateval (6 samples, 0.04%)</title><rect x="878.7" y="291.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="881.7" y="302.0"></text>
</g>
<g>
<title>pthread_mutex_lock (11 samples, 0.07%)</title><rect x="879.1" y="307.0" width="0.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="882.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (4 samples, 0.02%)</title><rect x="880.1" y="371.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="883.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (4 samples, 0.02%)</title><rect x="880.4" y="371.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="883.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (4 samples, 0.02%)</title><rect x="880.4" y="355.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="883.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (11 samples, 0.07%)</title><rect x="881.0" y="515.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="884.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (7 samples, 0.04%)</title><rect x="881.3" y="499.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="884.3" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.04%)</title><rect x="881.3" y="483.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="884.3" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.04%)</title><rect x="881.3" y="467.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="884.3" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6 samples, 0.04%)</title><rect x="881.3" y="451.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="884.3" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (6 samples, 0.04%)</title><rect x="881.3" y="435.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="884.3" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (4 samples, 0.02%)</title><rect x="881.5" y="419.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="884.5" y="430.0"></text>
</g>
<g>
<title>read (4 samples, 0.02%)</title><rect x="881.5" y="403.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="884.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (11 samples, 0.07%)</title><rect x="882.0" y="547.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="885.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (5 samples, 0.03%)</title><rect x="882.4" y="531.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="885.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$180/1993165503.run (1,120 samples, 6.69%)</title><rect x="882.7" y="643.0" width="79.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="885.7" y="654.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (1,120 samples, 6.69%)</title><rect x="882.7" y="627.0" width="79.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="885.7" y="638.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,111 samples, 6.64%)</title><rect x="883.2" y="611.0" width="78.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="886.2" y="622.0">jdk/inter..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,111 samples, 6.64%)</title><rect x="883.2" y="595.0" width="78.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="886.2" y="606.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (12 samples, 0.07%)</title><rect x="883.3" y="579.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="886.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.03%)</title><rect x="883.8" y="563.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="886.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.03%)</title><rect x="883.8" y="547.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="886.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (1,097 samples, 6.56%)</title><rect x="884.2" y="579.0" width="77.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="887.2" y="590.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1,097 samples, 6.56%)</title><rect x="884.2" y="563.0" width="77.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="887.2" y="574.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (1,080 samples, 6.45%)</title><rect x="884.4" y="547.0" width="76.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="887.4" y="558.0">java/uti..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (6 samples, 0.04%)</title><rect x="884.5" y="531.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="887.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1,072 samples, 6.41%)</title><rect x="884.9" y="531.0" width="75.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="887.9" y="542.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1,072 samples, 6.41%)</title><rect x="884.9" y="515.0" width="75.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="887.9" y="526.0">jdk/inte..</text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1,020 samples, 6.10%)</title><rect x="888.5" y="499.0" width="72.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="891.5" y="510.0">Unsafe_U..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (5 samples, 0.03%)</title><rect x="889.0" y="483.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="892.0" y="494.0"></text>
</g>
<g>
<title>Chunk::next() const (4 samples, 0.02%)</title><rect x="889.0" y="467.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="892.0" y="478.0"></text>
</g>
<g>
<title>Parker::unpark() (26 samples, 0.16%)</title><rect x="889.7" y="483.0" width="1.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="892.7" y="494.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (25 samples, 0.15%)</title><rect x="889.7" y="467.0" width="1.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="892.7" y="478.0"></text>
</g>
<g>
<title>__psynch_mutexwait (25 samples, 0.15%)</title><rect x="889.7" y="451.0" width="1.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="892.7" y="462.0"></text>
</g>
<g>
<title>Thread::current() (11 samples, 0.07%)</title><rect x="891.6" y="483.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="894.6" y="494.0"></text>
</g>
<g>
<title>Thread::current_or_null() (4 samples, 0.02%)</title><rect x="891.6" y="467.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="894.6" y="478.0"></text>
</g>
<g>
<title>_dispatch_queue_attrs (7 samples, 0.04%)</title><rect x="891.9" y="467.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="894.9" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (14 samples, 0.08%)</title><rect x="892.5" y="483.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="895.5" y="494.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (7 samples, 0.04%)</title><rect x="893.0" y="467.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="896.0" y="478.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (6 samples, 0.04%)</title><rect x="893.0" y="451.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="896.0" y="462.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (5 samples, 0.03%)</title><rect x="893.0" y="435.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="896.0" y="446.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (5 samples, 0.03%)</title><rect x="893.0" y="419.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="896.0" y="430.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::ordered_load&lt;void volatile*, (ScopedFenceType)0&gt;(void volatile* const volatile*) (4 samples, 0.02%)</title><rect x="893.1" y="403.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="896.1" y="414.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (6 samples, 0.04%)</title><rect x="893.5" y="483.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="896.5" y="494.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (21 samples, 0.13%)</title><rect x="894.1" y="483.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="897.1" y="494.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (6 samples, 0.04%)</title><rect x="895.2" y="467.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="898.2" y="478.0"></text>
</g>
<g>
<title>__psynch_cvsignal (898 samples, 5.37%)</title><rect x="895.8" y="483.0" width="63.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="898.8" y="494.0">__psync..</text>
</g>
<g>
<title>pthread_cond_signal (9 samples, 0.05%)</title><rect x="959.3" y="483.0" width="0.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="962.3" y="494.0"></text>
</g>
<g>
<title>pthread_mutex_lock (5 samples, 0.03%)</title><rect x="959.9" y="483.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="962.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (6 samples, 0.04%)</title><rect x="960.5" y="547.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="963.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (5 samples, 0.03%)</title><rect x="961.0" y="547.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="964.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (5 samples, 0.03%)</title><rect x="961.0" y="531.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="964.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (4 samples, 0.02%)</title><rect x="961.0" y="515.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="964.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (29 samples, 0.17%)</title><rect x="961.7" y="659.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="964.7" y="670.0"></text>
</g>
<g>
<title>java/time/Instant.now (15 samples, 0.09%)</title><rect x="961.7" y="643.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="964.7" y="654.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (15 samples, 0.09%)</title><rect x="961.7" y="627.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="964.7" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (6 samples, 0.04%)</title><rect x="962.2" y="611.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="965.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (14 samples, 0.08%)</title><rect x="962.8" y="643.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="965.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (6 samples, 0.04%)</title><rect x="963.4" y="627.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="966.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (7 samples, 0.04%)</title><rect x="963.8" y="659.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="966.8" y="670.0"></text>
</g>
<g>
<title>java/util/Collection.stream (7 samples, 0.04%)</title><rect x="963.8" y="643.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="966.8" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (7 samples, 0.04%)</title><rect x="963.8" y="627.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="966.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (7 samples, 0.04%)</title><rect x="963.8" y="611.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="966.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (61 samples, 0.36%)</title><rect x="964.3" y="659.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="967.3" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.add (6 samples, 0.04%)</title><rect x="968.1" y="643.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="971.1" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6 samples, 0.04%)</title><rect x="968.1" y="627.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="971.1" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6 samples, 0.04%)</title><rect x="968.1" y="611.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="971.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (74 samples, 0.44%)</title><rect x="968.6" y="659.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="971.6" y="670.0"></text>
</g>
<g>
<title>java/time/Instant.now (28 samples, 0.17%)</title><rect x="968.9" y="643.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="971.9" y="654.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (28 samples, 0.17%)</title><rect x="968.9" y="627.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="971.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (19 samples, 0.11%)</title><rect x="969.5" y="611.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="972.5" y="622.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (13 samples, 0.08%)</title><rect x="969.9" y="595.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="972.9" y="606.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.02%)</title><rect x="970.1" y="579.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="973.1" y="590.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (6 samples, 0.04%)</title><rect x="970.4" y="579.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="973.4" y="590.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.04%)</title><rect x="970.4" y="563.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="973.4" y="574.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (5 samples, 0.03%)</title><rect x="970.5" y="547.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="973.5" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.until (4 samples, 0.02%)</title><rect x="970.8" y="643.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="973.8" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (7 samples, 0.04%)</title><rect x="971.3" y="643.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="974.3" y="654.0"></text>
</g>
<g>
<title>java/util/TreeSet.isEmpty (13 samples, 0.08%)</title><rect x="971.8" y="643.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="974.8" y="654.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (11 samples, 0.07%)</title><rect x="972.7" y="643.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="975.7" y="654.0"></text>
</g>
<g>
<title>java/util/TreeSet.size (4 samples, 0.02%)</title><rect x="973.5" y="643.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="976.5" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (954 samples, 5.70%)</title><rect x="973.8" y="659.0" width="67.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="976.8" y="670.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (953 samples, 5.70%)</title><rect x="973.9" y="643.0" width="67.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="976.9" y="654.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (951 samples, 5.68%)</title><rect x="974.0" y="627.0" width="67.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="977.0" y="638.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (814 samples, 4.86%)</title><rect x="974.4" y="611.0" width="57.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="977.4" y="622.0">sun/ni..</text>
</g>
<g>
<title>Java_sun_nio_ch_KQueue_poll (4 samples, 0.02%)</title><rect x="975.9" y="595.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="978.9" y="606.0"></text>
</g>
<g>
<title>kevent (788 samples, 4.71%)</title><rect x="976.2" y="595.0" width="55.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="979.2" y="606.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (117 samples, 0.70%)</title><rect x="1031.8" y="611.0" width="8.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1034.8" y="622.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.04%)</title><rect x="1031.8" y="595.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1034.8" y="606.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (7 samples, 0.04%)</title><rect x="1031.8" y="579.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1034.8" y="590.0"></text>
</g>
<g>
<title>__psynch_cvsignal (4 samples, 0.02%)</title><rect x="1031.8" y="563.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1034.8" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.get (8 samples, 0.05%)</title><rect x="1032.3" y="595.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1035.3" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (8 samples, 0.05%)</title><rect x="1032.3" y="579.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1035.3" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.clearInterrupt (84 samples, 0.50%)</title><rect x="1032.9" y="595.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1035.9" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (75 samples, 0.45%)</title><rect x="1033.5" y="579.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1036.5" y="590.0"></text>
</g>
<g>
<title>read (68 samples, 0.41%)</title><rect x="1034.0" y="563.0" width="4.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1037.0" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (17 samples, 0.10%)</title><rect x="1038.8" y="595.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1041.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (9 samples, 0.05%)</title><rect x="1039.3" y="579.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1042.3" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (6 samples, 0.04%)</title><rect x="1040.0" y="611.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1043.0" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (5 samples, 0.03%)</title><rect x="1040.4" y="611.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1043.4" y="622.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (4 samples, 0.02%)</title><rect x="1040.4" y="595.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1043.4" y="606.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.02%)</title><rect x="1040.4" y="579.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1043.4" y="590.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.02%)</title><rect x="1040.4" y="563.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1043.4" y="574.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.02%)</title><rect x="1040.4" y="547.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1043.4" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (55 samples, 0.33%)</title><rect x="1041.1" y="659.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1044.1" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (55 samples, 0.33%)</title><rect x="1041.1" y="643.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1044.1" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (53 samples, 0.32%)</title><rect x="1041.2" y="627.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1044.2" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (42 samples, 0.25%)</title><rect x="1041.2" y="611.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1044.2" y="622.0"></text>
</g>
<g>
<title>kevent (37 samples, 0.22%)</title><rect x="1041.6" y="595.0" width="2.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1044.6" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (9 samples, 0.05%)</title><rect x="1044.2" y="611.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1047.2" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.03%)</title><rect x="1044.2" y="595.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1047.2" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (5 samples, 0.03%)</title><rect x="1044.2" y="579.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1047.2" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (8 samples, 0.05%)</title><rect x="1044.9" y="659.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1047.9" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (8 samples, 0.05%)</title><rect x="1044.9" y="643.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1047.9" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (5 samples, 0.03%)</title><rect x="1045.2" y="627.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1048.2" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (18 samples, 0.11%)</title><rect x="1045.5" y="659.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1048.5" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (15 samples, 0.09%)</title><rect x="1045.6" y="643.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1048.6" y="654.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,903 samples, 11.37%)</title><rect x="1046.8" y="675.0" width="134.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1049.8" y="686.0">one/nio/server/Se..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (908 samples, 5.43%)</title><rect x="1047.3" y="659.0" width="64.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1050.3" y="670.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (12 samples, 0.07%)</title><rect x="1047.6" y="643.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1050.6" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (4 samples, 0.02%)</title><rect x="1048.1" y="627.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1051.1" y="638.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (4 samples, 0.02%)</title><rect x="1048.4" y="643.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1051.4" y="654.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (4 samples, 0.02%)</title><rect x="1048.7" y="643.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1051.7" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (884 samples, 5.28%)</title><rect x="1049.0" y="643.0" width="62.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1052.0" y="654.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (883 samples, 5.28%)</title><rect x="1049.0" y="627.0" width="62.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1052.0" y="638.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (881 samples, 5.27%)</title><rect x="1049.2" y="611.0" width="62.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1052.2" y="622.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (828 samples, 4.95%)</title><rect x="1049.2" y="595.0" width="58.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1052.2" y="606.0">sun/ni..</text>
</g>
<g>
<title>Java_sun_nio_ch_KQueue_poll (10 samples, 0.06%)</title><rect x="1050.7" y="579.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1053.7" y="590.0"></text>
</g>
<g>
<title>kevent (797 samples, 4.76%)</title><rect x="1051.4" y="579.0" width="56.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1054.4" y="590.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (24 samples, 0.14%)</title><rect x="1107.6" y="595.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1110.6" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.get (9 samples, 0.05%)</title><rect x="1107.7" y="579.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1110.7" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (9 samples, 0.05%)</title><rect x="1107.7" y="563.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1110.7" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (14 samples, 0.08%)</title><rect x="1108.3" y="579.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1111.3" y="590.0"></text>
</g>
<g>
<title>java/util/HashSet.add (6 samples, 0.04%)</title><rect x="1108.3" y="563.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1111.3" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6 samples, 0.04%)</title><rect x="1108.3" y="547.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1111.3" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6 samples, 0.04%)</title><rect x="1108.3" y="531.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1111.3" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (7 samples, 0.04%)</title><rect x="1109.3" y="595.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1112.3" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (15 samples, 0.09%)</title><rect x="1109.8" y="595.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1112.8" y="606.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (13 samples, 0.08%)</title><rect x="1110.0" y="579.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1113.0" y="590.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (13 samples, 0.08%)</title><rect x="1110.0" y="563.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1113.0" y="574.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (13 samples, 0.08%)</title><rect x="1110.0" y="547.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1113.0" y="558.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (13 samples, 0.08%)</title><rect x="1110.0" y="531.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1113.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (4 samples, 0.02%)</title><rect x="1110.9" y="595.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1113.9" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (986 samples, 5.89%)</title><rect x="1111.3" y="659.0" width="69.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1114.3" y="670.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (979 samples, 5.85%)</title><rect x="1111.6" y="643.0" width="69.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1114.6" y="654.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (854 samples, 5.10%)</title><rect x="1111.7" y="627.0" width="60.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1114.7" y="638.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (798 samples, 4.77%)</title><rect x="1112.1" y="611.0" width="56.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1115.1" y="622.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (795 samples, 4.75%)</title><rect x="1112.3" y="595.0" width="56.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1115.3" y="606.0">one/ni..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (753 samples, 4.50%)</title><rect x="1112.4" y="579.0" width="53.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1115.4" y="590.0">Reque..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (22 samples, 0.13%)</title><rect x="1112.5" y="563.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1115.5" y="574.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.03%)</title><rect x="1113.1" y="547.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1116.1" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.03%)</title><rect x="1113.1" y="531.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1116.1" y="542.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (5 samples, 0.03%)</title><rect x="1113.7" y="547.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1116.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/AsyncService.entity (730 samples, 4.36%)</title><rect x="1114.1" y="563.0" width="51.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1117.1" y="574.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/pranova/AsyncService.isProxied (14 samples, 0.08%)</title><rect x="1114.5" y="547.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1117.5" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (14 samples, 0.08%)</title><rect x="1114.5" y="531.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1117.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.execGet (707 samples, 4.23%)</title><rect x="1115.7" y="547.0" width="49.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1118.7" y="558.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.execAct (706 samples, 4.22%)</title><rect x="1115.7" y="531.0" width="49.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1118.7" y="542.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils.replication (546 samples, 3.26%)</title><rect x="1115.7" y="515.0" width="38.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1118.7" y="526.0">ru/..</text>
</g>
<g>
<title>java/net/URI.create (68 samples, 0.41%)</title><rect x="1115.8" y="499.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1118.8" y="510.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (68 samples, 0.41%)</title><rect x="1115.8" y="483.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1118.8" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (68 samples, 0.41%)</title><rect x="1115.8" y="467.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1118.8" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChar (14 samples, 0.08%)</title><rect x="1115.8" y="451.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1118.8" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (54 samples, 0.32%)</title><rect x="1116.8" y="451.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1119.8" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (6 samples, 0.04%)</title><rect x="1117.2" y="435.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1120.2" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (6 samples, 0.04%)</title><rect x="1117.2" y="419.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1120.2" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (27 samples, 0.16%)</title><rect x="1117.6" y="435.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1120.6" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (16 samples, 0.10%)</title><rect x="1117.9" y="419.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1120.9" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (4 samples, 0.02%)</title><rect x="1117.9" y="403.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1120.9" y="414.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (4 samples, 0.02%)</title><rect x="1117.9" y="387.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1120.9" y="398.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (10 samples, 0.06%)</title><rect x="1118.1" y="403.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1121.1" y="414.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (7 samples, 0.04%)</title><rect x="1119.0" y="419.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1122.0" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (16 samples, 0.10%)</title><rect x="1119.5" y="435.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1122.5" y="446.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (13 samples, 0.08%)</title><rect x="1119.7" y="419.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1122.7" y="430.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (13 samples, 0.08%)</title><rect x="1119.7" y="403.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1122.7" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (13 samples, 0.08%)</title><rect x="1119.7" y="387.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1122.7" y="398.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.decode (7 samples, 0.04%)</title><rect x="1120.6" y="499.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1123.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (59 samples, 0.35%)</title><rect x="1121.3" y="499.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1124.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (56 samples, 0.33%)</title><rect x="1121.5" y="483.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1124.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (56 samples, 0.33%)</title><rect x="1121.5" y="467.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1124.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (55 samples, 0.33%)</title><rect x="1121.6" y="451.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1124.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (53 samples, 0.32%)</title><rect x="1121.7" y="435.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1124.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (50 samples, 0.30%)</title><rect x="1121.9" y="419.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1124.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (50 samples, 0.30%)</title><rect x="1121.9" y="403.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1124.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (50 samples, 0.30%)</title><rect x="1121.9" y="387.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1124.9" y="398.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (48 samples, 0.29%)</title><rect x="1122.1" y="371.0" width="3.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1125.1" y="382.0"></text>
</g>
<g>
<title>__psynch_cvsignal (35 samples, 0.21%)</title><rect x="1122.7" y="355.0" width="2.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1125.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (345 samples, 2.06%)</title><rect x="1125.6" y="499.0" width="24.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1128.6" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (345 samples, 2.06%)</title><rect x="1125.6" y="483.0" width="24.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1128.6" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (345 samples, 2.06%)</title><rect x="1125.6" y="467.0" width="24.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1128.6" y="478.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (343 samples, 2.05%)</title><rect x="1125.8" y="451.0" width="24.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1128.8" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5 samples, 0.03%)</title><rect x="1126.2" y="435.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1129.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (121 samples, 0.72%)</title><rect x="1126.7" y="435.0" width="8.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1129.7" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (11 samples, 0.07%)</title><rect x="1127.0" y="419.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1130.0" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (6 samples, 0.04%)</title><rect x="1127.0" y="403.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1130.0" y="414.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (6 samples, 0.04%)</title><rect x="1127.0" y="387.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1130.0" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (6 samples, 0.04%)</title><rect x="1127.0" y="371.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1130.0" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (6 samples, 0.04%)</title><rect x="1127.0" y="355.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1130.0" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (6 samples, 0.04%)</title><rect x="1127.0" y="339.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1130.0" y="350.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.03%)</title><rect x="1127.0" y="323.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1130.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (5 samples, 0.03%)</title><rect x="1127.4" y="403.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1130.4" y="414.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.03%)</title><rect x="1127.4" y="387.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1130.4" y="398.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (5 samples, 0.03%)</title><rect x="1127.4" y="371.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1130.4" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (5 samples, 0.03%)</title><rect x="1127.4" y="355.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1130.4" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (19 samples, 0.11%)</title><rect x="1127.7" y="419.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1130.7" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (18 samples, 0.11%)</title><rect x="1127.8" y="403.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1130.8" y="414.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (14 samples, 0.08%)</title><rect x="1128.1" y="387.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1131.1" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (11 samples, 0.07%)</title><rect x="1128.3" y="371.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1131.3" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/938808288.accept (11 samples, 0.07%)</title><rect x="1128.3" y="355.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1131.3" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (10 samples, 0.06%)</title><rect x="1128.4" y="339.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1131.4" y="350.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (5 samples, 0.03%)</title><rect x="1128.4" y="323.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1131.4" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$124/787427873.accept (5 samples, 0.03%)</title><rect x="1128.4" y="307.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1131.4" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (5 samples, 0.03%)</title><rect x="1128.4" y="291.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1131.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/495702238.test (5 samples, 0.03%)</title><rect x="1128.4" y="275.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1131.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (4 samples, 0.02%)</title><rect x="1128.4" y="259.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1131.4" y="270.0"></text>
</g>
<g>
<title>java/lang/String.trim (5 samples, 0.03%)</title><rect x="1128.7" y="323.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1131.7" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (5 samples, 0.03%)</title><rect x="1128.7" y="307.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1131.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (4 samples, 0.02%)</title><rect x="1129.2" y="419.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1132.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (78 samples, 0.47%)</title><rect x="1129.5" y="419.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1132.5" y="430.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (78 samples, 0.47%)</title><rect x="1129.5" y="403.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1132.5" y="414.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (78 samples, 0.47%)</title><rect x="1129.5" y="387.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1132.5" y="398.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (46 samples, 0.27%)</title><rect x="1129.6" y="371.0" width="3.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1132.6" y="382.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (8 samples, 0.05%)</title><rect x="1130.1" y="355.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1133.1" y="366.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (6 samples, 0.04%)</title><rect x="1130.7" y="355.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1133.7" y="366.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (20 samples, 0.12%)</title><rect x="1131.4" y="355.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1134.4" y="366.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (5 samples, 0.03%)</title><rect x="1131.4" y="339.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1134.4" y="350.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (15 samples, 0.09%)</title><rect x="1131.8" y="339.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1134.8" y="350.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (6 samples, 0.04%)</title><rect x="1131.8" y="323.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1134.8" y="334.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (6 samples, 0.04%)</title><rect x="1131.8" y="307.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1134.8" y="318.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (5 samples, 0.03%)</title><rect x="1131.8" y="291.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1134.8" y="302.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (4 samples, 0.02%)</title><rect x="1131.8" y="275.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1134.8" y="286.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (9 samples, 0.05%)</title><rect x="1132.2" y="323.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1135.2" y="334.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_compiled_frame(int) (5 samples, 0.03%)</title><rect x="1132.5" y="307.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1135.5" y="318.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (23 samples, 0.14%)</title><rect x="1133.4" y="371.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1136.4" y="382.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (23 samples, 0.14%)</title><rect x="1133.4" y="355.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1136.4" y="366.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (6 samples, 0.04%)</title><rect x="1133.7" y="339.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1136.7" y="350.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.04%)</title><rect x="1133.7" y="323.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1136.7" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.04%)</title><rect x="1133.7" y="307.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1136.7" y="318.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (13 samples, 0.08%)</title><rect x="1134.1" y="339.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1137.1" y="350.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (5 samples, 0.03%)</title><rect x="1134.5" y="323.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1137.5" y="334.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (5 samples, 0.03%)</title><rect x="1134.5" y="307.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1137.5" y="318.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (4 samples, 0.02%)</title><rect x="1134.6" y="291.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1137.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.02%)</title><rect x="1134.6" y="275.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1137.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (26 samples, 0.16%)</title><rect x="1135.2" y="435.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1138.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (20 samples, 0.12%)</title><rect x="1135.6" y="419.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1138.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (19 samples, 0.11%)</title><rect x="1135.7" y="403.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1138.7" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (9 samples, 0.05%)</title><rect x="1136.1" y="387.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1139.1" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (6 samples, 0.04%)</title><rect x="1136.2" y="371.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1139.2" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (6 samples, 0.04%)</title><rect x="1136.2" y="355.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1139.2" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (6 samples, 0.04%)</title><rect x="1136.2" y="339.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1139.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (6 samples, 0.04%)</title><rect x="1136.2" y="323.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1139.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isSameClassPackage (5 samples, 0.03%)</title><rect x="1136.3" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1139.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (183 samples, 1.09%)</title><rect x="1137.0" y="435.0" width="12.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1140.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (182 samples, 1.09%)</title><rect x="1137.0" y="419.0" width="12.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1140.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (182 samples, 1.09%)</title><rect x="1137.0" y="403.0" width="12.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1140.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (180 samples, 1.08%)</title><rect x="1137.0" y="387.0" width="12.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1140.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (180 samples, 1.08%)</title><rect x="1137.0" y="371.0" width="12.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1140.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (171 samples, 1.02%)</title><rect x="1137.2" y="355.0" width="12.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1140.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (170 samples, 1.02%)</title><rect x="1137.3" y="339.0" width="11.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1140.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (170 samples, 1.02%)</title><rect x="1137.3" y="323.0" width="11.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1140.3" y="334.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (160 samples, 0.96%)</title><rect x="1137.7" y="307.0" width="11.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1140.7" y="318.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (7 samples, 0.04%)</title><rect x="1138.2" y="291.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1141.2" y="302.0"></text>
</g>
<g>
<title>__psynch_cvsignal (140 samples, 0.84%)</title><rect x="1138.7" y="291.0" width="9.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1141.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Basic.primaryFor (8 samples, 0.05%)</title><rect x="1150.2" y="499.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1153.2" y="510.0"></text>
</g>
<g>
<title>java/util/HashSet.add (5 samples, 0.03%)</title><rect x="1150.4" y="483.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1153.4" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.put (4 samples, 0.02%)</title><rect x="1150.4" y="467.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1153.4" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (4 samples, 0.02%)</title><rect x="1150.4" y="451.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1153.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils.convertRequest (50 samples, 0.30%)</title><rect x="1150.7" y="499.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1153.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (24 samples, 0.14%)</title><rect x="1151.2" y="483.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1154.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (22 samples, 0.13%)</title><rect x="1151.4" y="467.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1154.4" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (22 samples, 0.13%)</title><rect x="1151.4" y="451.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1154.4" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (21 samples, 0.13%)</title><rect x="1151.4" y="435.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1154.4" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (16 samples, 0.10%)</title><rect x="1151.8" y="419.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1154.8" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/938808288.accept (16 samples, 0.10%)</title><rect x="1151.8" y="403.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1154.8" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (16 samples, 0.10%)</title><rect x="1151.8" y="387.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1154.8" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (9 samples, 0.05%)</title><rect x="1152.1" y="371.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1155.1" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$124/787427873.accept (8 samples, 0.05%)</title><rect x="1152.1" y="355.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1155.1" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (8 samples, 0.05%)</title><rect x="1152.1" y="339.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1155.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$68/409962262.test (4 samples, 0.02%)</title><rect x="1152.3" y="323.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1155.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (13 samples, 0.08%)</title><rect x="1152.9" y="483.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1155.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (11 samples, 0.07%)</title><rect x="1153.0" y="467.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1156.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (11 samples, 0.07%)</title><rect x="1153.0" y="451.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1156.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (10 samples, 0.06%)</title><rect x="1153.0" y="435.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1156.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$68/409962262.test (9 samples, 0.05%)</title><rect x="1153.0" y="419.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1156.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (9 samples, 0.05%)</title><rect x="1153.0" y="403.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1156.0" y="414.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (9 samples, 0.05%)</title><rect x="1153.0" y="387.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1156.0" y="398.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (8 samples, 0.05%)</title><rect x="1153.1" y="371.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1156.1" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (8 samples, 0.05%)</title><rect x="1153.1" y="355.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1156.1" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (6 samples, 0.04%)</title><rect x="1153.3" y="339.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1156.3" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (6 samples, 0.04%)</title><rect x="1153.3" y="323.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1156.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.04%)</title><rect x="1153.3" y="307.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1156.3" y="318.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.04%)</title><rect x="1153.3" y="291.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1156.3" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (6 samples, 0.04%)</title><rect x="1153.3" y="275.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1156.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (6 samples, 0.04%)</title><rect x="1153.8" y="483.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1156.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (6 samples, 0.04%)</title><rect x="1153.8" y="467.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1156.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (6 samples, 0.04%)</title><rect x="1153.8" y="451.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1156.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.asyncAct (147 samples, 0.88%)</title><rect x="1154.2" y="515.0" width="10.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1157.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (146 samples, 0.87%)</title><rect x="1154.3" y="499.0" width="10.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1157.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (146 samples, 0.87%)</title><rect x="1154.3" y="483.0" width="10.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1157.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (134 samples, 0.80%)</title><rect x="1154.3" y="467.0" width="9.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1157.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (131 samples, 0.78%)</title><rect x="1154.5" y="451.0" width="9.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1157.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (131 samples, 0.78%)</title><rect x="1154.5" y="435.0" width="9.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1157.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (131 samples, 0.78%)</title><rect x="1154.5" y="419.0" width="9.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1157.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (131 samples, 0.78%)</title><rect x="1154.5" y="403.0" width="9.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1157.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (131 samples, 0.78%)</title><rect x="1154.5" y="387.0" width="9.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1157.5" y="398.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (4 samples, 0.02%)</title><rect x="1154.8" y="371.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1157.8" y="382.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (119 samples, 0.71%)</title><rect x="1155.3" y="371.0" width="8.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1158.3" y="382.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (5 samples, 0.03%)</title><rect x="1155.8" y="355.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1158.8" y="366.0"></text>
</g>
<g>
<title>JavaThread::is_terminated() const (4 samples, 0.02%)</title><rect x="1155.9" y="339.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1158.9" y="350.0"></text>
</g>
<g>
<title>int OrderAccess::load_acquire&lt;int&gt;(int const volatile*) (4 samples, 0.02%)</title><rect x="1155.9" y="323.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1158.9" y="334.0"></text>
</g>
<g>
<title>__psynch_cvsignal (87 samples, 0.52%)</title><rect x="1156.9" y="355.0" width="6.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1159.9" y="366.0"></text>
</g>
<g>
<title>pthread_mutex_lock (6 samples, 0.04%)</title><rect x="1163.3" y="355.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1166.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.02%)</title><rect x="1163.8" y="467.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1166.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (6 samples, 0.04%)</title><rect x="1164.0" y="467.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1167.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6 samples, 0.04%)</title><rect x="1164.0" y="451.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1167.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.schedule (13 samples, 0.08%)</title><rect x="1164.6" y="515.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1167.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils.collect (9 samples, 0.05%)</title><rect x="1164.9" y="499.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1167.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (5 samples, 0.03%)</title><rect x="1164.9" y="483.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1167.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (4 samples, 0.02%)</title><rect x="1164.9" y="467.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1167.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.02%)</title><rect x="1165.2" y="483.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1168.2" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (6 samples, 0.04%)</title><rect x="1165.5" y="579.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1168.5" y="590.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (33 samples, 0.20%)</title><rect x="1166.0" y="579.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1169.0" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.get (32 samples, 0.19%)</title><rect x="1166.0" y="563.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1169.0" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (23 samples, 0.14%)</title><rect x="1166.3" y="547.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1169.3" y="558.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="1166.8" y="531.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1169.8" y="542.0"></text>
</g>
<g>
<title>java/lang/String.equals (8 samples, 0.05%)</title><rect x="1167.2" y="531.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1170.2" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (5 samples, 0.03%)</title><rect x="1167.9" y="547.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1170.9" y="558.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (5 samples, 0.03%)</title><rect x="1167.9" y="531.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1170.9" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (19 samples, 0.11%)</title><rect x="1168.4" y="611.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1171.4" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.05%)</title><rect x="1169.0" y="595.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1172.0" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.05%)</title><rect x="1169.0" y="579.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1172.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (12 samples, 0.07%)</title><rect x="1169.8" y="611.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1172.8" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (18 samples, 0.11%)</title><rect x="1170.6" y="611.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1173.6" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (18 samples, 0.11%)</title><rect x="1170.6" y="595.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1173.6" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (124 samples, 0.74%)</title><rect x="1171.9" y="627.0" width="8.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1174.9" y="638.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (124 samples, 0.74%)</title><rect x="1171.9" y="611.0" width="8.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1174.9" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (123 samples, 0.74%)</title><rect x="1171.9" y="595.0" width="8.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1174.9" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (119 samples, 0.71%)</title><rect x="1172.2" y="579.0" width="8.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1175.2" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (118 samples, 0.71%)</title><rect x="1172.3" y="563.0" width="8.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1175.3" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (106 samples, 0.63%)</title><rect x="1172.3" y="547.0" width="7.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1175.3" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (106 samples, 0.63%)</title><rect x="1172.3" y="531.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1175.3" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (99 samples, 0.59%)</title><rect x="1172.8" y="515.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1175.8" y="526.0"></text>
</g>
<g>
<title>read (93 samples, 0.56%)</title><rect x="1173.2" y="499.0" width="6.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1176.2" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (12 samples, 0.07%)</title><rect x="1179.8" y="547.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1182.8" y="558.0"></text>
</g>
<g>
<title>thread_start (127 samples, 0.76%)</title><rect x="1181.0" y="675.0" width="9.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1184.0" y="686.0"></text>
</g>
<g>
<title>_pthread_start (127 samples, 0.76%)</title><rect x="1181.0" y="659.0" width="9.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1184.0" y="670.0"></text>
</g>
<g>
<title>_pthread_body (127 samples, 0.76%)</title><rect x="1181.0" y="643.0" width="9.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1184.0" y="654.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (127 samples, 0.76%)</title><rect x="1181.0" y="627.0" width="9.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1184.0" y="638.0"></text>
</g>
<g>
<title>GangWorker::loop() (42 samples, 0.25%)</title><rect x="1181.0" y="611.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.0" y="622.0"></text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (5 samples, 0.03%)</title><rect x="1181.0" y="595.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1184.0" y="606.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (5 samples, 0.03%)</title><rect x="1181.0" y="579.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.0" y="590.0"></text>
</g>
<g>
<title>G1CMBitMap::iterate(G1CMBitMapClosure*, MemRegion) (5 samples, 0.03%)</title><rect x="1181.0" y="563.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.0" y="574.0"></text>
</g>
<g>
<title>G1CMBitMapClosure::do_addr(HeapWord*) (5 samples, 0.03%)</title><rect x="1181.0" y="547.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1184.0" y="558.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (4 samples, 0.02%)</title><rect x="1181.1" y="531.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.1" y="542.0"></text>
</g>
<g>
<title>int oopDesc::oop_iterate_size&lt;G1CMOopClosure&gt;(G1CMOopClosure*) (4 samples, 0.02%)</title><rect x="1181.1" y="515.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.1" y="526.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (20 samples, 0.12%)</title><rect x="1181.5" y="595.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1184.5" y="606.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (8 samples, 0.05%)</title><rect x="1181.5" y="579.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.5" y="590.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (8 samples, 0.05%)</title><rect x="1181.5" y="563.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1184.5" y="574.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (8 samples, 0.05%)</title><rect x="1181.5" y="547.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.5" y="558.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (8 samples, 0.05%)</title><rect x="1181.5" y="531.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1184.5" y="542.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (8 samples, 0.05%)</title><rect x="1181.5" y="515.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.5" y="526.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (5 samples, 0.03%)</title><rect x="1181.7" y="499.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.7" y="510.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (5 samples, 0.03%)</title><rect x="1181.7" y="483.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1184.7" y="494.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (8 samples, 0.05%)</title><rect x="1182.2" y="579.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.2" y="590.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (8 samples, 0.05%)</title><rect x="1182.2" y="563.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.2" y="574.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (8 samples, 0.05%)</title><rect x="1182.2" y="547.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1185.2" y="558.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (8 samples, 0.05%)</title><rect x="1182.2" y="531.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.2" y="542.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (8 samples, 0.05%)</title><rect x="1182.2" y="515.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.2" y="526.0"></text>
</g>
<g>
<title>frame::oops_code_blob_do(OopClosure*, CodeBlobClosure*, RegisterMap const*) (4 samples, 0.02%)</title><rect x="1182.2" y="499.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.2" y="510.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (5 samples, 0.03%)</title><rect x="1183.1" y="595.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1186.1" y="606.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (5 samples, 0.03%)</title><rect x="1183.1" y="579.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.1" y="590.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) (5 samples, 0.03%)</title><rect x="1183.1" y="563.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1186.1" y="574.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (5 samples, 0.03%)</title><rect x="1183.1" y="547.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.1" y="558.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (5 samples, 0.03%)</title><rect x="1183.1" y="531.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.1" y="542.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::worker_wait_for_task() (7 samples, 0.04%)</title><rect x="1183.4" y="595.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.4" y="606.0"></text>
</g>
<g>
<title>__block_descriptor_tmp (7 samples, 0.04%)</title><rect x="1183.4" y="579.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1186.4" y="590.0"></text>
</g>
<g>
<title>JavaThread::run() (9 samples, 0.05%)</title><rect x="1184.0" y="611.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.0" y="622.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (9 samples, 0.05%)</title><rect x="1184.0" y="595.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.0" y="606.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (6 samples, 0.04%)</title><rect x="1184.0" y="579.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.0" y="590.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (5 samples, 0.03%)</title><rect x="1184.0" y="563.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.0" y="574.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (4 samples, 0.02%)</title><rect x="1184.0" y="547.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.0" y="558.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (4 samples, 0.02%)</title><rect x="1184.0" y="531.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.0" y="542.0"></text>
</g>
<g>
<title>VMThread::run() (66 samples, 0.39%)</title><rect x="1184.6" y="611.0" width="4.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.6" y="622.0"></text>
</g>
<g>
<title>VMThread::loop() (66 samples, 0.39%)</title><rect x="1184.6" y="595.0" width="4.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.6" y="606.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (7 samples, 0.04%)</title><rect x="1184.7" y="579.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.7" y="590.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (57 samples, 0.34%)</title><rect x="1185.3" y="579.0" width="4.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.3" y="590.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (57 samples, 0.34%)</title><rect x="1185.3" y="563.0" width="4.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.3" y="574.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (57 samples, 0.34%)</title><rect x="1185.3" y="547.0" width="4.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.3" y="558.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (54 samples, 0.32%)</title><rect x="1185.3" y="531.0" width="3.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.3" y="542.0"></text>
</g>
<g>
<title>G1CollectedHeap::gc_epilogue(bool) (5 samples, 0.03%)</title><rect x="1185.5" y="515.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.5" y="526.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::resize_all_tlabs() (5 samples, 0.03%)</title><rect x="1185.5" y="499.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.5" y="510.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::resize() (5 samples, 0.03%)</title><rect x="1185.5" y="483.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.5" y="494.0"></text>
</g>
<g>
<title>G1CollectedHeap::gc_prologue(bool) (12 samples, 0.07%)</title><rect x="1185.8" y="515.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.8" y="526.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::accumulate_statistics_before_gc() (11 samples, 0.07%)</title><rect x="1185.8" y="499.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.8" y="510.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::accumulate_statistics() (11 samples, 0.07%)</title><rect x="1185.8" y="483.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.8" y="494.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&amp;, G1ParScanThreadStateSet*) (17 samples, 0.10%)</title><rect x="1186.7" y="515.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.7" y="526.0"></text>
</g>
<g>
<title>DerivedPointerTable::update_pointers() (13 samples, 0.08%)</title><rect x="1186.8" y="499.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.8" y="510.0"></text>
</g>
<g>
<title>G1Policy::record_collection_pause_end(double, unsigned long, unsigned long) (6 samples, 0.04%)</title><rect x="1188.2" y="515.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.2" y="526.0"></text>
</g>
<g>
<title>WatcherThread::run() (10 samples, 0.06%)</title><rect x="1189.3" y="611.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.3" y="622.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (8 samples, 0.05%)</title><rect x="1189.4" y="595.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.4" y="606.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (8 samples, 0.05%)</title><rect x="1189.4" y="579.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.4" y="590.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (8 samples, 0.05%)</title><rect x="1189.4" y="563.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.4" y="574.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (8 samples, 0.05%)</title><rect x="1189.4" y="547.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.4" y="558.0"></text>
</g>
<g>
<title>__psynch_cvwait (7 samples, 0.04%)</title><rect x="1189.5" y="531.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1192.5" y="542.0"></text>
</g>
</g>
</svg>
