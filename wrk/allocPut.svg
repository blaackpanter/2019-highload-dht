<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (320,839 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (219,170 samples, 68.31%)</title><rect x="10.2" y="803.0" width="806.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.2" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (219,170 samples, 68.31%)</title><rect x="10.2" y="787.0" width="806.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.2" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (219,170 samples, 68.31%)</title><rect x="10.2" y="771.0" width="806.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.2" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (92,895 samples, 28.95%)</title><rect x="10.2" y="755.0" width="341.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.2" y="766.0">java/util/concurrent/CompletableFuture$AsyncSu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (92,895 samples, 28.95%)</title><rect x="10.2" y="739.0" width="341.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.2" y="750.0">java/util/concurrent/CompletableFuture.postCom..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (92,895 samples, 28.95%)</title><rect x="10.2" y="723.0" width="341.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.2" y="734.0">java/util/concurrent/CompletableFuture$UniComp..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (384 samples, 0.12%)</title><rect x="10.2" y="707.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="13.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$138/1830298872.apply (92,505 samples, 28.83%)</title><rect x="11.6" y="707.0" width="340.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="14.6" y="718.0">jdk/internal/net/http/MultiExchange$$Lambda$13..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$1 (92,505 samples, 28.83%)</title><rect x="11.6" y="691.0" width="340.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="14.6" y="702.0">jdk/internal/net/http/MultiExchange.lambda$res..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (92,505 samples, 28.83%)</title><rect x="11.6" y="675.0" width="340.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="14.6" y="686.0">jdk/internal/net/http/MultiExchange.responseAs..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (543 samples, 0.17%)</title><rect x="11.6" y="659.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.6" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (543 samples, 0.17%)</title><rect x="11.6" y="643.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="14.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$325/1323411580.get$Lambda (316 samples, 0.10%)</title><rect x="11.6" y="627.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.6" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$325 (316 samples, 0.10%)</title><rect x="11.6" y="611.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="14.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$327/1389098907.get$Lambda (227 samples, 0.07%)</title><rect x="12.7" y="627.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="15.7" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$327 (227 samples, 0.07%)</title><rect x="12.7" y="611.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="15.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (929 samples, 0.29%)</title><rect x="13.6" y="659.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="16.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (929 samples, 0.29%)</title><rect x="13.6" y="643.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="16.6" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (521 samples, 0.16%)</title><rect x="13.6" y="627.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="16.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (408 samples, 0.13%)</title><rect x="15.5" y="627.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (408 samples, 0.13%)</title><rect x="15.5" y="611.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="18.5" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (408 samples, 0.13%)</title><rect x="15.5" y="595.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="18.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,831 samples, 0.57%)</title><rect x="17.0" y="659.0" width="6.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="20.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,831 samples, 0.57%)</title><rect x="17.0" y="643.0" width="6.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="20.0" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (1,025 samples, 0.32%)</title><rect x="17.0" y="627.0" width="3.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="20.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (806 samples, 0.25%)</title><rect x="20.8" y="627.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="23.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (806 samples, 0.25%)</title><rect x="20.8" y="611.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="23.8" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (806 samples, 0.25%)</title><rect x="20.8" y="595.0" width="2.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="23.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (86,119 samples, 26.84%)</title><rect x="23.7" y="659.0" width="316.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="26.7" y="670.0">jdk/internal/net/http/Exchange.responseAsync</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (86,119 samples, 26.84%)</title><rect x="23.7" y="643.0" width="316.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="26.7" y="654.0">jdk/internal/net/http/Exchange.responseAsyn..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (86,119 samples, 26.84%)</title><rect x="23.7" y="627.0" width="316.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="26.7" y="638.0">jdk/internal/net/http/Exchange.responseAsyn..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (875 samples, 0.27%)</title><rect x="23.7" y="611.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="26.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (875 samples, 0.27%)</title><rect x="23.7" y="595.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="26.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$172/833586384.get$Lambda (213 samples, 0.07%)</title><rect x="23.7" y="579.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="26.7" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$172 (213 samples, 0.07%)</title><rect x="23.7" y="563.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="26.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$176/1063808149.get$Lambda (346 samples, 0.11%)</title><rect x="24.5" y="579.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="27.5" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$176 (346 samples, 0.11%)</title><rect x="24.5" y="563.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="27.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$275/177507225.get$Lambda (316 samples, 0.10%)</title><rect x="25.8" y="579.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="28.8" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$275 (316 samples, 0.10%)</title><rect x="25.8" y="563.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="28.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (55,468 samples, 17.29%)</title><rect x="26.9" y="611.0" width="204.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="29.9" y="622.0">java/util/concurrent/Comple..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (55,468 samples, 17.29%)</title><rect x="26.9" y="595.0" width="204.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="29.9" y="606.0">java/util/concurrent/Comple..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (55,028 samples, 17.15%)</title><rect x="26.9" y="579.0" width="202.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="29.9" y="590.0">java/util/concurrent/Compl..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$275/177507225.apply (55,028 samples, 17.15%)</title><rect x="26.9" y="563.0" width="202.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="29.9" y="574.0">jdk/internal/net/http/Exch..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (55,028 samples, 17.15%)</title><rect x="26.9" y="547.0" width="202.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="29.9" y="558.0">jdk/internal/net/http/Exch..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (55,028 samples, 17.15%)</title><rect x="26.9" y="531.0" width="202.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="29.9" y="542.0">jdk/internal/net/http/Exch..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$176/1063808149.apply (55,028 samples, 17.15%)</title><rect x="26.9" y="515.0" width="202.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="29.9" y="526.0">jdk/internal/net/http/Exch..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (55,028 samples, 17.15%)</title><rect x="26.9" y="499.0" width="202.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="29.9" y="510.0">jdk/internal/net/http/Exch..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (494 samples, 0.15%)</title><rect x="26.9" y="483.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="29.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (494 samples, 0.15%)</title><rect x="26.9" y="467.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="29.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$321/493893851.get$Lambda (494 samples, 0.15%)</title><rect x="26.9" y="451.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="29.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$321 (494 samples, 0.15%)</title><rect x="26.9" y="435.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="29.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1,489 samples, 0.46%)</title><rect x="28.8" y="483.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="31.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1,489 samples, 0.46%)</title><rect x="28.8" y="467.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="31.8" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (624 samples, 0.19%)</title><rect x="28.8" y="451.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="31.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (162 samples, 0.05%)</title><rect x="31.0" y="451.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="34.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$321/493893851.apply (162 samples, 0.05%)</title><rect x="31.0" y="435.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="34.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (162 samples, 0.05%)</title><rect x="31.0" y="419.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="34.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (162 samples, 0.05%)</title><rect x="31.0" y="403.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$172/833586384.apply (162 samples, 0.05%)</title><rect x="31.0" y="387.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="34.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (162 samples, 0.05%)</title><rect x="31.0" y="371.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (102 samples, 0.03%)</title><rect x="31.3" y="355.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="34.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (703 samples, 0.22%)</title><rect x="31.6" y="451.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="34.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (703 samples, 0.22%)</title><rect x="31.6" y="435.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="34.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (703 samples, 0.22%)</title><rect x="31.6" y="419.0" width="2.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="34.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (983 samples, 0.31%)</title><rect x="34.2" y="483.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="37.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (983 samples, 0.31%)</title><rect x="34.2" y="467.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="37.2" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (542 samples, 0.17%)</title><rect x="34.2" y="451.0" width="2.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="37.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (436 samples, 0.14%)</title><rect x="36.2" y="451.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="39.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (436 samples, 0.14%)</title><rect x="36.2" y="435.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="39.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (436 samples, 0.14%)</title><rect x="36.2" y="419.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="39.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (52,062 samples, 16.23%)</title><rect x="37.8" y="483.0" width="191.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="40.8" y="494.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (500 samples, 0.16%)</title><rect x="37.8" y="467.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="40.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (500 samples, 0.16%)</title><rect x="37.8" y="451.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$315/748057916.get$Lambda (217 samples, 0.07%)</title><rect x="37.8" y="435.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="40.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$315 (217 samples, 0.07%)</title><rect x="37.8" y="419.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="40.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$317/47341936.get$Lambda (283 samples, 0.09%)</title><rect x="38.6" y="435.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="41.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$317 (283 samples, 0.09%)</title><rect x="38.6" y="419.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="41.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (44,859 samples, 13.98%)</title><rect x="39.7" y="467.0" width="165.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="42.7" y="478.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (44,859 samples, 13.98%)</title><rect x="39.7" y="451.0" width="165.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="42.7" y="462.0">java/util/concurrent/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (660 samples, 0.21%)</title><rect x="39.7" y="435.0" width="2.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="42.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$315/748057916.apply (43,116 samples, 13.44%)</title><rect x="42.1" y="435.0" width="158.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="45.1" y="446.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (43,116 samples, 13.44%)</title><rect x="42.1" y="419.0" width="158.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="45.1" y="430.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (212 samples, 0.07%)</title><rect x="42.1" y="403.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="45.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (212 samples, 0.07%)</title><rect x="42.1" y="387.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="45.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$358/605541379.get$Lambda (212 samples, 0.07%)</title><rect x="42.1" y="371.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="45.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$358 (212 samples, 0.07%)</title><rect x="42.1" y="355.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="45.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (978 samples, 0.30%)</title><rect x="42.9" y="403.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="45.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (978 samples, 0.30%)</title><rect x="42.9" y="387.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="45.9" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (527 samples, 0.16%)</title><rect x="42.9" y="371.0" width="1.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="45.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (451 samples, 0.14%)</title><rect x="44.8" y="371.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="47.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (451 samples, 0.14%)</title><rect x="44.8" y="355.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="47.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (451 samples, 0.14%)</title><rect x="44.8" y="339.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="47.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (431 samples, 0.13%)</title><rect x="46.5" y="403.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="49.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (824 samples, 0.26%)</title><rect x="48.1" y="403.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="51.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (338 samples, 0.11%)</title><rect x="48.1" y="387.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="51.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (486 samples, 0.15%)</title><rect x="49.3" y="387.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="52.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (430 samples, 0.13%)</title><rect x="49.3" y="371.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="52.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (430 samples, 0.13%)</title><rect x="49.3" y="355.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (430 samples, 0.13%)</title><rect x="49.3" y="339.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="52.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (430 samples, 0.13%)</title><rect x="49.3" y="323.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="52.3" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (430 samples, 0.13%)</title><rect x="49.3" y="307.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="52.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (1,046 samples, 0.33%)</title><rect x="51.1" y="403.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="54.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1,046 samples, 0.33%)</title><rect x="51.1" y="387.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="54.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (321 samples, 0.10%)</title><rect x="51.1" y="371.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="54.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (321 samples, 0.10%)</title><rect x="51.1" y="355.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="54.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (321 samples, 0.10%)</title><rect x="51.1" y="339.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="54.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (321 samples, 0.10%)</title><rect x="51.1" y="323.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="54.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (725 samples, 0.23%)</title><rect x="52.3" y="371.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="55.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (725 samples, 0.23%)</title><rect x="52.3" y="355.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="55.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (518 samples, 0.16%)</title><rect x="52.3" y="339.0" width="1.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="55.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (207 samples, 0.06%)</title><rect x="54.2" y="339.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.2" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (207 samples, 0.06%)</title><rect x="54.2" y="323.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="57.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (39,625 samples, 12.35%)</title><rect x="55.0" y="403.0" width="145.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="58.0" y="414.0">jdk/internal/net/h..</text>
</g>
<g>
<title>java.lang.StringBuilder (284 samples, 0.09%)</title><rect x="55.0" y="387.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="58.0" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.toString (597 samples, 0.19%)</title><rect x="56.0" y="387.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="59.0" y="398.0"></text>
</g>
<g>
<title>byte[] (313 samples, 0.10%)</title><rect x="56.0" y="371.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="59.0" y="382.0"></text>
</g>
<g>
<title>java.lang.String (284 samples, 0.09%)</title><rect x="57.1" y="371.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="60.1" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (4,292 samples, 1.34%)</title><rect x="58.2" y="387.0" width="15.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="61.2" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4,292 samples, 1.34%)</title><rect x="58.2" y="371.0" width="15.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="61.2" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (4,292 samples, 1.34%)</title><rect x="58.2" y="355.0" width="15.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.2" y="366.0"></text>
</g>
<g>
<title>byte[] (2,948 samples, 0.92%)</title><rect x="58.2" y="339.0" width="10.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="61.2" y="350.0"></text>
</g>
<g>
<title>byte[] (1,344 samples, 0.42%)</title><rect x="69.0" y="339.0" width="5.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="72.0" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1,062 samples, 0.33%)</title><rect x="74.0" y="387.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="77.0" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1,062 samples, 0.33%)</title><rect x="74.0" y="371.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="77.0" y="382.0"></text>
</g>
<g>
<title>byte[] (1,017 samples, 0.32%)</title><rect x="74.0" y="355.0" width="3.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="77.0" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4,272 samples, 1.33%)</title><rect x="77.9" y="387.0" width="15.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="80.9" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,272 samples, 1.33%)</title><rect x="77.9" y="371.0" width="15.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="80.9" y="382.0"></text>
</g>
<g>
<title>java.lang.String (419 samples, 0.13%)</title><rect x="77.9" y="355.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="80.9" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,853 samples, 1.20%)</title><rect x="79.4" y="355.0" width="14.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="82.4" y="366.0"></text>
</g>
<g>
<title>byte[] (3,032 samples, 0.95%)</title><rect x="79.4" y="339.0" width="11.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="82.4" y="350.0"></text>
</g>
<g>
<title>byte[] (821 samples, 0.26%)</title><rect x="90.6" y="339.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="93.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (619 samples, 0.19%)</title><rect x="93.6" y="387.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="96.6" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (619 samples, 0.19%)</title><rect x="93.6" y="371.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="96.6" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (619 samples, 0.19%)</title><rect x="93.6" y="355.0" width="2.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="96.6" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (291 samples, 0.09%)</title><rect x="95.9" y="387.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="98.9" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (291 samples, 0.09%)</title><rect x="95.9" y="371.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="98.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (23,707 samples, 7.39%)</title><rect x="96.9" y="387.0" width="87.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="99.9" y="398.0">jdk/intern..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (342 samples, 0.11%)</title><rect x="96.9" y="371.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="99.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (342 samples, 0.11%)</title><rect x="96.9" y="355.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="99.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (342 samples, 0.11%)</title><rect x="96.9" y="339.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="99.9" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$374/561363468.get$Lambda (342 samples, 0.11%)</title><rect x="96.9" y="323.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="99.9" y="334.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$374 (342 samples, 0.11%)</title><rect x="96.9" y="307.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="99.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (11,207 samples, 3.49%)</title><rect x="98.2" y="371.0" width="41.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="101.2" y="382.0">jdk..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (5,488 samples, 1.71%)</title><rect x="98.2" y="355.0" width="20.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="101.2" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5,488 samples, 1.71%)</title><rect x="98.2" y="339.0" width="20.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="101.2" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (5,488 samples, 1.71%)</title><rect x="98.2" y="323.0" width="20.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="101.2" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5,488 samples, 1.71%)</title><rect x="98.2" y="307.0" width="20.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="101.2" y="318.0"></text>
</g>
<g>
<title>byte[] (4,563 samples, 1.42%)</title><rect x="98.2" y="291.0" width="16.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="101.2" y="302.0"></text>
</g>
<g>
<title>byte[] (925 samples, 0.29%)</title><rect x="115.0" y="291.0" width="3.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="118.0" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (877 samples, 0.27%)</title><rect x="118.4" y="355.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="121.4" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (877 samples, 0.27%)</title><rect x="118.4" y="339.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="121.4" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (877 samples, 0.27%)</title><rect x="118.4" y="323.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="121.4" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (877 samples, 0.27%)</title><rect x="118.4" y="307.0" width="3.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="121.4" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (897 samples, 0.28%)</title><rect x="121.6" y="355.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="124.6" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (430 samples, 0.13%)</title><rect x="121.6" y="339.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="124.6" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (467 samples, 0.15%)</title><rect x="123.2" y="339.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="126.2" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (467 samples, 0.15%)</title><rect x="123.2" y="323.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="126.2" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$374/561363468.test (3,945 samples, 1.23%)</title><rect x="124.9" y="355.0" width="14.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="127.9" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (3,945 samples, 1.23%)</title><rect x="124.9" y="339.0" width="14.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="127.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/119290689.test (3,945 samples, 1.23%)</title><rect x="124.9" y="323.0" width="14.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="127.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (3,945 samples, 1.23%)</title><rect x="124.9" y="307.0" width="14.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="127.9" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$71/917831210.test (3,945 samples, 1.23%)</title><rect x="124.9" y="291.0" width="14.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="127.9" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (3,945 samples, 1.23%)</title><rect x="124.9" y="275.0" width="14.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="127.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$70/298430307.test (3,945 samples, 1.23%)</title><rect x="124.9" y="259.0" width="14.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="127.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (3,945 samples, 1.23%)</title><rect x="124.9" y="243.0" width="14.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="127.9" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,945 samples, 1.23%)</title><rect x="124.9" y="227.0" width="14.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="127.9" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,945 samples, 1.23%)</title><rect x="124.9" y="211.0" width="14.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="127.9" y="222.0"></text>
</g>
<g>
<title>java.lang.String (1,927 samples, 0.60%)</title><rect x="124.9" y="195.0" width="7.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="127.9" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,018 samples, 0.63%)</title><rect x="132.0" y="195.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="135.0" y="206.0"></text>
</g>
<g>
<title>byte[] (2,018 samples, 0.63%)</title><rect x="132.0" y="179.0" width="7.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="135.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (12,158 samples, 3.79%)</title><rect x="139.4" y="371.0" width="44.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="142.4" y="382.0">jdk/..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (12,158 samples, 3.79%)</title><rect x="139.4" y="355.0" width="44.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="142.4" y="366.0">java..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (12,158 samples, 3.79%)</title><rect x="139.4" y="339.0" width="44.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="142.4" y="350.0">java..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (213 samples, 0.07%)</title><rect x="139.4" y="323.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="142.4" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (302 samples, 0.09%)</title><rect x="140.2" y="323.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="143.2" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (630 samples, 0.20%)</title><rect x="141.3" y="323.0" width="2.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="144.3" y="334.0"></text>
</g>
<g>
<title>java.util.TreeSet (208 samples, 0.06%)</title><rect x="143.6" y="323.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="146.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (397 samples, 0.12%)</title><rect x="144.4" y="323.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="147.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (397 samples, 0.12%)</title><rect x="144.4" y="307.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="147.4" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1284541460.get$Lambda (397 samples, 0.12%)</title><rect x="144.4" y="291.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="147.4" y="302.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (397 samples, 0.12%)</title><rect x="144.4" y="275.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="147.4" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (427 samples, 0.13%)</title><rect x="145.9" y="323.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="148.9" y="334.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (427 samples, 0.13%)</title><rect x="145.9" y="307.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="148.9" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (9,362 samples, 2.92%)</title><rect x="147.4" y="323.0" width="34.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="150.4" y="334.0">ja..</text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1284541460.accept (9,362 samples, 2.92%)</title><rect x="147.4" y="307.0" width="34.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="150.4" y="318.0">ja..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (9,362 samples, 2.92%)</title><rect x="147.4" y="291.0" width="34.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="150.4" y="302.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,916 samples, 0.60%)</title><rect x="147.4" y="275.0" width="7.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="150.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,916 samples, 0.60%)</title><rect x="147.4" y="259.0" width="7.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="150.4" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$127/1726426466.get$Lambda (1,916 samples, 0.60%)</title><rect x="147.4" y="243.0" width="7.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="150.4" y="254.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$127 (1,916 samples, 0.60%)</title><rect x="147.4" y="227.0" width="7.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="150.4" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (746 samples, 0.23%)</title><rect x="154.5" y="275.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="157.5" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$127/1726426466.accept (746 samples, 0.23%)</title><rect x="154.5" y="259.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="157.5" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (746 samples, 0.23%)</title><rect x="154.5" y="243.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="157.5" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (746 samples, 0.23%)</title><rect x="154.5" y="227.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="157.5" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (746 samples, 0.23%)</title><rect x="154.5" y="211.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="157.5" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (746 samples, 0.23%)</title><rect x="154.5" y="195.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="157.5" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (746 samples, 0.23%)</title><rect x="154.5" y="179.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="157.5" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (746 samples, 0.23%)</title><rect x="154.5" y="163.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="157.5" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (746 samples, 0.23%)</title><rect x="154.5" y="147.0" width="2.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="157.5" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (3,653 samples, 1.14%)</title><rect x="157.2" y="275.0" width="13.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="160.2" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (3,653 samples, 1.14%)</title><rect x="157.2" y="259.0" width="13.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="160.2" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1,826 samples, 0.57%)</title><rect x="157.2" y="243.0" width="6.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="160.2" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,826 samples, 0.57%)</title><rect x="157.2" y="227.0" width="6.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="160.2" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,826 samples, 0.57%)</title><rect x="157.2" y="211.0" width="6.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="160.2" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (1,827 samples, 0.57%)</title><rect x="163.9" y="243.0" width="6.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="166.9" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1,827 samples, 0.57%)</title><rect x="163.9" y="227.0" width="6.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="166.9" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3,047 samples, 0.95%)</title><rect x="170.6" y="275.0" width="11.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="173.6" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3,047 samples, 0.95%)</title><rect x="170.6" y="259.0" width="11.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="173.6" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (619 samples, 0.19%)</title><rect x="181.9" y="323.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="184.9" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (619 samples, 0.19%)</title><rect x="181.9" y="307.0" width="2.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="184.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (1,097 samples, 0.34%)</title><rect x="184.1" y="387.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="187.1" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (368 samples, 0.11%)</title><rect x="184.1" y="371.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="187.1" y="382.0"></text>
</g>
<g>
<title>byte[] (368 samples, 0.11%)</title><rect x="184.1" y="355.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="187.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (729 samples, 0.23%)</title><rect x="185.5" y="371.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="188.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (729 samples, 0.23%)</title><rect x="185.5" y="355.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="188.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/7967307.invoke (729 samples, 0.23%)</title><rect x="185.5" y="339.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="188.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (729 samples, 0.23%)</title><rect x="185.5" y="323.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="188.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (327 samples, 0.10%)</title><rect x="185.5" y="307.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="188.5" y="318.0"></text>
</g>
<g>
<title>java.lang.String (327 samples, 0.10%)</title><rect x="185.5" y="291.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="188.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (402 samples, 0.13%)</title><rect x="186.7" y="307.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="189.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (402 samples, 0.13%)</title><rect x="186.7" y="291.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="189.7" y="302.0"></text>
</g>
<g>
<title>byte[] (402 samples, 0.13%)</title><rect x="186.7" y="275.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="189.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (1,072 samples, 0.33%)</title><rect x="188.2" y="387.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="191.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (1,072 samples, 0.33%)</title><rect x="188.2" y="371.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="191.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,072 samples, 0.33%)</title><rect x="188.2" y="355.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="191.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1,072 samples, 0.33%)</title><rect x="188.2" y="339.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="191.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/7967307.invoke (1,072 samples, 0.33%)</title><rect x="188.2" y="323.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="191.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,072 samples, 0.33%)</title><rect x="188.2" y="307.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="191.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (298 samples, 0.09%)</title><rect x="188.2" y="291.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="191.2" y="302.0"></text>
</g>
<g>
<title>java.lang.String (298 samples, 0.09%)</title><rect x="188.2" y="275.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="191.2" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (774 samples, 0.24%)</title><rect x="189.3" y="291.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="192.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (774 samples, 0.24%)</title><rect x="189.3" y="275.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="192.3" y="286.0"></text>
</g>
<g>
<title>byte[] (774 samples, 0.24%)</title><rect x="189.3" y="259.0" width="2.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="192.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2,332 samples, 0.73%)</title><rect x="192.1" y="387.0" width="8.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="195.1" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (693 samples, 0.22%)</title><rect x="192.1" y="371.0" width="2.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="195.1" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (597 samples, 0.19%)</title><rect x="194.7" y="371.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="197.7" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (597 samples, 0.19%)</title><rect x="194.7" y="355.0" width="2.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="197.7" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,042 samples, 0.32%)</title><rect x="196.9" y="371.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="199.9" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,042 samples, 0.32%)</title><rect x="196.9" y="355.0" width="3.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="199.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,083 samples, 0.34%)</title><rect x="200.7" y="435.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="203.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,083 samples, 0.34%)</title><rect x="200.7" y="419.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="203.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,083 samples, 0.34%)</title><rect x="200.7" y="403.0" width="4.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="203.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (1,051 samples, 0.33%)</title><rect x="204.7" y="467.0" width="3.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="207.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (415 samples, 0.13%)</title><rect x="208.7" y="467.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="211.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (5,205 samples, 1.62%)</title><rect x="210.2" y="467.0" width="19.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="213.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (441 samples, 0.14%)</title><rect x="210.2" y="451.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="213.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (441 samples, 0.14%)</title><rect x="210.2" y="435.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="213.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/414125977.get$Lambda (209 samples, 0.07%)</title><rect x="210.2" y="419.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="213.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$288 (209 samples, 0.07%)</title><rect x="210.2" y="403.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="213.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$290/799483436.get$Lambda (232 samples, 0.07%)</title><rect x="210.9" y="419.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="213.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$290 (232 samples, 0.07%)</title><rect x="210.9" y="403.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="213.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (562 samples, 0.18%)</title><rect x="211.8" y="451.0" width="2.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="214.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (444 samples, 0.14%)</title><rect x="213.9" y="451.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="216.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (525 samples, 0.16%)</title><rect x="215.5" y="451.0" width="1.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="218.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (1,423 samples, 0.44%)</title><rect x="217.4" y="451.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="220.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,423 samples, 0.44%)</title><rect x="217.4" y="435.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="220.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,423 samples, 0.44%)</title><rect x="217.4" y="419.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="220.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,423 samples, 0.44%)</title><rect x="217.4" y="403.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="220.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,423 samples, 0.44%)</title><rect x="217.4" y="387.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="220.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,423 samples, 0.44%)</title><rect x="217.4" y="371.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="220.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$257/2141450187.run (1,423 samples, 0.44%)</title><rect x="217.4" y="355.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="220.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,423 samples, 0.44%)</title><rect x="217.4" y="339.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="220.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1,423 samples, 0.44%)</title><rect x="217.4" y="323.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="220.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (481 samples, 0.15%)</title><rect x="217.4" y="307.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="220.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (481 samples, 0.15%)</title><rect x="217.4" y="291.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="220.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$294/1409719001.get$Lambda (184 samples, 0.06%)</title><rect x="217.4" y="275.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="220.4" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$294 (184 samples, 0.06%)</title><rect x="217.4" y="259.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="220.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$299/945266435.get$Lambda (297 samples, 0.09%)</title><rect x="218.1" y="275.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="221.1" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$299 (297 samples, 0.09%)</title><rect x="218.1" y="259.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="221.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (420 samples, 0.13%)</title><rect x="219.2" y="307.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="222.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (522 samples, 0.16%)</title><rect x="220.7" y="307.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="223.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (522 samples, 0.16%)</title><rect x="220.7" y="291.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="223.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (213 samples, 0.07%)</title><rect x="220.7" y="275.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="223.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (309 samples, 0.10%)</title><rect x="221.5" y="275.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="224.5" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (309 samples, 0.10%)</title><rect x="221.5" y="259.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="224.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (1,388 samples, 0.43%)</title><rect x="222.7" y="451.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="225.7" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (286 samples, 0.09%)</title><rect x="222.7" y="435.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="225.7" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap (658 samples, 0.21%)</title><rect x="223.7" y="435.0" width="2.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="226.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (444 samples, 0.14%)</title><rect x="226.1" y="435.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="229.1" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (444 samples, 0.14%)</title><rect x="226.1" y="419.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="229.1" y="430.0"></text>
</g>
<g>
<title>byte[] (444 samples, 0.14%)</title><rect x="226.1" y="403.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="229.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (422 samples, 0.13%)</title><rect x="227.8" y="451.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="230.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (422 samples, 0.13%)</title><rect x="227.8" y="435.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="230.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (440 samples, 0.14%)</title><rect x="229.3" y="579.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="232.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (440 samples, 0.14%)</title><rect x="229.3" y="563.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="232.3" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (440 samples, 0.14%)</title><rect x="229.3" y="547.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="232.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (921 samples, 0.29%)</title><rect x="230.9" y="611.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="233.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (921 samples, 0.29%)</title><rect x="230.9" y="595.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="233.9" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (463 samples, 0.14%)</title><rect x="230.9" y="579.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="233.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (458 samples, 0.14%)</title><rect x="232.6" y="579.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="235.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (458 samples, 0.14%)</title><rect x="232.6" y="563.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="235.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (458 samples, 0.14%)</title><rect x="232.6" y="547.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="235.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (28,855 samples, 8.99%)</title><rect x="234.3" y="611.0" width="106.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="237.3" y="622.0">jdk/internal/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (500 samples, 0.16%)</title><rect x="234.3" y="595.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="237.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (500 samples, 0.16%)</title><rect x="234.3" y="579.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="237.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$268/1764217902.get$Lambda (300 samples, 0.09%)</title><rect x="234.3" y="563.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="237.3" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$268 (300 samples, 0.09%)</title><rect x="234.3" y="547.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="237.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$271/825242236.get$Lambda (200 samples, 0.06%)</title><rect x="235.4" y="563.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="238.4" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$271 (200 samples, 0.06%)</title><rect x="235.4" y="547.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="238.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (826 samples, 0.26%)</title><rect x="236.2" y="595.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="239.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (826 samples, 0.26%)</title><rect x="236.2" y="579.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="239.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$271/825242236.apply (413 samples, 0.13%)</title><rect x="236.2" y="563.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="239.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (413 samples, 0.13%)</title><rect x="236.2" y="547.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="239.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (413 samples, 0.13%)</title><rect x="236.2" y="531.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="239.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (413 samples, 0.13%)</title><rect x="236.2" y="515.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="239.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (413 samples, 0.13%)</title><rect x="237.7" y="563.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="240.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (413 samples, 0.13%)</title><rect x="237.7" y="547.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="240.7" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (413 samples, 0.13%)</title><rect x="237.7" y="531.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="240.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (437 samples, 0.14%)</title><rect x="239.2" y="595.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="242.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (437 samples, 0.14%)</title><rect x="239.2" y="579.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="242.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (437 samples, 0.14%)</title><rect x="239.2" y="563.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="242.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (437 samples, 0.14%)</title><rect x="239.2" y="547.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="242.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (437 samples, 0.14%)</title><rect x="239.2" y="531.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="242.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (27,092 samples, 8.44%)</title><rect x="240.8" y="595.0" width="99.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="243.8" y="606.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (370 samples, 0.12%)</title><rect x="240.8" y="579.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="243.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (370 samples, 0.12%)</title><rect x="240.8" y="563.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="243.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$186/955650005.get$Lambda (370 samples, 0.12%)</title><rect x="240.8" y="547.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="243.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$186 (370 samples, 0.12%)</title><rect x="240.8" y="531.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="243.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (25,024 samples, 7.80%)</title><rect x="242.2" y="579.0" width="92.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="245.2" y="590.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (25,024 samples, 7.80%)</title><rect x="242.2" y="563.0" width="92.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="245.2" y="574.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (24,595 samples, 7.67%)</title><rect x="242.2" y="547.0" width="90.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="245.2" y="558.0">java/util/..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$186/955650005.apply (24,595 samples, 7.67%)</title><rect x="242.2" y="531.0" width="90.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="245.2" y="542.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (24,595 samples, 7.67%)</title><rect x="242.2" y="515.0" width="90.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="245.2" y="526.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (24,595 samples, 7.67%)</title><rect x="242.2" y="499.0" width="90.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="245.2" y="510.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (219 samples, 0.07%)</title><rect x="242.2" y="483.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="245.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (219 samples, 0.07%)</title><rect x="242.2" y="467.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="245.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$263/432643384.get$Lambda (219 samples, 0.07%)</title><rect x="242.2" y="451.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="245.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$263 (219 samples, 0.07%)</title><rect x="242.2" y="435.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="245.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (10,205 samples, 3.18%)</title><rect x="243.0" y="483.0" width="37.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="246.0" y="494.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (10,205 samples, 3.18%)</title><rect x="243.0" y="467.0" width="37.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="246.0" y="478.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (10,205 samples, 3.18%)</title><rect x="243.0" y="451.0" width="37.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="246.0" y="462.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$263/432643384.apply (9,814 samples, 3.06%)</title><rect x="243.0" y="435.0" width="36.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="246.0" y="446.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (9,814 samples, 3.06%)</title><rect x="243.0" y="419.0" width="36.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="246.0" y="430.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (9,814 samples, 3.06%)</title><rect x="243.0" y="403.0" width="36.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="246.0" y="414.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (9,814 samples, 3.06%)</title><rect x="243.0" y="387.0" width="36.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="246.0" y="398.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (6,389 samples, 1.99%)</title><rect x="243.0" y="371.0" width="23.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="246.0" y="382.0">j..</text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (1,810 samples, 0.56%)</title><rect x="243.0" y="355.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="246.0" y="366.0"></text>
</g>
<g>
<title>java.lang.String (321 samples, 0.10%)</title><rect x="243.0" y="339.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="246.0" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (764 samples, 0.24%)</title><rect x="244.2" y="339.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="247.2" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (764 samples, 0.24%)</title><rect x="244.2" y="323.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="247.2" y="334.0"></text>
</g>
<g>
<title>byte[] (764 samples, 0.24%)</title><rect x="244.2" y="307.0" width="2.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="247.2" y="318.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (725 samples, 0.23%)</title><rect x="247.0" y="339.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="250.0" y="350.0"></text>
</g>
<g>
<title>byte[] (725 samples, 0.23%)</title><rect x="247.0" y="323.0" width="2.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="250.0" y="334.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (303 samples, 0.09%)</title><rect x="249.6" y="355.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="252.6" y="366.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (303 samples, 0.09%)</title><rect x="249.6" y="339.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="252.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (3,017 samples, 0.94%)</title><rect x="250.7" y="355.0" width="11.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="253.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (297 samples, 0.09%)</title><rect x="250.7" y="339.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="253.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (2,184 samples, 0.68%)</title><rect x="251.8" y="339.0" width="8.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="254.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (2,184 samples, 0.68%)</title><rect x="251.8" y="323.0" width="8.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="254.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/794075965.linkToTargetMethod (1,611 samples, 0.50%)</title><rect x="251.8" y="307.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="254.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,611 samples, 0.50%)</title><rect x="251.8" y="291.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="254.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$66/1706292388.get$Lambda (1,611 samples, 0.50%)</title><rect x="251.8" y="275.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="254.8" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$66 (1,611 samples, 0.50%)</title><rect x="251.8" y="259.0" width="6.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="254.8" y="270.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (573 samples, 0.18%)</title><rect x="257.8" y="307.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="260.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$66/1706292388.run (573 samples, 0.18%)</title><rect x="257.8" y="291.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="260.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (573 samples, 0.18%)</title><rect x="257.8" y="275.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="260.8" y="286.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (573 samples, 0.18%)</title><rect x="257.8" y="259.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="260.8" y="270.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (573 samples, 0.18%)</title><rect x="257.8" y="243.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="260.8" y="254.0"></text>
</g>
<g>
<title>java.lang.Integer (573 samples, 0.18%)</title><rect x="257.8" y="227.0" width="2.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="260.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (536 samples, 0.17%)</title><rect x="259.9" y="339.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="262.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (536 samples, 0.17%)</title><rect x="259.9" y="323.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="262.9" y="334.0"></text>
</g>
<g>
<title>int[] (536 samples, 0.17%)</title><rect x="259.9" y="307.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="262.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (1,259 samples, 0.39%)</title><rect x="261.8" y="355.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="264.8" y="366.0"></text>
</g>
<g>
<title>byte[] (625 samples, 0.19%)</title><rect x="261.8" y="339.0" width="2.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="264.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (634 samples, 0.20%)</title><rect x="264.1" y="339.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="267.1" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (634 samples, 0.20%)</title><rect x="264.1" y="323.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="267.1" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (634 samples, 0.20%)</title><rect x="264.1" y="307.0" width="2.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="267.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (3,425 samples, 1.07%)</title><rect x="266.5" y="371.0" width="12.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="269.5" y="382.0"></text>
</g>
<g>
<title>java.util.ArrayList (970 samples, 0.30%)</title><rect x="266.5" y="355.0" width="3.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="269.5" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (898 samples, 0.28%)</title><rect x="270.0" y="355.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="273.0" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (898 samples, 0.28%)</title><rect x="270.0" y="339.0" width="3.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="273.0" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,557 samples, 0.49%)</title><rect x="273.3" y="355.0" width="5.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="276.3" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,557 samples, 0.49%)</title><rect x="273.3" y="339.0" width="5.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="276.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (391 samples, 0.12%)</title><rect x="279.1" y="435.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="282.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (391 samples, 0.12%)</title><rect x="279.1" y="419.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="282.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (391 samples, 0.12%)</title><rect x="279.1" y="403.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="282.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (14,171 samples, 4.42%)</title><rect x="280.5" y="483.0" width="52.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="283.5" y="494.0">jdk/i..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (1,091 samples, 0.34%)</title><rect x="280.5" y="467.0" width="4.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="283.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (12,605 samples, 3.93%)</title><rect x="284.7" y="467.0" width="46.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="287.7" y="478.0">jdk/..</text>
</g>
<g>
<title>java.lang.Object (201 samples, 0.06%)</title><rect x="284.7" y="451.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="287.7" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList (405 samples, 0.13%)</title><rect x="285.4" y="451.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="288.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (290 samples, 0.09%)</title><rect x="286.9" y="451.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="289.9" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (579 samples, 0.18%)</title><rect x="288.0" y="451.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="291.0" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (579 samples, 0.18%)</title><rect x="288.0" y="435.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="291.0" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (579 samples, 0.18%)</title><rect x="288.0" y="419.0" width="2.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="291.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (300 samples, 0.09%)</title><rect x="290.1" y="451.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="293.1" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (300 samples, 0.09%)</title><rect x="290.1" y="435.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="293.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (901 samples, 0.28%)</title><rect x="291.2" y="451.0" width="3.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="294.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (594 samples, 0.19%)</title><rect x="294.6" y="451.0" width="2.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="297.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (721 samples, 0.22%)</title><rect x="296.8" y="451.0" width="2.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="299.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (807 samples, 0.25%)</title><rect x="299.4" y="451.0" width="3.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="302.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (3,863 samples, 1.20%)</title><rect x="302.4" y="451.0" width="14.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="305.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (308 samples, 0.10%)</title><rect x="302.4" y="435.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="305.4" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (216 samples, 0.07%)</title><rect x="303.5" y="435.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="306.5" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (348 samples, 0.11%)</title><rect x="304.3" y="435.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="307.3" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (225 samples, 0.07%)</title><rect x="305.6" y="435.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="308.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (191 samples, 0.06%)</title><rect x="306.4" y="435.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="309.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (191 samples, 0.06%)</title><rect x="306.4" y="419.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="309.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$257/2141450187.get$Lambda (191 samples, 0.06%)</title><rect x="306.4" y="403.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="309.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$257 (191 samples, 0.06%)</title><rect x="306.4" y="387.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="309.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (303 samples, 0.09%)</title><rect x="307.1" y="435.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="310.1" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (303 samples, 0.09%)</title><rect x="307.1" y="419.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="310.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (303 samples, 0.09%)</title><rect x="308.2" y="435.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="311.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (446 samples, 0.14%)</title><rect x="309.4" y="435.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="312.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1,523 samples, 0.47%)</title><rect x="311.0" y="435.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="314.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (301 samples, 0.09%)</title><rect x="311.0" y="419.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="314.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (459 samples, 0.14%)</title><rect x="312.1" y="419.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="315.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (190 samples, 0.06%)</title><rect x="313.8" y="419.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="316.8" y="430.0"></text>
</g>
<g>
<title>java.lang.Object (190 samples, 0.06%)</title><rect x="313.8" y="403.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="316.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (573 samples, 0.18%)</title><rect x="314.5" y="419.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="317.5" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (197 samples, 0.06%)</title><rect x="314.5" y="403.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="317.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (206 samples, 0.06%)</title><rect x="315.2" y="403.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="318.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (170 samples, 0.05%)</title><rect x="316.0" y="403.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="319.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (2,490 samples, 0.78%)</title><rect x="316.6" y="451.0" width="9.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="319.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (209 samples, 0.07%)</title><rect x="316.6" y="435.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="319.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (193 samples, 0.06%)</title><rect x="317.4" y="435.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="320.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (191 samples, 0.06%)</title><rect x="318.1" y="435.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="321.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (339 samples, 0.11%)</title><rect x="318.8" y="435.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="321.8" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (339 samples, 0.11%)</title><rect x="318.8" y="419.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="321.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1,558 samples, 0.49%)</title><rect x="320.0" y="435.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="323.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (281 samples, 0.09%)</title><rect x="320.0" y="419.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="323.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (426 samples, 0.13%)</title><rect x="321.1" y="419.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="324.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (220 samples, 0.07%)</title><rect x="322.6" y="419.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="325.6" y="430.0"></text>
</g>
<g>
<title>java.lang.Object (220 samples, 0.07%)</title><rect x="322.6" y="403.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="325.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (631 samples, 0.20%)</title><rect x="323.4" y="419.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="326.4" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (218 samples, 0.07%)</title><rect x="323.4" y="403.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="326.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (191 samples, 0.06%)</title><rect x="324.2" y="403.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="327.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (222 samples, 0.07%)</title><rect x="324.9" y="403.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="327.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (319 samples, 0.10%)</title><rect x="325.8" y="451.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="328.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (319 samples, 0.10%)</title><rect x="325.8" y="435.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="328.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (319 samples, 0.10%)</title><rect x="325.8" y="419.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="328.8" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.get (319 samples, 0.10%)</title><rect x="325.8" y="403.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="328.8" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (319 samples, 0.10%)</title><rect x="325.8" y="387.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="328.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (319 samples, 0.10%)</title><rect x="325.8" y="371.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="328.8" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (319 samples, 0.10%)</title><rect x="325.8" y="355.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="328.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (1,118 samples, 0.35%)</title><rect x="326.9" y="451.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="329.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/794075965.linkToTargetMethod (314 samples, 0.10%)</title><rect x="326.9" y="435.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="329.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (314 samples, 0.10%)</title><rect x="326.9" y="419.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="329.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$195/1235247075.get$Lambda (314 samples, 0.10%)</title><rect x="326.9" y="403.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="329.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$195 (314 samples, 0.10%)</title><rect x="326.9" y="387.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="329.9" y="398.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (804 samples, 0.25%)</title><rect x="328.1" y="435.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="331.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$195/1235247075.run (804 samples, 0.25%)</title><rect x="328.1" y="419.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="331.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (804 samples, 0.25%)</title><rect x="328.1" y="403.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="331.1" y="414.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (200 samples, 0.06%)</title><rect x="328.1" y="387.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="331.1" y="398.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (604 samples, 0.19%)</title><rect x="328.8" y="387.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="331.8" y="398.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (279 samples, 0.09%)</title><rect x="328.8" y="371.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="331.8" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (325 samples, 0.10%)</title><rect x="329.8" y="371.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="332.8" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (325 samples, 0.10%)</title><rect x="329.8" y="355.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="332.8" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (325 samples, 0.10%)</title><rect x="329.8" y="339.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="332.8" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (325 samples, 0.10%)</title><rect x="329.8" y="323.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="332.8" y="334.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (325 samples, 0.10%)</title><rect x="329.8" y="307.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="332.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (432 samples, 0.13%)</title><rect x="331.0" y="467.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="334.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (432 samples, 0.13%)</title><rect x="331.0" y="451.0" width="1.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="334.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (429 samples, 0.13%)</title><rect x="332.6" y="547.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="335.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (429 samples, 0.13%)</title><rect x="332.6" y="531.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="335.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (429 samples, 0.13%)</title><rect x="332.6" y="515.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="335.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (404 samples, 0.13%)</title><rect x="334.2" y="579.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="337.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (404 samples, 0.13%)</title><rect x="334.2" y="563.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="337.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (404 samples, 0.13%)</title><rect x="334.2" y="547.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="337.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (404 samples, 0.13%)</title><rect x="334.2" y="531.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="337.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (404 samples, 0.13%)</title><rect x="334.2" y="515.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="337.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (1,294 samples, 0.40%)</title><rect x="335.7" y="579.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="338.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (858 samples, 0.27%)</title><rect x="335.7" y="563.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="338.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (858 samples, 0.27%)</title><rect x="335.7" y="547.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="338.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2043348462.linkToTargetMethod (858 samples, 0.27%)</title><rect x="335.7" y="531.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="338.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/224970805.invoke (858 samples, 0.27%)</title><rect x="335.7" y="515.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="338.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1897507833.invoke (858 samples, 0.27%)</title><rect x="335.7" y="499.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="338.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (858 samples, 0.27%)</title><rect x="335.7" y="483.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="338.7" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (314 samples, 0.10%)</title><rect x="335.7" y="467.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="338.7" y="478.0"></text>
</g>
<g>
<title>java.lang.String (314 samples, 0.10%)</title><rect x="335.7" y="451.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="338.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (544 samples, 0.17%)</title><rect x="336.8" y="467.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="339.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (544 samples, 0.17%)</title><rect x="336.8" y="451.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="339.8" y="462.0"></text>
</g>
<g>
<title>byte[] (544 samples, 0.17%)</title><rect x="336.8" y="435.0" width="2.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="339.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (436 samples, 0.14%)</title><rect x="338.8" y="563.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="341.8" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (436 samples, 0.14%)</title><rect x="338.8" y="547.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="341.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (517 samples, 0.16%)</title><rect x="340.5" y="659.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="343.5" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (517 samples, 0.16%)</title><rect x="340.5" y="643.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="343.5" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (517 samples, 0.16%)</title><rect x="340.5" y="627.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="343.5" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (517 samples, 0.16%)</title><rect x="340.5" y="611.0" width="1.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="343.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (2,566 samples, 0.80%)</title><rect x="342.4" y="659.0" width="9.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="345.4" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (1,931 samples, 0.60%)</title><rect x="342.4" y="643.0" width="7.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="345.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (635 samples, 0.20%)</title><rect x="349.5" y="643.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="352.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (635 samples, 0.20%)</title><rect x="349.5" y="627.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="352.5" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.now (313 samples, 0.10%)</title><rect x="349.5" y="611.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="352.5" y="622.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (313 samples, 0.10%)</title><rect x="349.5" y="595.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="352.5" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (313 samples, 0.10%)</title><rect x="349.5" y="579.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="352.5" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.create (313 samples, 0.10%)</title><rect x="349.5" y="563.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="352.5" y="574.0"></text>
</g>
<g>
<title>java.time.Instant (313 samples, 0.10%)</title><rect x="349.5" y="547.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="352.5" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (322 samples, 0.10%)</title><rect x="350.6" y="611.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="353.6" y="622.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (322 samples, 0.10%)</title><rect x="350.6" y="595.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="353.6" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.plus (322 samples, 0.10%)</title><rect x="350.6" y="579.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="353.6" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.plus (322 samples, 0.10%)</title><rect x="350.6" y="563.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="353.6" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (322 samples, 0.10%)</title><rect x="350.6" y="547.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="353.6" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (322 samples, 0.10%)</title><rect x="350.6" y="531.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="353.6" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (322 samples, 0.10%)</title><rect x="350.6" y="515.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="353.6" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.create (322 samples, 0.10%)</title><rect x="350.6" y="499.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="353.6" y="510.0"></text>
</g>
<g>
<title>java.time.Instant (322 samples, 0.10%)</title><rect x="350.6" y="483.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="353.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (7,084 samples, 2.21%)</title><rect x="351.8" y="755.0" width="26.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="354.8" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (4,940 samples, 1.54%)</title><rect x="351.8" y="739.0" width="18.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="354.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (4,893 samples, 1.53%)</title><rect x="351.8" y="723.0" width="18.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="354.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (4,893 samples, 1.53%)</title><rect x="351.8" y="707.0" width="18.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="354.8" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (4,893 samples, 1.53%)</title><rect x="351.8" y="691.0" width="18.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="354.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (2,144 samples, 0.67%)</title><rect x="370.0" y="739.0" width="7.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="373.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (2,144 samples, 0.67%)</title><rect x="370.0" y="723.0" width="7.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="373.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (2,144 samples, 0.67%)</title><rect x="370.0" y="707.0" width="7.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="373.0" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (2,144 samples, 0.67%)</title><rect x="370.0" y="691.0" width="7.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="373.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$422/1809300373.run (17,111 samples, 5.33%)</title><rect x="377.9" y="755.0" width="62.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="380.9" y="766.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (17,111 samples, 5.33%)</title><rect x="377.9" y="739.0" width="62.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="380.9" y="750.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (17,111 samples, 5.33%)</title><rect x="377.9" y="723.0" width="62.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="380.9" y="734.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (17,111 samples, 5.33%)</title><rect x="377.9" y="707.0" width="62.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="380.9" y="718.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (17,111 samples, 5.33%)</title><rect x="377.9" y="691.0" width="62.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="380.9" y="702.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (17,111 samples, 5.33%)</title><rect x="377.9" y="675.0" width="62.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="380.9" y="686.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (17,111 samples, 5.33%)</title><rect x="377.9" y="659.0" width="62.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="380.9" y="670.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (17,111 samples, 5.33%)</title><rect x="377.9" y="643.0" width="62.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="380.9" y="654.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (17,111 samples, 5.33%)</title><rect x="377.9" y="627.0" width="62.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="380.9" y="638.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (17,111 samples, 5.33%)</title><rect x="377.9" y="611.0" width="62.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="380.9" y="622.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (17,111 samples, 5.33%)</title><rect x="377.9" y="595.0" width="62.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="380.9" y="606.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (15,680 samples, 4.89%)</title><rect x="377.9" y="579.0" width="57.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="380.9" y="590.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (922 samples, 0.29%)</title><rect x="377.9" y="563.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="380.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (922 samples, 0.29%)</title><rect x="377.9" y="547.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="380.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$424/702163598.get$Lambda (509 samples, 0.16%)</title><rect x="377.9" y="531.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="380.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$424 (509 samples, 0.16%)</title><rect x="377.9" y="515.0" width="1.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="380.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$447/285152979.get$Lambda (219 samples, 0.07%)</title><rect x="379.7" y="531.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="382.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$447 (219 samples, 0.07%)</title><rect x="379.7" y="515.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="382.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$448/109413651.get$Lambda (194 samples, 0.06%)</title><rect x="380.6" y="531.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="383.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$448 (194 samples, 0.06%)</title><rect x="380.6" y="515.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="383.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (14,758 samples, 4.60%)</title><rect x="381.3" y="563.0" width="54.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="384.3" y="574.0">java/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (591 samples, 0.18%)</title><rect x="381.3" y="547.0" width="2.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="384.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (14,167 samples, 4.42%)</title><rect x="383.4" y="547.0" width="52.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="386.4" y="558.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (14,167 samples, 4.42%)</title><rect x="383.4" y="531.0" width="52.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="386.4" y="542.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (14,167 samples, 4.42%)</title><rect x="383.4" y="515.0" width="52.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="386.4" y="526.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2,309 samples, 0.72%)</title><rect x="383.4" y="499.0" width="8.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="386.4" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (828 samples, 0.26%)</title><rect x="383.4" y="483.0" width="3.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="386.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$436/1148243958.apply (1,470 samples, 0.46%)</title><rect x="386.5" y="483.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="389.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (1,470 samples, 0.46%)</title><rect x="386.5" y="467.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="389.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (1,470 samples, 0.46%)</title><rect x="386.5" y="451.0" width="5.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="389.5" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (350 samples, 0.11%)</title><rect x="386.5" y="435.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="389.5" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (350 samples, 0.11%)</title><rect x="386.5" y="419.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="389.5" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (350 samples, 0.11%)</title><rect x="386.5" y="403.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="389.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (1,120 samples, 0.35%)</title><rect x="387.8" y="435.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="390.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (238 samples, 0.07%)</title><rect x="387.8" y="419.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="390.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (238 samples, 0.07%)</title><rect x="387.8" y="403.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="390.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$451/1240847809.get$Lambda (238 samples, 0.07%)</title><rect x="387.8" y="387.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="390.8" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$451 (238 samples, 0.07%)</title><rect x="387.8" y="371.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="390.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (882 samples, 0.27%)</title><rect x="388.7" y="419.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="391.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (882 samples, 0.27%)</title><rect x="388.7" y="403.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="391.7" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (492 samples, 0.15%)</title><rect x="388.7" y="387.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="391.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (390 samples, 0.12%)</title><rect x="390.5" y="387.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="393.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (390 samples, 0.12%)</title><rect x="390.5" y="371.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="393.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (390 samples, 0.12%)</title><rect x="390.5" y="355.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="393.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (11,858 samples, 3.70%)</title><rect x="391.9" y="499.0" width="43.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="394.9" y="510.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (11,858 samples, 3.70%)</title><rect x="391.9" y="483.0" width="43.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="394.9" y="494.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$321/493893851.apply (11,858 samples, 3.70%)</title><rect x="391.9" y="467.0" width="43.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="394.9" y="478.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (11,858 samples, 3.70%)</title><rect x="391.9" y="451.0" width="43.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="394.9" y="462.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (11,858 samples, 3.70%)</title><rect x="391.9" y="435.0" width="43.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="394.9" y="446.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$172/833586384.apply (11,858 samples, 3.70%)</title><rect x="391.9" y="419.0" width="43.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="394.9" y="430.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (11,858 samples, 3.70%)</title><rect x="391.9" y="403.0" width="43.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="394.9" y="414.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (205 samples, 0.06%)</title><rect x="391.9" y="387.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="394.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (205 samples, 0.06%)</title><rect x="391.9" y="371.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="394.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$436/1148243958.get$Lambda (205 samples, 0.06%)</title><rect x="391.9" y="355.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="394.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$436 (205 samples, 0.06%)</title><rect x="391.9" y="339.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="394.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (881 samples, 0.27%)</title><rect x="392.7" y="387.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="395.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (881 samples, 0.27%)</title><rect x="392.7" y="371.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="395.7" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (515 samples, 0.16%)</title><rect x="392.7" y="355.0" width="1.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="395.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (366 samples, 0.11%)</title><rect x="394.6" y="355.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="397.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (366 samples, 0.11%)</title><rect x="394.6" y="339.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="397.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (366 samples, 0.11%)</title><rect x="394.6" y="323.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="397.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (1,065 samples, 0.33%)</title><rect x="395.9" y="387.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="398.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (194 samples, 0.06%)</title><rect x="395.9" y="371.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="398.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (194 samples, 0.06%)</title><rect x="395.9" y="355.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="398.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$440/24271132.get$Lambda (194 samples, 0.06%)</title><rect x="395.9" y="339.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="398.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$440 (194 samples, 0.06%)</title><rect x="395.9" y="323.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="398.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (871 samples, 0.27%)</title><rect x="396.6" y="371.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="399.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (871 samples, 0.27%)</title><rect x="396.6" y="355.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="399.6" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (489 samples, 0.15%)</title><rect x="396.6" y="339.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="399.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (382 samples, 0.12%)</title><rect x="398.4" y="339.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="401.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (382 samples, 0.12%)</title><rect x="398.4" y="323.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="401.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (382 samples, 0.12%)</title><rect x="398.4" y="307.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="401.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (9,707 samples, 3.03%)</title><rect x="399.8" y="387.0" width="35.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="402.8" y="398.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (433 samples, 0.13%)</title><rect x="399.8" y="371.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="402.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (433 samples, 0.13%)</title><rect x="399.8" y="355.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="402.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$426/1696394795.get$Lambda (210 samples, 0.07%)</title><rect x="399.8" y="339.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="402.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$426 (210 samples, 0.07%)</title><rect x="399.8" y="323.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="402.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$432/495021474.get$Lambda (223 samples, 0.07%)</title><rect x="400.6" y="339.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="403.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$432 (223 samples, 0.07%)</title><rect x="400.6" y="323.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="403.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (3,529 samples, 1.10%)</title><rect x="401.4" y="371.0" width="13.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="404.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (3,529 samples, 1.10%)</title><rect x="401.4" y="355.0" width="13.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="404.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (3,529 samples, 1.10%)</title><rect x="401.4" y="339.0" width="13.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="404.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$426/1696394795.accept (1,168 samples, 0.36%)</title><rect x="401.4" y="323.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="404.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (1,168 samples, 0.36%)</title><rect x="401.4" y="307.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="404.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (1,168 samples, 0.36%)</title><rect x="401.4" y="291.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="404.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (296 samples, 0.09%)</title><rect x="401.4" y="275.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="404.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (296 samples, 0.09%)</title><rect x="401.4" y="259.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="404.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$427/217604320.get$Lambda (296 samples, 0.09%)</title><rect x="401.4" y="243.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="404.4" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$427 (296 samples, 0.09%)</title><rect x="401.4" y="227.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="404.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (872 samples, 0.27%)</title><rect x="402.5" y="275.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="405.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (872 samples, 0.27%)</title><rect x="402.5" y="259.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="405.5" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (492 samples, 0.15%)</title><rect x="402.5" y="243.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="405.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (380 samples, 0.12%)</title><rect x="404.3" y="243.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="407.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (380 samples, 0.12%)</title><rect x="404.3" y="227.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="407.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (380 samples, 0.12%)</title><rect x="404.3" y="211.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="407.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$432/495021474.accept (1,555 samples, 0.48%)</title><rect x="405.7" y="323.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="408.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (1,555 samples, 0.48%)</title><rect x="405.7" y="307.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="408.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (1,555 samples, 0.48%)</title><rect x="405.7" y="291.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="408.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (1,555 samples, 0.48%)</title><rect x="405.7" y="275.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="408.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (1,555 samples, 0.48%)</title><rect x="405.7" y="259.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="408.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,555 samples, 0.48%)</title><rect x="405.7" y="243.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="408.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,555 samples, 0.48%)</title><rect x="405.7" y="227.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="408.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,555 samples, 0.48%)</title><rect x="405.7" y="211.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="408.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,555 samples, 0.48%)</title><rect x="405.7" y="195.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="408.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1,555 samples, 0.48%)</title><rect x="405.7" y="179.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="408.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (633 samples, 0.20%)</title><rect x="405.7" y="163.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="408.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (633 samples, 0.20%)</title><rect x="405.7" y="147.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="408.7" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (310 samples, 0.10%)</title><rect x="405.7" y="131.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="408.7" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (323 samples, 0.10%)</title><rect x="406.9" y="131.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="409.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (323 samples, 0.10%)</title><rect x="406.9" y="115.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="409.9" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (323 samples, 0.10%)</title><rect x="406.9" y="99.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="409.9" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (323 samples, 0.10%)</title><rect x="406.9" y="83.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="409.9" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (323 samples, 0.10%)</title><rect x="406.9" y="67.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="409.9" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (323 samples, 0.10%)</title><rect x="406.9" y="51.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="409.9" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (922 samples, 0.29%)</title><rect x="408.1" y="163.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="411.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (922 samples, 0.29%)</title><rect x="408.1" y="147.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="411.1" y="158.0"></text>
</g>
<g>
<title>java/util/List.of (323 samples, 0.10%)</title><rect x="408.1" y="131.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="411.1" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (323 samples, 0.10%)</title><rect x="408.1" y="115.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="411.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (599 samples, 0.19%)</title><rect x="409.2" y="131.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="412.2" y="142.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (302 samples, 0.09%)</title><rect x="409.2" y="115.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="412.2" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (297 samples, 0.09%)</title><rect x="410.4" y="115.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="413.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (297 samples, 0.09%)</title><rect x="410.4" y="99.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="413.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (297 samples, 0.09%)</title><rect x="410.4" y="83.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="413.4" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (297 samples, 0.09%)</title><rect x="410.4" y="67.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="413.4" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (297 samples, 0.09%)</title><rect x="410.4" y="51.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="413.4" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (297 samples, 0.09%)</title><rect x="410.4" y="35.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="413.4" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (806 samples, 0.25%)</title><rect x="411.4" y="323.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="414.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (806 samples, 0.25%)</title><rect x="411.4" y="307.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="414.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (806 samples, 0.25%)</title><rect x="411.4" y="291.0" width="3.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="414.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (5,745 samples, 1.79%)</title><rect x="414.4" y="371.0" width="21.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="417.4" y="382.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (516 samples, 0.16%)</title><rect x="414.4" y="355.0" width="1.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="417.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (431 samples, 0.13%)</title><rect x="416.3" y="355.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="419.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (431 samples, 0.13%)</title><rect x="416.3" y="339.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="419.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (431 samples, 0.13%)</title><rect x="416.3" y="323.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="419.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (4,798 samples, 1.50%)</title><rect x="417.9" y="355.0" width="17.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="420.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher (278 samples, 0.09%)</title><rect x="417.9" y="339.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="420.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (2,564 samples, 0.80%)</title><rect x="418.9" y="339.0" width="9.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="421.9" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (408 samples, 0.13%)</title><rect x="418.9" y="323.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="421.9" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (408 samples, 0.13%)</title><rect x="418.9" y="307.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="421.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (511 samples, 0.16%)</title><rect x="420.4" y="323.0" width="1.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="423.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (1,645 samples, 0.51%)</title><rect x="422.3" y="323.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="425.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription$PullTask (195 samples, 0.06%)</title><rect x="422.3" y="307.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="425.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (192 samples, 0.06%)</title><rect x="423.0" y="307.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="426.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (365 samples, 0.11%)</title><rect x="423.7" y="307.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="426.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (286 samples, 0.09%)</title><rect x="425.1" y="307.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="428.1" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (286 samples, 0.09%)</title><rect x="425.1" y="291.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="428.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (607 samples, 0.19%)</title><rect x="426.1" y="307.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="429.1" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (176 samples, 0.05%)</title><rect x="426.1" y="291.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="429.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (226 samples, 0.07%)</title><rect x="426.8" y="291.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="429.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (205 samples, 0.06%)</title><rect x="427.6" y="291.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="430.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (1,956 samples, 0.61%)</title><rect x="428.3" y="339.0" width="7.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="431.3" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (280 samples, 0.09%)</title><rect x="428.3" y="323.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="431.3" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (985 samples, 0.31%)</title><rect x="429.4" y="323.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="432.4" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (595 samples, 0.19%)</title><rect x="429.4" y="307.0" width="2.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="432.4" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (390 samples, 0.12%)</title><rect x="431.6" y="307.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="434.6" y="318.0"></text>
</g>
<g>
<title>byte[] (390 samples, 0.12%)</title><rect x="431.6" y="291.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="434.6" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (691 samples, 0.22%)</title><rect x="433.0" y="323.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="436.0" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (691 samples, 0.22%)</title><rect x="433.0" y="307.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="436.0" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (691 samples, 0.22%)</title><rect x="433.0" y="291.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="436.0" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (691 samples, 0.22%)</title><rect x="433.0" y="275.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="436.0" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (691 samples, 0.22%)</title><rect x="433.0" y="259.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="436.0" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (687 samples, 0.21%)</title><rect x="433.0" y="243.0" width="2.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="436.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1,431 samples, 0.45%)</title><rect x="435.5" y="579.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="438.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1,431 samples, 0.45%)</title><rect x="435.5" y="563.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="438.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1,431 samples, 0.45%)</title><rect x="435.5" y="547.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="438.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1,431 samples, 0.45%)</title><rect x="435.5" y="531.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="438.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1,431 samples, 0.45%)</title><rect x="435.5" y="515.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="438.5" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1,431 samples, 0.45%)</title><rect x="435.5" y="499.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="438.5" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (606 samples, 0.19%)</title><rect x="435.5" y="483.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="438.5" y="494.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (606 samples, 0.19%)</title><rect x="435.5" y="467.0" width="2.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="438.5" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (825 samples, 0.26%)</title><rect x="437.8" y="483.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="440.8" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (825 samples, 0.26%)</title><rect x="437.8" y="467.0" width="3.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="440.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (50,154 samples, 15.63%)</title><rect x="440.8" y="755.0" width="184.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="443.8" y="766.0">jdk/internal/net/http/co..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (50,154 samples, 15.63%)</title><rect x="440.8" y="739.0" width="184.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="443.8" y="750.0">jdk/internal/net/http/co..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (42,710 samples, 13.31%)</title><rect x="440.8" y="723.0" width="157.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="443.8" y="734.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$257/2141450187.run (42,710 samples, 13.31%)</title><rect x="440.8" y="707.0" width="157.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="443.8" y="718.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (42,710 samples, 13.31%)</title><rect x="440.8" y="691.0" width="157.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="443.8" y="702.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (945 samples, 0.29%)</title><rect x="440.8" y="675.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="443.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (945 samples, 0.29%)</title><rect x="440.8" y="659.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="443.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (945 samples, 0.29%)</title><rect x="440.8" y="643.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="443.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (945 samples, 0.29%)</title><rect x="440.8" y="627.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="443.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/931496835.linkToTargetMethod (500 samples, 0.16%)</title><rect x="440.8" y="611.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="443.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1324578393.invoke (500 samples, 0.16%)</title><rect x="440.8" y="595.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="443.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (500 samples, 0.16%)</title><rect x="440.8" y="579.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="443.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (500 samples, 0.16%)</title><rect x="440.8" y="563.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="443.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (500 samples, 0.16%)</title><rect x="440.8" y="547.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="443.8" y="558.0"></text>
</g>
<g>
<title>byte[] (500 samples, 0.16%)</title><rect x="440.8" y="531.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="443.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (445 samples, 0.14%)</title><rect x="442.6" y="611.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="445.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (445 samples, 0.14%)</title><rect x="442.6" y="595.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="445.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (445 samples, 0.14%)</title><rect x="442.6" y="579.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="445.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$420/1458729479.get$Lambda (445 samples, 0.14%)</title><rect x="442.6" y="563.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="445.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$420 (445 samples, 0.14%)</title><rect x="442.6" y="547.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="445.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (41,765 samples, 13.02%)</title><rect x="444.3" y="675.0" width="153.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="447.3" y="686.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (41,765 samples, 13.02%)</title><rect x="444.3" y="659.0" width="153.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="447.3" y="670.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (41,765 samples, 13.02%)</title><rect x="444.3" y="643.0" width="153.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="447.3" y="654.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (41,765 samples, 13.02%)</title><rect x="444.3" y="627.0" width="153.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="447.3" y="638.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (19,533 samples, 6.09%)</title><rect x="444.3" y="611.0" width="71.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="447.3" y="622.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (19,533 samples, 6.09%)</title><rect x="444.3" y="595.0" width="71.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="447.3" y="606.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (19,533 samples, 6.09%)</title><rect x="444.3" y="579.0" width="71.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="447.3" y="590.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (19,533 samples, 6.09%)</title><rect x="444.3" y="563.0" width="71.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="447.3" y="574.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (19,533 samples, 6.09%)</title><rect x="444.3" y="547.0" width="71.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="447.3" y="558.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (19,533 samples, 6.09%)</title><rect x="444.3" y="531.0" width="71.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="447.3" y="542.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (19,533 samples, 6.09%)</title><rect x="444.3" y="515.0" width="71.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="447.3" y="526.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (18,931 samples, 5.90%)</title><rect x="444.3" y="499.0" width="69.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="447.3" y="510.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (18,931 samples, 5.90%)</title><rect x="444.3" y="483.0" width="69.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="447.3" y="494.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (18,537 samples, 5.78%)</title><rect x="444.3" y="467.0" width="68.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="447.3" y="478.0">java/ut..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (375 samples, 0.12%)</title><rect x="444.3" y="451.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="447.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$440/24271132.apply (387 samples, 0.12%)</title><rect x="445.7" y="451.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="448.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (387 samples, 0.12%)</title><rect x="445.7" y="435.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="448.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (387 samples, 0.12%)</title><rect x="445.7" y="419.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="448.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (387 samples, 0.12%)</title><rect x="445.7" y="403.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="448.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (387 samples, 0.12%)</title><rect x="445.7" y="387.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="448.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$142/1552091493.apply (16,983 samples, 5.29%)</title><rect x="447.1" y="451.0" width="62.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="450.1" y="462.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (16,983 samples, 5.29%)</title><rect x="447.1" y="435.0" width="62.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="450.1" y="446.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (289 samples, 0.09%)</title><rect x="447.1" y="419.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="450.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (289 samples, 0.09%)</title><rect x="447.1" y="403.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="450.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$494/1940969782.get$Lambda (289 samples, 0.09%)</title><rect x="447.1" y="387.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="450.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$494 (289 samples, 0.09%)</title><rect x="447.1" y="371.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="450.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (881 samples, 0.27%)</title><rect x="448.1" y="419.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="451.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (881 samples, 0.27%)</title><rect x="448.1" y="403.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="451.1" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (512 samples, 0.16%)</title><rect x="448.1" y="387.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="451.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (369 samples, 0.12%)</title><rect x="450.0" y="387.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="453.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (369 samples, 0.12%)</title><rect x="450.0" y="371.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="453.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (369 samples, 0.12%)</title><rect x="450.0" y="355.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="453.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (15,813 samples, 4.93%)</title><rect x="451.4" y="419.0" width="58.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="454.4" y="430.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (236 samples, 0.07%)</title><rect x="451.4" y="403.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="454.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (236 samples, 0.07%)</title><rect x="451.4" y="387.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="454.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$490/2010863622.get$Lambda (236 samples, 0.07%)</title><rect x="451.4" y="371.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="454.4" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$490 (236 samples, 0.07%)</title><rect x="451.4" y="355.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="454.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (870 samples, 0.27%)</title><rect x="452.3" y="403.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="455.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (870 samples, 0.27%)</title><rect x="452.3" y="387.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="455.3" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (471 samples, 0.15%)</title><rect x="452.3" y="371.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="455.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (399 samples, 0.12%)</title><rect x="454.0" y="371.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="457.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (399 samples, 0.12%)</title><rect x="454.0" y="355.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="457.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (399 samples, 0.12%)</title><rect x="454.0" y="339.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="457.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (14,707 samples, 4.58%)</title><rect x="455.5" y="403.0" width="54.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="458.5" y="414.0">jdk/i..</text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$129/1413017260.apply (1,080 samples, 0.34%)</title><rect x="455.5" y="387.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="458.5" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (1,080 samples, 0.34%)</title><rect x="455.5" y="371.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="458.5" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (1,080 samples, 0.34%)</title><rect x="455.5" y="355.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="458.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (400 samples, 0.12%)</title><rect x="455.5" y="339.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="458.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (680 samples, 0.21%)</title><rect x="456.9" y="339.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="459.9" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (298 samples, 0.09%)</title><rect x="456.9" y="323.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="459.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (382 samples, 0.12%)</title><rect x="458.0" y="323.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="461.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (13,627 samples, 4.25%)</title><rect x="459.4" y="387.0" width="50.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="462.4" y="398.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (383 samples, 0.12%)</title><rect x="459.4" y="371.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="462.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (383 samples, 0.12%)</title><rect x="459.4" y="355.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="462.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$486/1745057828.get$Lambda (177 samples, 0.06%)</title><rect x="459.4" y="339.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="462.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$486 (177 samples, 0.06%)</title><rect x="459.4" y="323.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="462.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$487/707438118.get$Lambda (206 samples, 0.06%)</title><rect x="460.1" y="339.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="463.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$487 (206 samples, 0.06%)</title><rect x="460.1" y="323.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="463.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/651615589.linkToTargetMethod (356 samples, 0.11%)</title><rect x="460.8" y="371.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="463.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (356 samples, 0.11%)</title><rect x="460.8" y="355.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="463.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$464/2012603104.get$Lambda (356 samples, 0.11%)</title><rect x="460.8" y="339.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="463.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$464 (356 samples, 0.11%)</title><rect x="460.8" y="323.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="463.8" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (2,710 samples, 0.84%)</title><rect x="462.1" y="371.0" width="10.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="465.1" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,074 samples, 0.33%)</title><rect x="462.1" y="355.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="465.1" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (409 samples, 0.13%)</title><rect x="462.1" y="339.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="465.1" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (409 samples, 0.13%)</title><rect x="462.1" y="323.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="465.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (665 samples, 0.21%)</title><rect x="463.6" y="339.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="466.6" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (665 samples, 0.21%)</title><rect x="463.6" y="323.0" width="2.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="466.6" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (870 samples, 0.27%)</title><rect x="466.1" y="355.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="469.1" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (870 samples, 0.27%)</title><rect x="466.1" y="339.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="469.1" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (870 samples, 0.27%)</title><rect x="466.1" y="323.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="469.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (316 samples, 0.10%)</title><rect x="466.1" y="307.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="469.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (316 samples, 0.10%)</title><rect x="466.1" y="291.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="469.1" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (316 samples, 0.10%)</title><rect x="466.1" y="275.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="469.1" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (316 samples, 0.10%)</title><rect x="466.1" y="259.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="469.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$461/482899685.get (261 samples, 0.08%)</title><rect x="467.3" y="307.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="470.3" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (261 samples, 0.08%)</title><rect x="467.3" y="291.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="470.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (293 samples, 0.09%)</title><rect x="468.2" y="307.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="471.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (293 samples, 0.09%)</title><rect x="468.2" y="291.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="471.2" y="302.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (293 samples, 0.09%)</title><rect x="468.2" y="275.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="471.2" y="286.0"></text>
</g>
<g>
<title>java.util.OptionalLong (293 samples, 0.09%)</title><rect x="468.2" y="259.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="471.2" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (766 samples, 0.24%)</title><rect x="469.3" y="355.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="472.3" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (763 samples, 0.24%)</title><rect x="469.3" y="339.0" width="2.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="472.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,701 samples, 0.53%)</title><rect x="472.1" y="371.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="475.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (832 samples, 0.26%)</title><rect x="472.1" y="355.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="475.1" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (476 samples, 0.15%)</title><rect x="472.1" y="339.0" width="1.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="475.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (356 samples, 0.11%)</title><rect x="473.9" y="339.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="476.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (356 samples, 0.11%)</title><rect x="473.9" y="323.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="476.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (356 samples, 0.11%)</title><rect x="473.9" y="307.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="476.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (869 samples, 0.27%)</title><rect x="475.2" y="355.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="478.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (869 samples, 0.27%)</title><rect x="475.2" y="339.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="478.2" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (491 samples, 0.15%)</title><rect x="475.2" y="323.0" width="1.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="478.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (378 samples, 0.12%)</title><rect x="477.0" y="323.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="480.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (378 samples, 0.12%)</title><rect x="477.0" y="307.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="480.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (378 samples, 0.12%)</title><rect x="477.0" y="291.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="480.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (335 samples, 0.10%)</title><rect x="478.4" y="371.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="481.4" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (403 samples, 0.13%)</title><rect x="479.6" y="371.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="482.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (395 samples, 0.12%)</title><rect x="481.1" y="371.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="484.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (239 samples, 0.07%)</title><rect x="482.5" y="371.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="485.5" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (239 samples, 0.07%)</title><rect x="482.5" y="355.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="485.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (7,105 samples, 2.21%)</title><rect x="483.4" y="371.0" width="26.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="486.4" y="382.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$464/2012603104.run (7,105 samples, 2.21%)</title><rect x="483.4" y="355.0" width="26.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="486.4" y="366.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (7,105 samples, 2.21%)</title><rect x="483.4" y="339.0" width="26.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="486.4" y="350.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (915 samples, 0.29%)</title><rect x="483.4" y="323.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="486.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (915 samples, 0.29%)</title><rect x="483.4" y="307.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="486.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$472/1342553686.get$Lambda (191 samples, 0.06%)</title><rect x="483.4" y="291.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="486.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$472 (191 samples, 0.06%)</title><rect x="483.4" y="275.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="486.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$473/1136680286.get$Lambda (302 samples, 0.09%)</title><rect x="484.1" y="291.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="487.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$473 (302 samples, 0.09%)</title><rect x="484.1" y="275.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="487.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$478/1518507171.get$Lambda (422 samples, 0.13%)</title><rect x="485.2" y="291.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="488.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$478 (422 samples, 0.13%)</title><rect x="485.2" y="275.0" width="1.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="488.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (886 samples, 0.28%)</title><rect x="486.8" y="323.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="489.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (886 samples, 0.28%)</title><rect x="486.8" y="307.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="489.8" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (462 samples, 0.14%)</title><rect x="486.8" y="291.0" width="1.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="489.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (424 samples, 0.13%)</title><rect x="488.5" y="291.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="491.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (424 samples, 0.13%)</title><rect x="488.5" y="275.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="491.5" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (424 samples, 0.13%)</title><rect x="488.5" y="259.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="491.5" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (521 samples, 0.16%)</title><rect x="490.0" y="323.0" width="2.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="493.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (396 samples, 0.12%)</title><rect x="492.0" y="323.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="495.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (396 samples, 0.12%)</title><rect x="492.0" y="307.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="495.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (1,146 samples, 0.36%)</title><rect x="493.4" y="323.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="496.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (1,146 samples, 0.36%)</title><rect x="493.4" y="307.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="496.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (308 samples, 0.10%)</title><rect x="493.4" y="291.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="496.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (308 samples, 0.10%)</title><rect x="493.4" y="275.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="496.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$480/1590453465.get$Lambda (308 samples, 0.10%)</title><rect x="493.4" y="259.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="496.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$480 (308 samples, 0.10%)</title><rect x="493.4" y="243.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="496.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (838 samples, 0.26%)</title><rect x="494.5" y="291.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="497.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (838 samples, 0.26%)</title><rect x="494.5" y="275.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="497.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (838 samples, 0.26%)</title><rect x="494.5" y="259.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="497.5" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (489 samples, 0.15%)</title><rect x="494.5" y="243.0" width="1.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="497.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (349 samples, 0.11%)</title><rect x="496.3" y="243.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="499.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (349 samples, 0.11%)</title><rect x="496.3" y="227.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="499.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (349 samples, 0.11%)</title><rect x="496.3" y="211.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="499.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (1,156 samples, 0.36%)</title><rect x="497.6" y="323.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="500.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,156 samples, 0.36%)</title><rect x="497.6" y="307.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="500.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/232307208.invoke (1,156 samples, 0.36%)</title><rect x="497.6" y="291.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="500.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,156 samples, 0.36%)</title><rect x="497.6" y="275.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="500.6" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (318 samples, 0.10%)</title><rect x="497.6" y="259.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="500.6" y="270.0"></text>
</g>
<g>
<title>java.lang.String (318 samples, 0.10%)</title><rect x="497.6" y="243.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="500.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (838 samples, 0.26%)</title><rect x="498.8" y="259.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="501.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (838 samples, 0.26%)</title><rect x="498.8" y="243.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="501.8" y="254.0"></text>
</g>
<g>
<title>byte[] (826 samples, 0.26%)</title><rect x="498.8" y="227.0" width="3.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="501.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (2,085 samples, 0.65%)</title><rect x="501.9" y="323.0" width="7.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="504.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (607 samples, 0.19%)</title><rect x="501.9" y="307.0" width="2.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="504.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (1,478 samples, 0.46%)</title><rect x="504.1" y="307.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="507.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,478 samples, 0.46%)</title><rect x="504.1" y="291.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="507.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/232307208.invoke (1,478 samples, 0.46%)</title><rect x="504.1" y="275.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="507.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,478 samples, 0.46%)</title><rect x="504.1" y="259.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="507.1" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (290 samples, 0.09%)</title><rect x="504.1" y="243.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="507.1" y="254.0"></text>
</g>
<g>
<title>java.lang.String (290 samples, 0.09%)</title><rect x="504.1" y="227.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="507.1" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1,188 samples, 0.37%)</title><rect x="505.2" y="243.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="508.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1,188 samples, 0.37%)</title><rect x="505.2" y="227.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="508.2" y="238.0"></text>
</g>
<g>
<title>byte[] (1,134 samples, 0.35%)</title><rect x="505.2" y="211.0" width="4.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="508.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$325/1323411580.apply (792 samples, 0.25%)</title><rect x="509.5" y="451.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="512.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$5 (792 samples, 0.25%)</title><rect x="509.5" y="435.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="512.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (396 samples, 0.12%)</title><rect x="509.5" y="419.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="512.5" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (396 samples, 0.12%)</title><rect x="509.5" y="403.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="512.5" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (396 samples, 0.12%)</title><rect x="509.5" y="387.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="512.5" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (396 samples, 0.12%)</title><rect x="509.5" y="371.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="512.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (396 samples, 0.12%)</title><rect x="511.0" y="419.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="514.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (396 samples, 0.12%)</title><rect x="511.0" y="403.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="514.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (394 samples, 0.12%)</title><rect x="512.5" y="467.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="515.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (394 samples, 0.12%)</title><rect x="512.5" y="451.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="515.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$327/1389098907.apply (394 samples, 0.12%)</title><rect x="512.5" y="435.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="515.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (394 samples, 0.12%)</title><rect x="512.5" y="419.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="515.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (394 samples, 0.12%)</title><rect x="512.5" y="403.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="515.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (394 samples, 0.12%)</title><rect x="512.5" y="387.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="515.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$451/1240847809.apply (602 samples, 0.19%)</title><rect x="513.9" y="499.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="516.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (602 samples, 0.19%)</title><rect x="513.9" y="483.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="516.9" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (602 samples, 0.19%)</title><rect x="513.9" y="467.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="516.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (22,232 samples, 6.93%)</title><rect x="516.1" y="611.0" width="81.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="519.1" y="622.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (1,326 samples, 0.41%)</title><rect x="516.1" y="595.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="519.1" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1,326 samples, 0.41%)</title><rect x="516.1" y="579.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="519.1" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1,326 samples, 0.41%)</title><rect x="516.1" y="563.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="519.1" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1,326 samples, 0.41%)</title><rect x="516.1" y="547.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="519.1" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,326 samples, 0.41%)</title><rect x="516.1" y="531.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="519.1" y="542.0"></text>
</g>
<g>
<title>byte[] (1,322 samples, 0.41%)</title><rect x="516.1" y="515.0" width="4.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="519.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (717 samples, 0.22%)</title><rect x="521.0" y="595.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="524.0" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (717 samples, 0.22%)</title><rect x="521.0" y="579.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="524.0" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (717 samples, 0.22%)</title><rect x="521.0" y="563.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="524.0" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (717 samples, 0.22%)</title><rect x="521.0" y="547.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="524.0" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (717 samples, 0.22%)</title><rect x="521.0" y="531.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="524.0" y="542.0"></text>
</g>
<g>
<title>byte[] (716 samples, 0.22%)</title><rect x="521.0" y="515.0" width="2.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="524.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (2,069 samples, 0.64%)</title><rect x="523.6" y="595.0" width="7.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="526.6" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (289 samples, 0.09%)</title><rect x="523.6" y="579.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="526.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (611 samples, 0.19%)</title><rect x="524.7" y="579.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="527.7" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (611 samples, 0.19%)</title><rect x="524.7" y="563.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="527.7" y="574.0"></text>
</g>
<g>
<title>java.lang.String (302 samples, 0.09%)</title><rect x="524.7" y="547.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="527.7" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (309 samples, 0.10%)</title><rect x="525.8" y="547.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="528.8" y="558.0"></text>
</g>
<g>
<title>byte[] (309 samples, 0.10%)</title><rect x="525.8" y="531.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="528.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (377 samples, 0.12%)</title><rect x="526.9" y="579.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="529.9" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (377 samples, 0.12%)</title><rect x="526.9" y="563.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="529.9" y="574.0"></text>
</g>
<g>
<title>byte[] (377 samples, 0.12%)</title><rect x="526.9" y="547.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="529.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (792 samples, 0.25%)</title><rect x="528.3" y="579.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="531.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (792 samples, 0.25%)</title><rect x="528.3" y="563.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="531.3" y="574.0"></text>
</g>
<g>
<title>java.lang.String (312 samples, 0.10%)</title><rect x="528.3" y="547.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="531.3" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (480 samples, 0.15%)</title><rect x="529.5" y="547.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="532.5" y="558.0"></text>
</g>
<g>
<title>byte[] (480 samples, 0.15%)</title><rect x="529.5" y="531.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="532.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (6,210 samples, 1.94%)</title><rect x="531.2" y="595.0" width="22.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="534.2" y="606.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (6,210 samples, 1.94%)</title><rect x="531.2" y="579.0" width="22.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="534.2" y="590.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (6,210 samples, 1.94%)</title><rect x="531.2" y="563.0" width="22.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="534.2" y="574.0">j..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (185 samples, 0.06%)</title><rect x="531.2" y="547.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="534.2" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (306 samples, 0.10%)</title><rect x="531.9" y="547.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="534.9" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (611 samples, 0.19%)</title><rect x="533.1" y="547.0" width="2.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="536.1" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (209 samples, 0.07%)</title><rect x="535.3" y="547.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="538.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (413 samples, 0.13%)</title><rect x="536.1" y="547.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="539.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (413 samples, 0.13%)</title><rect x="536.1" y="531.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="539.1" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1284541460.get$Lambda (413 samples, 0.13%)</title><rect x="536.1" y="515.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="539.1" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (413 samples, 0.13%)</title><rect x="536.1" y="499.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="539.1" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (398 samples, 0.12%)</title><rect x="537.6" y="547.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="540.6" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (398 samples, 0.12%)</title><rect x="537.6" y="531.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="540.6" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (3,424 samples, 1.07%)</title><rect x="539.0" y="547.0" width="12.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="542.0" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1284541460.accept (3,424 samples, 1.07%)</title><rect x="539.0" y="531.0" width="12.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="542.0" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3,424 samples, 1.07%)</title><rect x="539.0" y="515.0" width="12.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="542.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (571 samples, 0.18%)</title><rect x="539.0" y="499.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="542.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (571 samples, 0.18%)</title><rect x="539.0" y="483.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="542.0" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$127/1726426466.get$Lambda (571 samples, 0.18%)</title><rect x="539.0" y="467.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="542.0" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$127 (571 samples, 0.18%)</title><rect x="539.0" y="451.0" width="2.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="542.0" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (700 samples, 0.22%)</title><rect x="541.1" y="499.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="544.1" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$127/1726426466.accept (700 samples, 0.22%)</title><rect x="541.1" y="483.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="544.1" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (700 samples, 0.22%)</title><rect x="541.1" y="467.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="544.1" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (700 samples, 0.22%)</title><rect x="541.1" y="451.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="544.1" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (700 samples, 0.22%)</title><rect x="541.1" y="435.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="544.1" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (700 samples, 0.22%)</title><rect x="541.1" y="419.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="544.1" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (700 samples, 0.22%)</title><rect x="541.1" y="403.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="544.1" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (700 samples, 0.22%)</title><rect x="541.1" y="387.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="544.1" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (688 samples, 0.21%)</title><rect x="541.1" y="371.0" width="2.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="544.1" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1,187 samples, 0.37%)</title><rect x="543.7" y="499.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="546.7" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1,187 samples, 0.37%)</title><rect x="543.7" y="483.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="546.7" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (599 samples, 0.19%)</title><rect x="543.7" y="467.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="546.7" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (599 samples, 0.19%)</title><rect x="543.7" y="451.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="546.7" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (599 samples, 0.19%)</title><rect x="543.7" y="435.0" width="2.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="546.7" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (588 samples, 0.18%)</title><rect x="545.9" y="467.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="548.9" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (588 samples, 0.18%)</title><rect x="545.9" y="451.0" width="2.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="548.9" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (966 samples, 0.30%)</title><rect x="548.1" y="499.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="551.1" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (966 samples, 0.30%)</title><rect x="548.1" y="483.0" width="3.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="551.1" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (664 samples, 0.21%)</title><rect x="551.6" y="547.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="554.6" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (664 samples, 0.21%)</title><rect x="551.6" y="531.0" width="2.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="554.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (11,910 samples, 3.71%)</title><rect x="554.1" y="595.0" width="43.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="557.1" y="606.0">jdk/..</text>
</g>
<g>
<title>java.lang.StringBuilder (583 samples, 0.18%)</title><rect x="554.1" y="579.0" width="2.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="557.1" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (759 samples, 0.24%)</title><rect x="556.2" y="579.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="559.2" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (759 samples, 0.24%)</title><rect x="556.2" y="563.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="559.2" y="574.0"></text>
</g>
<g>
<title>byte[] (759 samples, 0.24%)</title><rect x="556.2" y="547.0" width="2.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="559.2" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,593 samples, 0.50%)</title><rect x="559.0" y="579.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="562.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,593 samples, 0.50%)</title><rect x="559.0" y="563.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="562.0" y="574.0"></text>
</g>
<g>
<title>java.lang.String (589 samples, 0.18%)</title><rect x="559.0" y="547.0" width="2.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="562.0" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,004 samples, 0.31%)</title><rect x="561.2" y="547.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="564.2" y="558.0"></text>
</g>
<g>
<title>byte[] (1,004 samples, 0.31%)</title><rect x="561.2" y="531.0" width="3.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="564.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (8,975 samples, 2.80%)</title><rect x="564.9" y="579.0" width="33.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="567.9" y="590.0">jd..</text>
</g>
<g>
<title>java/lang/String.substring (2,633 samples, 0.82%)</title><rect x="564.9" y="563.0" width="9.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="567.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,633 samples, 0.82%)</title><rect x="564.9" y="547.0" width="9.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="567.9" y="558.0"></text>
</g>
<g>
<title>java.lang.String (1,186 samples, 0.37%)</title><rect x="564.9" y="531.0" width="4.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="567.9" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,447 samples, 0.45%)</title><rect x="569.2" y="531.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="572.2" y="542.0"></text>
</g>
<g>
<title>byte[] (1,447 samples, 0.45%)</title><rect x="569.2" y="515.0" width="5.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="572.2" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1,338 samples, 0.42%)</title><rect x="574.6" y="563.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="577.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1,338 samples, 0.42%)</title><rect x="574.6" y="547.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="577.6" y="558.0"></text>
</g>
<g>
<title>byte[] (741 samples, 0.23%)</title><rect x="574.6" y="531.0" width="2.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="577.6" y="542.0"></text>
</g>
<g>
<title>java.lang.String (597 samples, 0.19%)</title><rect x="577.3" y="531.0" width="2.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="580.3" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (1,247 samples, 0.39%)</title><rect x="579.5" y="563.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="582.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1,247 samples, 0.39%)</title><rect x="579.5" y="547.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="582.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,247 samples, 0.39%)</title><rect x="579.5" y="531.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="582.5" y="542.0"></text>
</g>
<g>
<title>java.lang.String (556 samples, 0.17%)</title><rect x="579.5" y="515.0" width="2.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="582.5" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (691 samples, 0.22%)</title><rect x="581.5" y="515.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="584.5" y="526.0"></text>
</g>
<g>
<title>byte[] (691 samples, 0.22%)</title><rect x="581.5" y="499.0" width="2.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="584.5" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,466 samples, 0.46%)</title><rect x="584.1" y="563.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="587.1" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,466 samples, 0.46%)</title><rect x="584.1" y="547.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="587.1" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,466 samples, 0.46%)</title><rect x="584.1" y="531.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="587.1" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,466 samples, 0.46%)</title><rect x="584.1" y="515.0" width="5.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="587.1" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,466 samples, 0.46%)</title><rect x="584.1" y="499.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="587.1" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,457 samples, 0.45%)</title><rect x="584.1" y="483.0" width="5.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="587.1" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (2,291 samples, 0.71%)</title><rect x="589.5" y="563.0" width="8.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="592.5" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (794 samples, 0.25%)</title><rect x="589.5" y="547.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="592.5" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (794 samples, 0.25%)</title><rect x="589.5" y="531.0" width="2.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="592.5" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (918 samples, 0.29%)</title><rect x="592.4" y="547.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="595.4" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (890 samples, 0.28%)</title><rect x="592.4" y="531.0" width="3.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="595.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$453/817487158.apply (579 samples, 0.18%)</title><rect x="595.8" y="547.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="598.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (579 samples, 0.18%)</title><rect x="595.8" y="531.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="598.8" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (579 samples, 0.18%)</title><rect x="595.8" y="515.0" width="2.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="598.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (7,444 samples, 2.32%)</title><rect x="597.9" y="723.0" width="27.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="600.9" y="734.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (7,444 samples, 2.32%)</title><rect x="597.9" y="707.0" width="27.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="600.9" y="718.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (7,444 samples, 2.32%)</title><rect x="597.9" y="691.0" width="27.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="600.9" y="702.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$257/2141450187.run (7,444 samples, 2.32%)</title><rect x="597.9" y="675.0" width="27.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="600.9" y="686.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (7,444 samples, 2.32%)</title><rect x="597.9" y="659.0" width="27.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="600.9" y="670.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (7,409 samples, 2.31%)</title><rect x="597.9" y="643.0" width="27.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="600.9" y="654.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (491 samples, 0.15%)</title><rect x="597.9" y="627.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="600.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (491 samples, 0.15%)</title><rect x="597.9" y="611.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="600.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$294/1409719001.get$Lambda (200 samples, 0.06%)</title><rect x="597.9" y="595.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="600.9" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$294 (200 samples, 0.06%)</title><rect x="597.9" y="579.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="600.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$299/945266435.get$Lambda (291 samples, 0.09%)</title><rect x="598.6" y="595.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="601.6" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$299 (291 samples, 0.09%)</title><rect x="598.6" y="579.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="601.6" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (389 samples, 0.12%)</title><rect x="599.7" y="627.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="602.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (514 samples, 0.16%)</title><rect x="601.1" y="627.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="604.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (514 samples, 0.16%)</title><rect x="601.1" y="611.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="604.1" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (208 samples, 0.06%)</title><rect x="601.1" y="595.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="604.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (306 samples, 0.10%)</title><rect x="601.9" y="595.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="604.9" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (306 samples, 0.10%)</title><rect x="601.9" y="579.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="604.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (6,015 samples, 1.87%)</title><rect x="603.0" y="627.0" width="22.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="606.0" y="638.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (6,015 samples, 1.87%)</title><rect x="603.0" y="611.0" width="22.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="606.0" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$472/1342553686.run (4,998 samples, 1.56%)</title><rect x="603.0" y="595.0" width="18.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="606.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (4,998 samples, 1.56%)</title><rect x="603.0" y="579.0" width="18.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="606.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (4,998 samples, 1.56%)</title><rect x="603.0" y="563.0" width="18.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="606.0" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1,603 samples, 0.50%)</title><rect x="603.0" y="547.0" width="5.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="606.0" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,070 samples, 0.33%)</title><rect x="603.0" y="531.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="606.0" y="542.0"></text>
</g>
<g>
<title>java/util/List.spliterator (394 samples, 0.12%)</title><rect x="603.0" y="515.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="606.0" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (394 samples, 0.12%)</title><rect x="603.0" y="499.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="606.0" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (676 samples, 0.21%)</title><rect x="604.5" y="515.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="607.5" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (676 samples, 0.21%)</title><rect x="604.5" y="499.0" width="2.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="607.5" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (533 samples, 0.17%)</title><rect x="606.9" y="531.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="609.9" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (533 samples, 0.17%)</title><rect x="606.9" y="515.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="609.9" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (533 samples, 0.17%)</title><rect x="606.9" y="499.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="609.9" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$57/341796579.get (320 samples, 0.10%)</title><rect x="606.9" y="483.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="609.9" y="494.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (320 samples, 0.10%)</title><rect x="606.9" y="467.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="609.9" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (213 samples, 0.07%)</title><rect x="608.1" y="483.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="611.1" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (213 samples, 0.07%)</title><rect x="608.1" y="467.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="611.1" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.of (213 samples, 0.07%)</title><rect x="608.1" y="451.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="611.1" y="462.0"></text>
</g>
<g>
<title>java.util.Optional (213 samples, 0.07%)</title><rect x="608.1" y="435.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="611.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (3,395 samples, 1.06%)</title><rect x="608.9" y="547.0" width="12.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="611.9" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.now (301 samples, 0.09%)</title><rect x="608.9" y="531.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="611.9" y="542.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (301 samples, 0.09%)</title><rect x="608.9" y="515.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="611.9" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (301 samples, 0.09%)</title><rect x="608.9" y="499.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="611.9" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (301 samples, 0.09%)</title><rect x="608.9" y="483.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="611.9" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (301 samples, 0.09%)</title><rect x="608.9" y="467.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="611.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (3,094 samples, 0.96%)</title><rect x="610.0" y="531.0" width="11.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="613.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (1,220 samples, 0.38%)</title><rect x="610.0" y="515.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="613.0" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (315 samples, 0.10%)</title><rect x="610.0" y="499.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="613.0" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (315 samples, 0.10%)</title><rect x="610.0" y="483.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="613.0" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (315 samples, 0.10%)</title><rect x="610.0" y="467.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="613.0" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (315 samples, 0.10%)</title><rect x="610.0" y="451.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="613.0" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (315 samples, 0.10%)</title><rect x="610.0" y="435.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="613.0" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (315 samples, 0.10%)</title><rect x="610.0" y="419.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="613.0" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (299 samples, 0.09%)</title><rect x="611.2" y="499.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="614.2" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (299 samples, 0.09%)</title><rect x="611.2" y="483.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="614.2" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (299 samples, 0.09%)</title><rect x="611.2" y="467.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="614.2" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (299 samples, 0.09%)</title><rect x="611.2" y="451.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="614.2" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (299 samples, 0.09%)</title><rect x="611.2" y="435.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="614.2" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (299 samples, 0.09%)</title><rect x="611.2" y="419.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="614.2" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (270 samples, 0.08%)</title><rect x="612.4" y="499.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="615.4" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (270 samples, 0.08%)</title><rect x="612.4" y="483.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="615.4" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (270 samples, 0.08%)</title><rect x="612.4" y="467.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="615.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (309 samples, 0.10%)</title><rect x="613.4" y="499.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="616.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (594 samples, 0.19%)</title><rect x="614.5" y="515.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="617.5" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (294 samples, 0.09%)</title><rect x="614.5" y="499.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="617.5" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (294 samples, 0.09%)</title><rect x="614.5" y="483.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="617.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (294 samples, 0.09%)</title><rect x="614.5" y="467.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="617.5" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (294 samples, 0.09%)</title><rect x="614.5" y="451.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="617.5" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (300 samples, 0.09%)</title><rect x="615.6" y="499.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="618.6" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (300 samples, 0.09%)</title><rect x="615.6" y="483.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="618.6" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (300 samples, 0.09%)</title><rect x="615.6" y="467.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="618.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (1,280 samples, 0.40%)</title><rect x="616.7" y="515.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="619.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (294 samples, 0.09%)</title><rect x="616.7" y="499.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="619.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (986 samples, 0.31%)</title><rect x="617.8" y="499.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="620.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (299 samples, 0.09%)</title><rect x="617.8" y="483.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="620.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (299 samples, 0.09%)</title><rect x="617.8" y="467.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="620.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (299 samples, 0.09%)</title><rect x="617.8" y="451.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="620.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (299 samples, 0.09%)</title><rect x="617.8" y="435.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="620.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (687 samples, 0.21%)</title><rect x="618.9" y="483.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="621.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (687 samples, 0.21%)</title><rect x="618.9" y="467.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="621.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (499 samples, 0.16%)</title><rect x="618.9" y="451.0" width="1.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="621.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (188 samples, 0.06%)</title><rect x="620.7" y="451.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="623.7" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (188 samples, 0.06%)</title><rect x="620.7" y="435.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="623.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (1,017 samples, 0.32%)</title><rect x="621.4" y="595.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="624.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (1,017 samples, 0.32%)</title><rect x="621.4" y="579.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="624.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (1,017 samples, 0.32%)</title><rect x="621.4" y="563.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="624.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (829 samples, 0.26%)</title><rect x="621.4" y="547.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="624.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (829 samples, 0.26%)</title><rect x="621.4" y="531.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="624.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (829 samples, 0.26%)</title><rect x="621.4" y="515.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="624.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (829 samples, 0.26%)</title><rect x="621.4" y="499.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="624.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$486/1745057828.accept (829 samples, 0.26%)</title><rect x="621.4" y="483.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="624.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (829 samples, 0.26%)</title><rect x="621.4" y="467.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="624.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (829 samples, 0.26%)</title><rect x="621.4" y="451.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="624.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (829 samples, 0.26%)</title><rect x="621.4" y="435.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="624.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (829 samples, 0.26%)</title><rect x="621.4" y="419.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="624.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$494/1940969782.apply (829 samples, 0.26%)</title><rect x="621.4" y="403.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="624.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (829 samples, 0.26%)</title><rect x="621.4" y="387.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="624.4" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (828 samples, 0.26%)</title><rect x="621.4" y="371.0" width="3.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="624.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (188 samples, 0.06%)</title><rect x="624.4" y="547.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="627.4" y="558.0"></text>
</g>
<g>
<title>byte[] (188 samples, 0.06%)</title><rect x="624.4" y="531.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="627.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica$$Lambda$450/692403226.run (51,924 samples, 16.18%)</title><rect x="625.3" y="755.0" width="190.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="628.3" y="766.0">ru/mail/polis/service/pra..</text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.lambda$asyncAct$5 (51,924 samples, 16.18%)</title><rect x="625.3" y="739.0" width="190.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="628.3" y="750.0">ru/mail/polis/service/pra..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (26,940 samples, 8.40%)</title><rect x="625.3" y="723.0" width="99.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="628.3" y="734.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (22,466 samples, 7.00%)</title><rect x="625.3" y="707.0" width="82.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="628.3" y="718.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7,459 samples, 2.32%)</title><rect x="625.3" y="691.0" width="27.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="628.3" y="702.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (7,459 samples, 2.32%)</title><rect x="625.3" y="675.0" width="27.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="628.3" y="686.0">o..</text>
</g>
<g>
<title>byte[] (4,012 samples, 1.25%)</title><rect x="625.3" y="659.0" width="14.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="628.3" y="670.0"></text>
</g>
<g>
<title>byte[] (3,447 samples, 1.07%)</title><rect x="640.0" y="659.0" width="12.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="643.0" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (15,007 samples, 4.68%)</title><rect x="652.7" y="691.0" width="55.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="655.7" y="702.0">one/n..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (4,562 samples, 1.42%)</title><rect x="652.7" y="675.0" width="16.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="655.7" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (10,445 samples, 3.26%)</title><rect x="669.5" y="675.0" width="38.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="672.5" y="686.0">one..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (10,445 samples, 3.26%)</title><rect x="669.5" y="659.0" width="38.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="672.5" y="670.0">one..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (10,445 samples, 3.26%)</title><rect x="669.5" y="643.0" width="38.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="672.5" y="654.0">one..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10,445 samples, 3.26%)</title><rect x="669.5" y="627.0" width="38.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="672.5" y="638.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10,445 samples, 3.26%)</title><rect x="669.5" y="611.0" width="38.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="672.5" y="622.0">jav..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4,474 samples, 1.39%)</title><rect x="707.9" y="707.0" width="16.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="710.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (4,474 samples, 1.39%)</title><rect x="707.9" y="691.0" width="16.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="710.9" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,474 samples, 1.39%)</title><rect x="707.9" y="675.0" width="16.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="710.9" y="686.0"></text>
</g>
<g>
<title>java.lang.String (1,693 samples, 0.53%)</title><rect x="707.9" y="659.0" width="6.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="710.9" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,781 samples, 0.87%)</title><rect x="714.1" y="659.0" width="10.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="717.1" y="670.0"></text>
</g>
<g>
<title>byte[] (2,781 samples, 0.87%)</title><rect x="714.1" y="643.0" width="10.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="717.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica$$Lambda$108/989074046.act (24,984 samples, 7.79%)</title><rect x="724.3" y="723.0" width="91.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="727.3" y="734.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.lambda$execPut$0 (24,984 samples, 7.79%)</title><rect x="724.3" y="707.0" width="91.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="727.3" y="718.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.put (24,984 samples, 7.79%)</title><rect x="724.3" y="691.0" width="91.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="727.3" y="702.0">ru/mail/pol..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7,115 samples, 2.22%)</title><rect x="724.3" y="675.0" width="26.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="727.3" y="686.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7,115 samples, 2.22%)</title><rect x="724.3" y="659.0" width="26.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="727.3" y="670.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7,115 samples, 2.22%)</title><rect x="724.3" y="643.0" width="26.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="727.3" y="654.0">j..</text>
</g>
<g>
<title>one.nio.http.Response (2,177 samples, 0.68%)</title><rect x="750.5" y="675.0" width="8.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="753.5" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (7,001 samples, 2.18%)</title><rect x="758.5" y="675.0" width="25.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="761.5" y="686.0">o..</text>
</g>
<g>
<title>byte[] (2,799 samples, 0.87%)</title><rect x="758.5" y="659.0" width="10.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="761.5" y="670.0"></text>
</g>
<g>
<title>java.lang.String[] (2,468 samples, 0.77%)</title><rect x="768.8" y="659.0" width="9.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="771.8" y="670.0"></text>
</g>
<g>
<title>java.lang.String (1,734 samples, 0.54%)</title><rect x="777.9" y="659.0" width="6.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="780.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/LSMDao.upsert (8,691 samples, 2.71%)</title><rect x="784.3" y="675.0" width="31.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="787.3" y="686.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/MemoryTablePool.upsert (8,691 samples, 2.71%)</title><rect x="784.3" y="659.0" width="31.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="787.3" y="670.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/MemTable.upsert (8,542 samples, 2.66%)</title><rect x="784.3" y="643.0" width="31.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="787.3" y="654.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (818 samples, 0.25%)</title><rect x="784.3" y="627.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="787.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (818 samples, 0.25%)</title><rect x="784.3" y="611.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="787.3" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (264 samples, 0.08%)</title><rect x="784.3" y="595.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="787.3" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (554 samples, 0.17%)</title><rect x="785.2" y="595.0" width="2.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="788.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/Value.of (7,724 samples, 2.41%)</title><rect x="787.3" y="627.0" width="28.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="790.3" y="638.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4,693 samples, 1.46%)</title><rect x="787.3" y="611.0" width="17.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="790.3" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4,693 samples, 1.46%)</title><rect x="787.3" y="595.0" width="17.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="790.3" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.pranova.Value (3,031 samples, 0.94%)</title><rect x="804.5" y="611.0" width="11.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="807.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/MemoryTablePool.enqueueFlush (149 samples, 0.05%)</title><rect x="815.7" y="643.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="818.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/MemTable.iterator (144 samples, 0.04%)</title><rect x="815.7" y="627.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="818.7" y="638.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (107 samples, 0.03%)</title><rect x="815.8" y="611.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="818.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (107 samples, 0.03%)</title><rect x="815.8" y="595.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="818.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (107 samples, 0.03%)</title><rect x="815.8" y="579.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="818.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (107 samples, 0.03%)</title><rect x="815.8" y="563.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="818.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (104 samples, 0.03%)</title><rect x="815.8" y="547.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="818.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (18,817 samples, 5.86%)</title><rect x="816.2" y="803.0" width="69.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="819.2" y="814.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (18,817 samples, 5.86%)</title><rect x="816.2" y="787.0" width="69.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="819.2" y="798.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (18,817 samples, 5.86%)</title><rect x="816.2" y="771.0" width="69.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="819.2" y="782.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (18,817 samples, 5.86%)</title><rect x="816.2" y="755.0" width="69.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="819.2" y="766.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (18,817 samples, 5.86%)</title><rect x="816.2" y="739.0" width="69.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="819.2" y="750.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (3,651 samples, 1.14%)</title><rect x="816.2" y="723.0" width="13.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="819.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (3,651 samples, 1.14%)</title><rect x="816.2" y="707.0" width="13.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="819.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils$$Lambda$112/1456089015.get (3,651 samples, 1.14%)</title><rect x="816.2" y="691.0" width="13.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="819.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils.lambda$replication$6 (3,651 samples, 1.14%)</title><rect x="816.2" y="675.0" width="13.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="819.2" y="686.0"></text>
</g>
<g>
<title>ru.mail.polis.service.pranova.Value (357 samples, 0.11%)</title><rect x="816.2" y="659.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="819.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica$$Lambda$108/989074046.act (3,100 samples, 0.97%)</title><rect x="817.5" y="659.0" width="11.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="820.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.lambda$execPut$0 (3,100 samples, 0.97%)</title><rect x="817.5" y="643.0" width="11.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="820.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.put (3,100 samples, 0.97%)</title><rect x="817.5" y="627.0" width="11.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="820.5" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (809 samples, 0.25%)</title><rect x="817.5" y="611.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="820.5" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (809 samples, 0.25%)</title><rect x="817.5" y="595.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="820.5" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (809 samples, 0.25%)</title><rect x="817.5" y="579.0" width="3.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="820.5" y="590.0"></text>
</g>
<g>
<title>one.nio.http.Response (275 samples, 0.09%)</title><rect x="820.5" y="611.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="823.5" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,103 samples, 0.34%)</title><rect x="821.5" y="611.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="824.5" y="622.0"></text>
</g>
<g>
<title>byte[] (427 samples, 0.13%)</title><rect x="821.5" y="595.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="824.5" y="606.0"></text>
</g>
<g>
<title>java.lang.String[] (375 samples, 0.12%)</title><rect x="823.1" y="595.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="826.1" y="606.0"></text>
</g>
<g>
<title>java.lang.String (301 samples, 0.09%)</title><rect x="824.5" y="595.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="827.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/LSMDao.upsert (913 samples, 0.28%)</title><rect x="825.6" y="611.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="828.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/MemoryTablePool.upsert (913 samples, 0.28%)</title><rect x="825.6" y="595.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="828.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/MemTable.upsert (903 samples, 0.28%)</title><rect x="825.6" y="579.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="828.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (91 samples, 0.03%)</title><rect x="825.6" y="563.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="828.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (91 samples, 0.03%)</title><rect x="825.6" y="547.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="828.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/Value.of (812 samples, 0.25%)</title><rect x="825.9" y="563.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="828.9" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (549 samples, 0.17%)</title><rect x="825.9" y="547.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="828.9" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (549 samples, 0.17%)</title><rect x="825.9" y="531.0" width="2.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="828.9" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.pranova.Value (263 samples, 0.08%)</title><rect x="827.9" y="547.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="830.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Value.&lt;init&gt; (194 samples, 0.06%)</title><rect x="828.9" y="659.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="831.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Value.&lt;init&gt; (194 samples, 0.06%)</title><rect x="828.9" y="643.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="831.9" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (194 samples, 0.06%)</title><rect x="828.9" y="627.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="831.9" y="638.0"></text>
</g>
<g>
<title>byte[] (194 samples, 0.06%)</title><rect x="828.9" y="611.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="831.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (15,166 samples, 4.73%)</title><rect x="829.7" y="723.0" width="55.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="832.7" y="734.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (15,166 samples, 4.73%)</title><rect x="829.7" y="707.0" width="55.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="832.7" y="718.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (3,709 samples, 1.16%)</title><rect x="829.7" y="691.0" width="13.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="832.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3,709 samples, 1.16%)</title><rect x="829.7" y="675.0" width="13.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="832.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3,695 samples, 1.15%)</title><rect x="829.7" y="659.0" width="13.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="832.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils$$Lambda$154/1620643826.apply (3,695 samples, 1.15%)</title><rect x="829.7" y="643.0" width="13.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="832.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils.lambda$replication$7 (3,695 samples, 1.15%)</title><rect x="829.7" y="627.0" width="13.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="832.7" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (2,531 samples, 0.79%)</title><rect x="829.7" y="611.0" width="9.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="832.7" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,998 samples, 0.62%)</title><rect x="829.7" y="595.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="832.7" y="606.0"></text>
</g>
<g>
<title>java/util/List.spliterator (739 samples, 0.23%)</title><rect x="829.7" y="579.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="832.7" y="590.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (739 samples, 0.23%)</title><rect x="829.7" y="563.0" width="2.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="832.7" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1,259 samples, 0.39%)</title><rect x="832.4" y="579.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="835.4" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1,259 samples, 0.39%)</title><rect x="832.4" y="563.0" width="4.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="835.4" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (533 samples, 0.17%)</title><rect x="837.0" y="595.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="840.0" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (533 samples, 0.17%)</title><rect x="837.0" y="579.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="840.0" y="590.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (533 samples, 0.17%)</title><rect x="837.0" y="563.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="840.0" y="574.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$57/341796579.get (533 samples, 0.17%)</title><rect x="837.0" y="547.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="840.0" y="558.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (533 samples, 0.17%)</title><rect x="837.0" y="531.0" width="2.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="840.0" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.pranova.Value (792 samples, 0.25%)</title><rect x="839.0" y="611.0" width="2.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="842.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Value.&lt;init&gt; (372 samples, 0.12%)</title><rect x="841.9" y="611.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="844.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Value.&lt;init&gt; (372 samples, 0.12%)</title><rect x="841.9" y="595.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="844.9" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (372 samples, 0.12%)</title><rect x="841.9" y="579.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="844.9" y="590.0"></text>
</g>
<g>
<title>byte[] (372 samples, 0.12%)</title><rect x="841.9" y="563.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="844.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (11,457 samples, 3.57%)</title><rect x="843.3" y="691.0" width="42.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="846.3" y="702.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils$$Lambda$166/1080946771.accept (11,457 samples, 3.57%)</title><rect x="843.3" y="675.0" width="42.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="846.3" y="686.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils.lambda$merge$2 (11,457 samples, 3.57%)</title><rect x="843.3" y="659.0" width="42.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="846.3" y="670.0">ru/m..</text>
</g>
<g>
<title>java/util/Collection.stream (2,130 samples, 0.66%)</title><rect x="843.3" y="643.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="846.3" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.spliterator (379 samples, 0.12%)</title><rect x="843.3" y="627.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="846.3" y="638.0"></text>
</g>
<g>
<title>java.util.ArrayList$ArrayListSpliterator (379 samples, 0.12%)</title><rect x="843.3" y="611.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="846.3" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySet.spliterator (453 samples, 0.14%)</title><rect x="844.7" y="627.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="847.7" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$EntrySpliterator (453 samples, 0.14%)</title><rect x="844.7" y="611.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="847.7" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1,298 samples, 0.40%)</title><rect x="846.4" y="627.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="849.4" y="638.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1,298 samples, 0.40%)</title><rect x="846.4" y="611.0" width="4.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="849.4" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.comparingInt (210 samples, 0.07%)</title><rect x="851.1" y="643.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="854.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (210 samples, 0.07%)</title><rect x="851.1" y="627.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="854.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (210 samples, 0.07%)</title><rect x="851.1" y="611.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="854.1" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$526/468649244.get$Lambda (210 samples, 0.07%)</title><rect x="851.1" y="595.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="854.1" y="606.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$526 (210 samples, 0.07%)</title><rect x="851.1" y="579.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="854.1" y="590.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparingLong (495 samples, 0.15%)</title><rect x="851.9" y="643.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="854.9" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator.comparingLong (200 samples, 0.06%)</title><rect x="851.9" y="627.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="854.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (200 samples, 0.06%)</title><rect x="851.9" y="611.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="854.9" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (200 samples, 0.06%)</title><rect x="851.9" y="595.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="854.9" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$537/1052931914.get$Lambda (200 samples, 0.06%)</title><rect x="851.9" y="579.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="854.9" y="590.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$537 (200 samples, 0.06%)</title><rect x="851.9" y="563.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="854.9" y="574.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (295 samples, 0.09%)</title><rect x="852.6" y="627.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="855.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (295 samples, 0.09%)</title><rect x="852.6" y="611.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="855.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (295 samples, 0.09%)</title><rect x="852.6" y="595.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="855.6" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$542/2071213622.get$Lambda (295 samples, 0.09%)</title><rect x="852.6" y="579.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="855.6" y="590.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$542 (295 samples, 0.09%)</title><rect x="852.6" y="563.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="855.6" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.entrySet (187 samples, 0.06%)</title><rect x="853.7" y="643.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="856.7" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$EntrySet (187 samples, 0.06%)</title><rect x="853.7" y="627.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="856.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3,441 samples, 1.07%)</title><rect x="854.4" y="643.0" width="12.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="857.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3,441 samples, 1.07%)</title><rect x="854.4" y="627.0" width="12.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="857.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (3,441 samples, 1.07%)</title><rect x="854.4" y="611.0" width="12.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="857.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica$$Lambda$174/1908571335.accept (3,441 samples, 1.07%)</title><rect x="854.4" y="595.0" width="12.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="857.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.lambda$schedule$1 (3,441 samples, 1.07%)</title><rect x="854.4" y="579.0" width="12.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="857.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,005 samples, 0.62%)</title><rect x="854.4" y="563.0" width="7.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="857.4" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,005 samples, 0.62%)</title><rect x="854.4" y="547.0" width="7.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="857.4" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (978 samples, 0.30%)</title><rect x="854.4" y="531.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="857.4" y="542.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (978 samples, 0.30%)</title><rect x="854.4" y="515.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="857.4" y="526.0"></text>
</g>
<g>
<title>byte[] (974 samples, 0.30%)</title><rect x="854.4" y="499.0" width="3.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="857.4" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,027 samples, 0.32%)</title><rect x="858.0" y="531.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="861.0" y="542.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (476 samples, 0.15%)</title><rect x="858.0" y="515.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="861.0" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (551 samples, 0.17%)</title><rect x="859.8" y="515.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="862.8" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (551 samples, 0.17%)</title><rect x="859.8" y="499.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="862.8" y="510.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (551 samples, 0.17%)</title><rect x="859.8" y="483.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="862.8" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (551 samples, 0.17%)</title><rect x="859.8" y="467.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="862.8" y="478.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (551 samples, 0.17%)</title><rect x="859.8" y="451.0" width="2.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="862.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Value.toResponse (1,436 samples, 0.45%)</title><rect x="861.8" y="563.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="864.8" y="574.0"></text>
</g>
<g>
<title>one.nio.http.Response (303 samples, 0.09%)</title><rect x="861.8" y="547.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="864.8" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,133 samples, 0.35%)</title><rect x="862.9" y="547.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="865.9" y="558.0"></text>
</g>
<g>
<title>byte[] (502 samples, 0.16%)</title><rect x="862.9" y="531.0" width="1.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="865.9" y="542.0"></text>
</g>
<g>
<title>java.lang.String[] (358 samples, 0.11%)</title><rect x="864.8" y="531.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="867.8" y="542.0"></text>
</g>
<g>
<title>java.lang.String (273 samples, 0.09%)</title><rect x="866.1" y="531.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="869.1" y="542.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toMap (875 samples, 0.27%)</title><rect x="867.1" y="643.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="870.1" y="654.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toMap (875 samples, 0.27%)</title><rect x="867.1" y="627.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="870.1" y="638.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$CollectorImpl (370 samples, 0.12%)</title><rect x="867.1" y="611.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="870.1" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (298 samples, 0.09%)</title><rect x="868.4" y="611.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="871.4" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (298 samples, 0.09%)</title><rect x="868.4" y="595.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="871.4" y="606.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$41/580718781.get$Lambda (298 samples, 0.09%)</title><rect x="868.4" y="579.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="871.4" y="590.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$$Lambda$41 (298 samples, 0.09%)</title><rect x="868.4" y="563.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="871.4" y="574.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.mapMerger (207 samples, 0.06%)</title><rect x="869.5" y="611.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="872.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (207 samples, 0.06%)</title><rect x="869.5" y="595.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="872.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (207 samples, 0.06%)</title><rect x="869.5" y="579.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="872.5" y="590.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$42/1196695891.get$Lambda (207 samples, 0.06%)</title><rect x="869.5" y="563.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="872.5" y="574.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$$Lambda$42 (207 samples, 0.06%)</title><rect x="869.5" y="547.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="872.5" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (3,199 samples, 1.00%)</title><rect x="870.3" y="643.0" width="11.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="873.3" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2,847 samples, 0.89%)</title><rect x="870.3" y="627.0" width="10.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="873.3" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (2,847 samples, 0.89%)</title><rect x="870.3" y="611.0" width="10.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="873.3" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2,452 samples, 0.76%)</title><rect x="870.3" y="595.0" width="9.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="873.3" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2,452 samples, 0.76%)</title><rect x="870.3" y="579.0" width="9.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="873.3" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (1,884 samples, 0.59%)</title><rect x="870.3" y="563.0" width="6.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="873.3" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (1,884 samples, 0.59%)</title><rect x="870.3" y="547.0" width="6.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="873.3" y="558.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$41/580718781.accept (1,884 samples, 0.59%)</title><rect x="870.3" y="531.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="873.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.lambda$toMap$68 (1,884 samples, 0.59%)</title><rect x="870.3" y="515.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="873.3" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.merge (1,884 samples, 0.59%)</title><rect x="870.3" y="499.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="873.3" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (538 samples, 0.17%)</title><rect x="870.3" y="483.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="873.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Value.hashCode (538 samples, 0.17%)</title><rect x="870.3" y="467.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="873.3" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (538 samples, 0.17%)</title><rect x="870.3" y="451.0" width="2.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="873.3" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (385 samples, 0.12%)</title><rect x="872.3" y="483.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="875.3" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (385 samples, 0.12%)</title><rect x="872.3" y="467.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="875.3" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (961 samples, 0.30%)</title><rect x="873.7" y="483.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="876.7" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (960 samples, 0.30%)</title><rect x="873.7" y="467.0" width="3.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="876.7" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (568 samples, 0.18%)</title><rect x="877.2" y="563.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="880.2" y="574.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$40/1769193365.get (568 samples, 0.18%)</title><rect x="877.2" y="547.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="880.2" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap (568 samples, 0.18%)</title><rect x="877.2" y="531.0" width="2.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="880.2" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (395 samples, 0.12%)</title><rect x="879.3" y="595.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="882.3" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (395 samples, 0.12%)</title><rect x="879.3" y="579.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="882.3" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3ReducingSink (395 samples, 0.12%)</title><rect x="879.3" y="563.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="882.3" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (352 samples, 0.11%)</title><rect x="880.8" y="627.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="883.8" y="638.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3 (352 samples, 0.11%)</title><rect x="880.8" y="611.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="883.8" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (920 samples, 0.29%)</title><rect x="882.1" y="643.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="885.1" y="654.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.maxBy (186 samples, 0.06%)</title><rect x="882.1" y="627.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="885.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (186 samples, 0.06%)</title><rect x="882.1" y="611.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="885.1" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (186 samples, 0.06%)</title><rect x="882.1" y="595.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="885.1" y="606.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$544/1548830861.get$Lambda (186 samples, 0.06%)</title><rect x="882.1" y="579.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="885.1" y="590.0"></text>
</g>
<g>
<title>java.util.function.BinaryOperator$$Lambda$544 (186 samples, 0.06%)</title><rect x="882.1" y="563.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="885.1" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (734 samples, 0.23%)</title><rect x="882.7" y="627.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="885.7" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (468 samples, 0.15%)</title><rect x="882.7" y="611.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="885.7" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (468 samples, 0.15%)</title><rect x="882.7" y="595.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="885.7" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (265 samples, 0.08%)</title><rect x="882.7" y="579.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="885.7" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (265 samples, 0.08%)</title><rect x="882.7" y="563.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="885.7" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2ReducingSink (265 samples, 0.08%)</title><rect x="882.7" y="547.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="885.7" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (203 samples, 0.06%)</title><rect x="883.7" y="579.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="886.7" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (203 samples, 0.06%)</title><rect x="883.7" y="563.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="886.7" y="574.0"></text>
</g>
<g>
<title>java/util/Optional.of (203 samples, 0.06%)</title><rect x="883.7" y="547.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="886.7" y="558.0"></text>
</g>
<g>
<title>java.util.Optional (203 samples, 0.06%)</title><rect x="883.7" y="531.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="886.7" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (266 samples, 0.08%)</title><rect x="884.5" y="611.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="887.5" y="622.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2 (266 samples, 0.08%)</title><rect x="884.5" y="595.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="887.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (6,402 samples, 2.00%)</title><rect x="885.4" y="803.0" width="23.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="888.4" y="814.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (179 samples, 0.06%)</title><rect x="885.4" y="787.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="888.4" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (179 samples, 0.06%)</title><rect x="885.4" y="771.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="888.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$334/114199938.get$Lambda (104 samples, 0.03%)</title><rect x="885.4" y="755.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="888.4" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$334 (104 samples, 0.03%)</title><rect x="885.4" y="739.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="888.4" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/794075965.linkToTargetMethod (181 samples, 0.06%)</title><rect x="886.1" y="787.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="889.1" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (181 samples, 0.06%)</title><rect x="886.1" y="771.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="889.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$335/1550294416.get$Lambda (181 samples, 0.06%)</title><rect x="886.1" y="755.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="889.1" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$335 (181 samples, 0.06%)</title><rect x="886.1" y="739.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="889.1" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,712 samples, 0.53%)</title><rect x="886.8" y="787.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="889.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$336/85824568.accept (1,433 samples, 0.45%)</title><rect x="886.8" y="771.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="889.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (1,433 samples, 0.45%)</title><rect x="886.8" y="755.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="889.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (1,433 samples, 0.45%)</title><rect x="886.8" y="739.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="889.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (1,433 samples, 0.45%)</title><rect x="886.8" y="723.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="889.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (1,433 samples, 0.45%)</title><rect x="886.8" y="707.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="889.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (1,433 samples, 0.45%)</title><rect x="886.8" y="691.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="889.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,433 samples, 0.45%)</title><rect x="886.8" y="675.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="889.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,433 samples, 0.45%)</title><rect x="886.8" y="659.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="889.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,433 samples, 0.45%)</title><rect x="886.8" y="643.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="889.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1,433 samples, 0.45%)</title><rect x="886.8" y="627.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="889.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$223/1006774652.run (1,433 samples, 0.45%)</title><rect x="886.8" y="611.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="889.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1,433 samples, 0.45%)</title><rect x="886.8" y="595.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="889.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (404 samples, 0.13%)</title><rect x="886.8" y="579.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="889.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (404 samples, 0.13%)</title><rect x="886.8" y="563.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="889.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (404 samples, 0.13%)</title><rect x="886.8" y="547.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="889.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (171 samples, 0.05%)</title><rect x="886.8" y="531.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="889.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (171 samples, 0.05%)</title><rect x="886.8" y="515.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="889.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (171 samples, 0.05%)</title><rect x="886.8" y="499.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="889.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (171 samples, 0.05%)</title><rect x="886.8" y="483.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="889.8" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (171 samples, 0.05%)</title><rect x="886.8" y="467.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="889.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (233 samples, 0.07%)</title><rect x="887.4" y="531.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="890.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (233 samples, 0.07%)</title><rect x="887.4" y="515.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="890.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (233 samples, 0.07%)</title><rect x="887.4" y="499.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="890.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (233 samples, 0.07%)</title><rect x="887.4" y="483.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="890.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (233 samples, 0.07%)</title><rect x="887.4" y="467.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="890.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (233 samples, 0.07%)</title><rect x="887.4" y="451.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="890.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (233 samples, 0.07%)</title><rect x="887.4" y="435.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="890.4" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (233 samples, 0.07%)</title><rect x="887.4" y="419.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="890.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (115 samples, 0.04%)</title><rect x="888.3" y="579.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="891.3" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (115 samples, 0.04%)</title><rect x="888.3" y="563.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="891.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (115 samples, 0.04%)</title><rect x="888.3" y="547.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="891.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$420/1458729479.get$Lambda (115 samples, 0.04%)</title><rect x="888.3" y="531.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="891.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$420 (115 samples, 0.04%)</title><rect x="888.3" y="515.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="891.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (891 samples, 0.28%)</title><rect x="888.8" y="579.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="891.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (496 samples, 0.15%)</title><rect x="888.8" y="563.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="891.8" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (336 samples, 0.10%)</title><rect x="888.8" y="547.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="891.8" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (336 samples, 0.10%)</title><rect x="888.8" y="531.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="891.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (160 samples, 0.05%)</title><rect x="890.0" y="547.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="893.0" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (160 samples, 0.05%)</title><rect x="890.0" y="531.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="893.0" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (160 samples, 0.05%)</title><rect x="890.0" y="515.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="893.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (395 samples, 0.12%)</title><rect x="890.6" y="563.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="893.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$211/900397021.get (395 samples, 0.12%)</title><rect x="890.6" y="547.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="893.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (395 samples, 0.12%)</title><rect x="890.6" y="531.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="893.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (395 samples, 0.12%)</title><rect x="890.6" y="515.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="893.6" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (394 samples, 0.12%)</title><rect x="890.6" y="499.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="893.6" y="510.0"></text>
</g>
<g>
<title>byte[] (373 samples, 0.12%)</title><rect x="890.7" y="483.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="893.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$419/2108239717.accept (279 samples, 0.09%)</title><rect x="892.0" y="771.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="895.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (279 samples, 0.09%)</title><rect x="892.0" y="755.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="895.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$335/1550294416.run (279 samples, 0.09%)</title><rect x="892.0" y="739.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="895.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (279 samples, 0.09%)</title><rect x="892.0" y="723.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="895.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (279 samples, 0.09%)</title><rect x="892.0" y="707.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="895.0" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (279 samples, 0.09%)</title><rect x="892.0" y="691.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="895.0" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (279 samples, 0.09%)</title><rect x="892.0" y="675.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="895.0" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (279 samples, 0.09%)</title><rect x="892.0" y="659.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="895.0" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (407 samples, 0.13%)</title><rect x="893.1" y="787.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="896.1" y="798.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (407 samples, 0.13%)</title><rect x="893.1" y="771.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="896.1" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (341 samples, 0.11%)</title><rect x="894.6" y="787.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="897.6" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (164 samples, 0.05%)</title><rect x="894.6" y="771.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="897.6" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (164 samples, 0.05%)</title><rect x="894.6" y="755.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="897.6" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (164 samples, 0.05%)</title><rect x="894.6" y="739.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="897.6" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (164 samples, 0.05%)</title><rect x="894.6" y="723.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="897.6" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (164 samples, 0.05%)</title><rect x="894.6" y="707.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="897.6" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (164 samples, 0.05%)</title><rect x="894.6" y="691.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="897.6" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (164 samples, 0.05%)</title><rect x="894.6" y="675.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="897.6" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (177 samples, 0.06%)</title><rect x="895.2" y="771.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="898.2" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (177 samples, 0.06%)</title><rect x="895.2" y="755.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="898.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (1,301 samples, 0.41%)</title><rect x="895.8" y="787.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="898.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$229/1261782551.run (586 samples, 0.18%)</title><rect x="895.8" y="771.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="898.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (586 samples, 0.18%)</title><rect x="895.8" y="755.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="898.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (586 samples, 0.18%)</title><rect x="895.8" y="739.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="898.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (586 samples, 0.18%)</title><rect x="895.8" y="723.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="898.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (586 samples, 0.18%)</title><rect x="895.8" y="707.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="898.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (586 samples, 0.18%)</title><rect x="895.8" y="691.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="898.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$223/1006774652.run (586 samples, 0.18%)</title><rect x="895.8" y="675.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="898.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (586 samples, 0.18%)</title><rect x="895.8" y="659.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="898.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (577 samples, 0.18%)</title><rect x="895.8" y="643.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="898.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (577 samples, 0.18%)</title><rect x="895.8" y="627.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="898.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (342 samples, 0.11%)</title><rect x="895.8" y="611.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="898.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (342 samples, 0.11%)</title><rect x="895.8" y="595.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="898.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (342 samples, 0.11%)</title><rect x="895.8" y="579.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="898.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/931496835.linkToTargetMethod (223 samples, 0.07%)</title><rect x="895.8" y="563.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="898.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1324578393.invoke (223 samples, 0.07%)</title><rect x="895.8" y="547.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="898.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (223 samples, 0.07%)</title><rect x="895.8" y="531.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="898.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (223 samples, 0.07%)</title><rect x="895.8" y="515.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="898.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (223 samples, 0.07%)</title><rect x="895.8" y="499.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="898.8" y="510.0"></text>
</g>
<g>
<title>byte[] (223 samples, 0.07%)</title><rect x="895.8" y="483.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="898.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (119 samples, 0.04%)</title><rect x="896.6" y="563.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="899.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (119 samples, 0.04%)</title><rect x="896.6" y="547.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="899.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (119 samples, 0.04%)</title><rect x="896.6" y="531.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="899.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$420/1458729479.get$Lambda (119 samples, 0.04%)</title><rect x="896.6" y="515.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="899.6" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$420 (119 samples, 0.04%)</title><rect x="896.6" y="499.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="899.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (235 samples, 0.07%)</title><rect x="897.1" y="611.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="900.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (235 samples, 0.07%)</title><rect x="897.1" y="595.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="900.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (235 samples, 0.07%)</title><rect x="897.1" y="579.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="900.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (235 samples, 0.07%)</title><rect x="897.1" y="563.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="900.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (235 samples, 0.07%)</title><rect x="897.1" y="547.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="900.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (235 samples, 0.07%)</title><rect x="897.1" y="531.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="900.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (235 samples, 0.07%)</title><rect x="897.1" y="515.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="900.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (235 samples, 0.07%)</title><rect x="897.1" y="499.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="900.1" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (235 samples, 0.07%)</title><rect x="897.1" y="483.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="900.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$240/316904712.run (715 samples, 0.22%)</title><rect x="898.0" y="771.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="901.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (715 samples, 0.22%)</title><rect x="898.0" y="755.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="901.0" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (250 samples, 0.08%)</title><rect x="898.0" y="739.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="901.0" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (250 samples, 0.08%)</title><rect x="898.0" y="723.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="901.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$422/1809300373.get$Lambda (250 samples, 0.08%)</title><rect x="898.0" y="707.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="901.0" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$422 (250 samples, 0.08%)</title><rect x="898.0" y="691.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="901.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (465 samples, 0.14%)</title><rect x="898.9" y="739.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="901.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (465 samples, 0.14%)</title><rect x="898.9" y="723.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="901.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (465 samples, 0.14%)</title><rect x="898.9" y="707.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="901.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (465 samples, 0.14%)</title><rect x="898.9" y="691.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="901.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (465 samples, 0.14%)</title><rect x="898.9" y="675.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="901.9" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (465 samples, 0.14%)</title><rect x="898.9" y="659.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="901.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (468 samples, 0.15%)</title><rect x="900.6" y="787.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="903.6" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.now (121 samples, 0.04%)</title><rect x="900.6" y="771.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="903.6" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (121 samples, 0.04%)</title><rect x="900.6" y="755.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="903.6" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (121 samples, 0.04%)</title><rect x="900.6" y="739.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="903.6" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (121 samples, 0.04%)</title><rect x="900.6" y="723.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="903.6" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (121 samples, 0.04%)</title><rect x="900.6" y="707.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="903.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (347 samples, 0.11%)</title><rect x="901.0" y="771.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="904.0" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (84 samples, 0.03%)</title><rect x="901.0" y="755.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="904.0" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (84 samples, 0.03%)</title><rect x="901.0" y="739.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="904.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$546/1640198127.get$Lambda (84 samples, 0.03%)</title><rect x="901.0" y="723.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="904.0" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$546 (84 samples, 0.03%)</title><rect x="901.0" y="707.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="904.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (263 samples, 0.08%)</title><rect x="901.4" y="755.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="904.4" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (97 samples, 0.03%)</title><rect x="901.4" y="739.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="904.4" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (166 samples, 0.05%)</title><rect x="901.7" y="739.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="904.7" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (166 samples, 0.05%)</title><rect x="901.7" y="723.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="904.7" y="734.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (166 samples, 0.05%)</title><rect x="901.7" y="707.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="904.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (1,182 samples, 0.37%)</title><rect x="902.3" y="787.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="905.3" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (93 samples, 0.03%)</title><rect x="902.3" y="771.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="905.3" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (93 samples, 0.03%)</title><rect x="902.3" y="755.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="905.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$333/560929173.get$Lambda (93 samples, 0.03%)</title><rect x="902.3" y="739.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="905.3" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$333 (93 samples, 0.03%)</title><rect x="902.3" y="723.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="905.3" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (652 samples, 0.20%)</title><rect x="902.7" y="771.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="905.7" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (275 samples, 0.09%)</title><rect x="902.7" y="755.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="905.7" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (275 samples, 0.09%)</title><rect x="902.7" y="739.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="905.7" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (377 samples, 0.12%)</title><rect x="903.7" y="755.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="906.7" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (377 samples, 0.12%)</title><rect x="903.7" y="739.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="906.7" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (437 samples, 0.14%)</title><rect x="905.1" y="771.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="908.1" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (437 samples, 0.14%)</title><rect x="905.1" y="755.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="908.1" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (349 samples, 0.11%)</title><rect x="906.7" y="787.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="909.7" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (349 samples, 0.11%)</title><rect x="906.7" y="771.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="909.7" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (349 samples, 0.11%)</title><rect x="906.7" y="755.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="909.7" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (349 samples, 0.11%)</title><rect x="906.7" y="739.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="909.7" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (115 samples, 0.04%)</title><rect x="906.7" y="723.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="909.7" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (115 samples, 0.04%)</title><rect x="906.7" y="707.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="909.7" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (234 samples, 0.07%)</title><rect x="907.1" y="723.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="910.1" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (234 samples, 0.07%)</title><rect x="907.1" y="707.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="910.1" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (234 samples, 0.07%)</title><rect x="907.1" y="691.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="910.1" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (234 samples, 0.07%)</title><rect x="907.1" y="675.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="910.1" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (234 samples, 0.07%)</title><rect x="907.1" y="659.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="910.1" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (234 samples, 0.07%)</title><rect x="907.1" y="643.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="910.1" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (186 samples, 0.06%)</title><rect x="907.9" y="787.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="910.9" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (186 samples, 0.06%)</title><rect x="907.9" y="771.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="910.9" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (186 samples, 0.06%)</title><rect x="907.9" y="755.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="910.9" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (186 samples, 0.06%)</title><rect x="907.9" y="739.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="910.9" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (160 samples, 0.05%)</title><rect x="907.9" y="723.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="910.9" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (160 samples, 0.05%)</title><rect x="907.9" y="707.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="910.9" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (96 samples, 0.03%)</title><rect x="908.6" y="787.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="911.6" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (96 samples, 0.03%)</title><rect x="908.6" y="771.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="911.6" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (96 samples, 0.03%)</title><rect x="908.6" y="755.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="911.6" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (96 samples, 0.03%)</title><rect x="908.6" y="739.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="911.6" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (75,150 samples, 23.42%)</title><rect x="909.0" y="803.0" width="276.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="912.0" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (5,957 samples, 1.86%)</title><rect x="909.0" y="787.0" width="21.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="912.0" y="798.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (3,086 samples, 0.96%)</title><rect x="909.0" y="771.0" width="11.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="912.0" y="782.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (857 samples, 0.27%)</title><rect x="909.0" y="755.0" width="3.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="912.0" y="766.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (847 samples, 0.26%)</title><rect x="912.1" y="755.0" width="3.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="915.1" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (1,382 samples, 0.43%)</title><rect x="915.3" y="755.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="918.3" y="766.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1,382 samples, 0.43%)</title><rect x="915.3" y="739.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="918.3" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1,382 samples, 0.43%)</title><rect x="915.3" y="723.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="918.3" y="734.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (1,382 samples, 0.43%)</title><rect x="915.3" y="707.0" width="5.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="918.3" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (2,871 samples, 0.89%)</title><rect x="920.3" y="771.0" width="10.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="923.3" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (2,871 samples, 0.89%)</title><rect x="920.3" y="755.0" width="10.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="923.3" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (2,871 samples, 0.89%)</title><rect x="920.3" y="739.0" width="10.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="923.3" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (2,871 samples, 0.89%)</title><rect x="920.3" y="723.0" width="10.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="923.3" y="734.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1,659 samples, 0.52%)</title><rect x="920.3" y="707.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="923.3" y="718.0"></text>
</g>
<g>
<title>java.lang.Integer (1,659 samples, 0.52%)</title><rect x="920.3" y="691.0" width="6.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="923.3" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1,212 samples, 0.38%)</title><rect x="926.4" y="707.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="929.4" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1,212 samples, 0.38%)</title><rect x="926.4" y="691.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="929.4" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1,212 samples, 0.38%)</title><rect x="926.4" y="675.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="929.4" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1,212 samples, 0.38%)</title><rect x="926.4" y="659.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="929.4" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1,212 samples, 0.38%)</title><rect x="926.4" y="643.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="929.4" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (1,212 samples, 0.38%)</title><rect x="926.4" y="627.0" width="4.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="929.4" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (69,193 samples, 21.57%)</title><rect x="930.9" y="787.0" width="254.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="933.9" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (69,193 samples, 21.57%)</title><rect x="930.9" y="771.0" width="254.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="933.9" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (67,550 samples, 21.05%)</title><rect x="930.9" y="755.0" width="248.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="933.9" y="766.0">one/nio/http/HttpSession.processH..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (32,326 samples, 10.08%)</title><rect x="930.9" y="739.0" width="118.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="933.9" y="750.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (32,326 samples, 10.08%)</title><rect x="930.9" y="723.0" width="118.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="933.9" y="734.0">one/nio/http/H..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (30,876 samples, 9.62%)</title><rect x="930.9" y="707.0" width="113.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="933.9" y="718.0">RequestHandler..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2,595 samples, 0.81%)</title><rect x="930.9" y="691.0" width="9.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="933.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,595 samples, 0.81%)</title><rect x="930.9" y="675.0" width="9.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="933.9" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,595 samples, 0.81%)</title><rect x="930.9" y="659.0" width="9.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="933.9" y="670.0"></text>
</g>
<g>
<title>java.lang.String (1,230 samples, 0.38%)</title><rect x="930.9" y="643.0" width="4.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="933.9" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,365 samples, 0.43%)</title><rect x="935.4" y="643.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="938.4" y="654.0"></text>
</g>
<g>
<title>byte[] (1,365 samples, 0.43%)</title><rect x="935.4" y="627.0" width="5.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="938.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/AsyncService.entity (28,281 samples, 8.81%)</title><rect x="940.4" y="691.0" width="104.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="943.4" y="702.0">ru/mail/poli..</text>
</g>
<g>
<title>java/lang/String.getBytes (644 samples, 0.20%)</title><rect x="940.4" y="675.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="943.4" y="686.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (644 samples, 0.20%)</title><rect x="940.4" y="659.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="943.4" y="670.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (644 samples, 0.20%)</title><rect x="940.4" y="643.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="943.4" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (644 samples, 0.20%)</title><rect x="940.4" y="627.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="943.4" y="638.0"></text>
</g>
<g>
<title>byte[] (644 samples, 0.20%)</title><rect x="940.4" y="611.0" width="2.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="943.4" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,327 samples, 0.41%)</title><rect x="942.8" y="675.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="945.8" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,327 samples, 0.41%)</title><rect x="942.8" y="659.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="945.8" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,327 samples, 0.41%)</title><rect x="942.8" y="643.0" width="4.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="945.8" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.pranova.Context (867 samples, 0.27%)</title><rect x="947.7" y="675.0" width="3.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="950.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/AsyncService.isProxied (1,140 samples, 0.36%)</title><rect x="950.9" y="675.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="953.9" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,140 samples, 0.36%)</title><rect x="950.9" y="659.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="953.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,140 samples, 0.36%)</title><rect x="950.9" y="643.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="953.9" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,140 samples, 0.36%)</title><rect x="950.9" y="627.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="953.9" y="638.0"></text>
</g>
<g>
<title>java.lang.String (587 samples, 0.18%)</title><rect x="950.9" y="611.0" width="2.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="953.9" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (553 samples, 0.17%)</title><rect x="953.0" y="611.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="956.0" y="622.0"></text>
</g>
<g>
<title>byte[] (553 samples, 0.17%)</title><rect x="953.0" y="595.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="956.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.execPut (23,708 samples, 7.39%)</title><rect x="955.1" y="675.0" width="87.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="958.1" y="686.0">ru/mail/po..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (672 samples, 0.21%)</title><rect x="955.1" y="659.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="958.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (672 samples, 0.21%)</title><rect x="955.1" y="643.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="958.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica$$Lambda$108/989074046.get$Lambda (672 samples, 0.21%)</title><rect x="955.1" y="627.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="958.1" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.pranova.Replica$$Lambda$108 (672 samples, 0.21%)</title><rect x="955.1" y="611.0" width="2.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="958.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.execAct (23,036 samples, 7.18%)</title><rect x="957.5" y="659.0" width="84.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="960.5" y="670.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils.replication (19,458 samples, 6.06%)</title><rect x="957.5" y="643.0" width="71.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="960.5" y="654.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (589 samples, 0.18%)</title><rect x="957.8" y="627.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="960.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1469166366.invoke (539 samples, 0.17%)</title><rect x="957.9" y="611.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="960.9" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2075526946.invoke (539 samples, 0.17%)</title><rect x="957.9" y="595.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="960.9" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (539 samples, 0.17%)</title><rect x="957.9" y="579.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="960.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (147 samples, 0.05%)</title><rect x="957.9" y="563.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="960.9" y="574.0"></text>
</g>
<g>
<title>java.lang.String (147 samples, 0.05%)</title><rect x="957.9" y="547.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="960.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (392 samples, 0.12%)</title><rect x="958.5" y="563.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="961.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (392 samples, 0.12%)</title><rect x="958.5" y="547.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="961.5" y="558.0"></text>
</g>
<g>
<title>byte[] (391 samples, 0.12%)</title><rect x="958.5" y="531.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="961.5" y="542.0"></text>
</g>
<g>
<title>java/net/URI.create (2,133 samples, 0.66%)</title><rect x="959.9" y="627.0" width="7.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="962.9" y="638.0"></text>
</g>
<g>
<title>java.net.URI (415 samples, 0.13%)</title><rect x="959.9" y="611.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="962.9" y="622.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (1,716 samples, 0.53%)</title><rect x="961.5" y="611.0" width="6.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="964.5" y="622.0"></text>
</g>
<g>
<title>java.net.URI$Parser (179 samples, 0.06%)</title><rect x="961.5" y="595.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="964.5" y="606.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (1,537 samples, 0.48%)</title><rect x="962.1" y="595.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="965.1" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (262 samples, 0.08%)</title><rect x="962.1" y="579.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="965.1" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (262 samples, 0.08%)</title><rect x="962.1" y="563.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="965.1" y="574.0"></text>
</g>
<g>
<title>java.lang.String (130 samples, 0.04%)</title><rect x="962.1" y="547.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="965.1" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (132 samples, 0.04%)</title><rect x="962.6" y="547.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="965.6" y="558.0"></text>
</g>
<g>
<title>byte[] (132 samples, 0.04%)</title><rect x="962.6" y="531.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="965.6" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (1,275 samples, 0.40%)</title><rect x="963.1" y="579.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="966.1" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (661 samples, 0.21%)</title><rect x="963.1" y="563.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="966.1" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (661 samples, 0.21%)</title><rect x="963.1" y="547.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="966.1" y="558.0"></text>
</g>
<g>
<title>java.lang.String (244 samples, 0.08%)</title><rect x="963.1" y="531.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="966.1" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (417 samples, 0.13%)</title><rect x="964.0" y="531.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="967.0" y="542.0"></text>
</g>
<g>
<title>byte[] (417 samples, 0.13%)</title><rect x="964.0" y="515.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="967.0" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (614 samples, 0.19%)</title><rect x="965.5" y="563.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="968.5" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (308 samples, 0.10%)</title><rect x="965.5" y="547.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="968.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (308 samples, 0.10%)</title><rect x="965.5" y="531.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="968.5" y="542.0"></text>
</g>
<g>
<title>java.lang.String (131 samples, 0.04%)</title><rect x="965.5" y="515.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="968.5" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (177 samples, 0.06%)</title><rect x="966.0" y="515.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="969.0" y="526.0"></text>
</g>
<g>
<title>byte[] (177 samples, 0.06%)</title><rect x="966.0" y="499.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="969.0" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (306 samples, 0.10%)</title><rect x="966.6" y="547.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="969.6" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (306 samples, 0.10%)</title><rect x="966.6" y="531.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="969.6" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (306 samples, 0.10%)</title><rect x="966.6" y="515.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="969.6" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (306 samples, 0.10%)</title><rect x="966.6" y="499.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="969.6" y="510.0"></text>
</g>
<g>
<title>java.lang.String (146 samples, 0.05%)</title><rect x="966.6" y="483.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="969.6" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (160 samples, 0.05%)</title><rect x="967.2" y="483.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="970.2" y="494.0"></text>
</g>
<g>
<title>byte[] (160 samples, 0.05%)</title><rect x="967.2" y="467.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="970.2" y="478.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.toString (128 samples, 0.04%)</title><rect x="967.8" y="627.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="970.8" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapCharBuffer.toString (128 samples, 0.04%)</title><rect x="967.8" y="611.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="970.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (128 samples, 0.04%)</title><rect x="967.8" y="595.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="970.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (128 samples, 0.04%)</title><rect x="967.8" y="579.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="970.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (128 samples, 0.04%)</title><rect x="967.8" y="563.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="970.8" y="574.0"></text>
</g>
<g>
<title>byte[] (128 samples, 0.04%)</title><rect x="967.8" y="547.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="970.8" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (254 samples, 0.08%)</title><rect x="968.2" y="627.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="971.2" y="638.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (254 samples, 0.08%)</title><rect x="968.2" y="611.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="971.2" y="622.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.decode (448 samples, 0.14%)</title><rect x="969.2" y="627.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="972.2" y="638.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (448 samples, 0.14%)</title><rect x="969.2" y="611.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="972.2" y="622.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.allocate (448 samples, 0.14%)</title><rect x="969.2" y="595.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="972.2" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapCharBuffer (269 samples, 0.08%)</title><rect x="969.2" y="579.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="972.2" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapCharBuffer.&lt;init&gt; (179 samples, 0.06%)</title><rect x="970.2" y="579.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="973.2" y="590.0"></text>
</g>
<g>
<title>char[] (179 samples, 0.06%)</title><rect x="970.2" y="563.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="973.2" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (84 samples, 0.03%)</title><rect x="970.8" y="627.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="973.8" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (84 samples, 0.03%)</title><rect x="970.8" y="611.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="973.8" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (166 samples, 0.05%)</title><rect x="971.1" y="627.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="974.1" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (118 samples, 0.04%)</title><rect x="971.1" y="611.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="974.1" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (118 samples, 0.04%)</title><rect x="971.1" y="595.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="974.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (120 samples, 0.04%)</title><rect x="971.7" y="627.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="974.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (120 samples, 0.04%)</title><rect x="971.7" y="611.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="974.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (375 samples, 0.12%)</title><rect x="972.2" y="627.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="975.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (375 samples, 0.12%)</title><rect x="972.2" y="611.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="975.2" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (206 samples, 0.06%)</title><rect x="972.2" y="595.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="975.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (169 samples, 0.05%)</title><rect x="972.9" y="595.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="975.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (169 samples, 0.05%)</title><rect x="972.9" y="579.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="975.9" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (169 samples, 0.05%)</title><rect x="972.9" y="563.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="975.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (10,825 samples, 3.37%)</title><rect x="973.6" y="627.0" width="39.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="976.6" y="638.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (10,825 samples, 3.37%)</title><rect x="973.6" y="611.0" width="39.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="976.6" y="622.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (10,825 samples, 3.37%)</title><rect x="973.6" y="595.0" width="39.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="976.6" y="606.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (10,825 samples, 3.37%)</title><rect x="973.6" y="579.0" width="39.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="976.6" y="590.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (78 samples, 0.02%)</title><rect x="973.6" y="563.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="976.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (78 samples, 0.02%)</title><rect x="973.6" y="547.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="976.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$148/1783803788.get$Lambda (78 samples, 0.02%)</title><rect x="973.6" y="531.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="976.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$148 (78 samples, 0.02%)</title><rect x="973.6" y="515.0" width="0.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="976.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (405 samples, 0.13%)</title><rect x="973.8" y="563.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="976.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (405 samples, 0.13%)</title><rect x="973.8" y="547.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="976.8" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (239 samples, 0.07%)</title><rect x="973.8" y="531.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="976.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (166 samples, 0.05%)</title><rect x="974.7" y="531.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="977.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (166 samples, 0.05%)</title><rect x="974.7" y="515.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="977.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (166 samples, 0.05%)</title><rect x="974.7" y="499.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="977.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (363 samples, 0.11%)</title><rect x="975.3" y="563.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="978.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (363 samples, 0.11%)</title><rect x="975.3" y="547.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="978.3" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (197 samples, 0.06%)</title><rect x="975.3" y="531.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="978.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (166 samples, 0.05%)</title><rect x="976.1" y="531.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="979.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (166 samples, 0.05%)</title><rect x="976.1" y="515.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="979.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (166 samples, 0.05%)</title><rect x="976.1" y="499.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="979.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (279 samples, 0.09%)</title><rect x="976.7" y="563.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="979.7" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (520 samples, 0.16%)</title><rect x="977.7" y="563.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="980.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (5,535 samples, 1.73%)</title><rect x="979.6" y="563.0" width="20.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="982.6" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (590 samples, 0.18%)</title><rect x="979.6" y="547.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="982.6" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (461 samples, 0.14%)</title><rect x="979.6" y="531.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="982.6" y="542.0"></text>
</g>
<g>
<title>java/util/List.spliterator (150 samples, 0.05%)</title><rect x="979.6" y="515.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="982.6" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (150 samples, 0.05%)</title><rect x="979.6" y="499.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="982.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (311 samples, 0.10%)</title><rect x="980.2" y="515.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="983.2" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (309 samples, 0.10%)</title><rect x="980.2" y="499.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="983.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (129 samples, 0.04%)</title><rect x="981.3" y="531.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="984.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (129 samples, 0.04%)</title><rect x="981.3" y="515.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="984.3" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (129 samples, 0.04%)</title><rect x="981.3" y="499.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="984.3" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$57/341796579.get (129 samples, 0.04%)</title><rect x="981.3" y="483.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="984.3" y="494.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (129 samples, 0.04%)</title><rect x="981.3" y="467.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="984.3" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2,169 samples, 0.68%)</title><rect x="981.8" y="547.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="984.8" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2,169 samples, 0.68%)</title><rect x="981.8" y="531.0" width="8.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="984.8" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (117 samples, 0.04%)</title><rect x="982.0" y="515.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="985.0" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap (263 samples, 0.08%)</title><rect x="982.5" y="515.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="985.5" y="526.0"></text>
</g>
<g>
<title>java.util.TreeSet (89 samples, 0.03%)</title><rect x="983.4" y="515.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="986.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (173 samples, 0.05%)</title><rect x="983.8" y="515.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="986.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (173 samples, 0.05%)</title><rect x="983.8" y="499.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="986.8" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1284541460.get$Lambda (173 samples, 0.05%)</title><rect x="983.8" y="483.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="986.8" y="494.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (173 samples, 0.05%)</title><rect x="983.8" y="467.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="986.8" y="478.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (1,053 samples, 0.33%)</title><rect x="984.4" y="515.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="987.4" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1,053 samples, 0.33%)</title><rect x="984.4" y="499.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="987.4" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1284541460.accept (1,053 samples, 0.33%)</title><rect x="984.4" y="483.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="987.4" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1,053 samples, 0.33%)</title><rect x="984.4" y="467.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="987.4" y="478.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (487 samples, 0.15%)</title><rect x="984.4" y="451.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="987.4" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$127/1726426466.accept (308 samples, 0.10%)</title><rect x="984.4" y="435.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="987.4" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (308 samples, 0.10%)</title><rect x="984.4" y="419.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="987.4" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (308 samples, 0.10%)</title><rect x="984.4" y="403.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="987.4" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (308 samples, 0.10%)</title><rect x="984.4" y="387.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="987.4" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (308 samples, 0.10%)</title><rect x="984.4" y="371.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="987.4" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (308 samples, 0.10%)</title><rect x="984.4" y="355.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="987.4" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (308 samples, 0.10%)</title><rect x="984.4" y="339.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="987.4" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (307 samples, 0.10%)</title><rect x="984.4" y="323.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="987.4" y="334.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (179 samples, 0.06%)</title><rect x="985.5" y="435.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="988.5" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (179 samples, 0.06%)</title><rect x="985.5" y="419.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="988.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (123 samples, 0.04%)</title><rect x="986.2" y="451.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="989.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (123 samples, 0.04%)</title><rect x="986.2" y="435.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="989.2" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$127/1726426466.get$Lambda (123 samples, 0.04%)</title><rect x="986.2" y="419.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="989.2" y="430.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$127 (123 samples, 0.04%)</title><rect x="986.2" y="403.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="989.2" y="414.0"></text>
</g>
<g>
<title>java/util/List.copyOf (255 samples, 0.08%)</title><rect x="986.6" y="451.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="989.6" y="462.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (255 samples, 0.08%)</title><rect x="986.6" y="435.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="989.6" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (122 samples, 0.04%)</title><rect x="986.6" y="419.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="989.6" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (122 samples, 0.04%)</title><rect x="986.6" y="403.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="989.6" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (122 samples, 0.04%)</title><rect x="986.6" y="387.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="989.6" y="398.0"></text>
</g>
<g>
<title>java/util/List.of (133 samples, 0.04%)</title><rect x="987.1" y="419.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="990.1" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (133 samples, 0.04%)</title><rect x="987.1" y="403.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="990.1" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (188 samples, 0.06%)</title><rect x="987.6" y="451.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="990.6" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (188 samples, 0.06%)</title><rect x="987.6" y="435.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="990.6" y="446.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (164 samples, 0.05%)</title><rect x="988.3" y="515.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="991.3" y="526.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (164 samples, 0.05%)</title><rect x="988.3" y="499.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="991.3" y="510.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (245 samples, 0.08%)</title><rect x="988.9" y="515.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="991.9" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap (245 samples, 0.08%)</title><rect x="988.9" y="499.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="991.9" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (78 samples, 0.02%)</title><rect x="989.8" y="547.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="992.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (1,963 samples, 0.61%)</title><rect x="990.1" y="547.0" width="7.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="993.1" y="558.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (1,963 samples, 0.61%)</title><rect x="990.1" y="531.0" width="7.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="993.1" y="542.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,814 samples, 0.57%)</title><rect x="990.1" y="515.0" width="6.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="993.1" y="526.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (1,814 samples, 0.57%)</title><rect x="990.1" y="499.0" width="6.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="993.1" y="510.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (1,814 samples, 0.57%)</title><rect x="990.1" y="483.0" width="6.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="993.1" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (394 samples, 0.12%)</title><rect x="990.1" y="467.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="993.1" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (524 samples, 0.16%)</title><rect x="991.5" y="467.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="994.5" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (524 samples, 0.16%)</title><rect x="991.5" y="451.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="994.5" y="462.0"></text>
</g>
<g>
<title>byte[] (524 samples, 0.16%)</title><rect x="991.5" y="435.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="994.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (896 samples, 0.28%)</title><rect x="993.4" y="467.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="996.4" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (896 samples, 0.28%)</title><rect x="993.4" y="451.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="996.4" y="462.0"></text>
</g>
<g>
<title>java.lang.String (382 samples, 0.12%)</title><rect x="993.4" y="435.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="996.4" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (514 samples, 0.16%)</title><rect x="994.8" y="435.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="997.8" y="446.0"></text>
</g>
<g>
<title>byte[] (514 samples, 0.16%)</title><rect x="994.8" y="419.0" width="1.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="997.8" y="430.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (149 samples, 0.05%)</title><rect x="996.7" y="515.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="999.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (273 samples, 0.09%)</title><rect x="997.3" y="547.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1000.3" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (273 samples, 0.09%)</title><rect x="997.3" y="531.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1000.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (462 samples, 0.14%)</title><rect x="998.3" y="547.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1001.3" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (115 samples, 0.04%)</title><rect x="998.3" y="531.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1001.3" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (142 samples, 0.04%)</title><rect x="998.7" y="531.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1001.7" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (142 samples, 0.04%)</title><rect x="998.7" y="515.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1001.7" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (205 samples, 0.06%)</title><rect x="999.2" y="531.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1002.2" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (205 samples, 0.06%)</title><rect x="999.2" y="515.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1002.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (2,294 samples, 0.72%)</title><rect x="1000.0" y="563.0" width="8.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1003.0" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (91 samples, 0.03%)</title><rect x="1000.0" y="547.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1003.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (366 samples, 0.11%)</title><rect x="1000.3" y="547.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1003.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (88 samples, 0.03%)</title><rect x="1001.7" y="547.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1004.7" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (88 samples, 0.03%)</title><rect x="1001.7" y="531.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1004.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (1,749 samples, 0.55%)</title><rect x="1002.0" y="547.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1005.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (1,749 samples, 0.55%)</title><rect x="1002.0" y="531.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1005.0" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (163 samples, 0.05%)</title><rect x="1002.0" y="515.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1005.0" y="526.0"></text>
</g>
<g>
<title>java.util.LinkedList (173 samples, 0.05%)</title><rect x="1002.6" y="515.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1005.6" y="526.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (857 samples, 0.27%)</title><rect x="1003.2" y="515.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1006.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (857 samples, 0.27%)</title><rect x="1003.2" y="499.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1006.2" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (857 samples, 0.27%)</title><rect x="1003.2" y="483.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1006.2" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (857 samples, 0.27%)</title><rect x="1003.2" y="467.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1006.2" y="478.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (855 samples, 0.27%)</title><rect x="1003.2" y="451.0" width="3.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1006.2" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (298 samples, 0.09%)</title><rect x="1006.4" y="515.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1009.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (298 samples, 0.09%)</title><rect x="1006.4" y="499.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1009.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor11.newInstance (194 samples, 0.06%)</title><rect x="1006.4" y="483.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1009.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (194 samples, 0.06%)</title><rect x="1006.4" y="467.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1009.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (104 samples, 0.03%)</title><rect x="1007.1" y="483.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1010.1" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (104 samples, 0.03%)</title><rect x="1007.1" y="467.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1010.1" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (258 samples, 0.08%)</title><rect x="1007.5" y="515.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1010.5" y="526.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (258 samples, 0.08%)</title><rect x="1007.5" y="499.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1010.5" y="510.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (258 samples, 0.08%)</title><rect x="1007.5" y="483.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1010.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (1,347 samples, 0.42%)</title><rect x="1008.4" y="563.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1011.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (280 samples, 0.09%)</title><rect x="1008.4" y="547.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1011.4" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (119 samples, 0.04%)</title><rect x="1008.4" y="531.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1011.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (161 samples, 0.05%)</title><rect x="1008.9" y="531.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1011.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (161 samples, 0.05%)</title><rect x="1008.9" y="515.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1011.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (161 samples, 0.05%)</title><rect x="1008.9" y="499.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1011.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (161 samples, 0.05%)</title><rect x="1008.9" y="483.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1011.9" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (161 samples, 0.05%)</title><rect x="1008.9" y="467.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1011.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (162 samples, 0.05%)</title><rect x="1009.5" y="547.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1012.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (905 samples, 0.28%)</title><rect x="1010.0" y="547.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1013.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (160 samples, 0.05%)</title><rect x="1010.0" y="531.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1013.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (160 samples, 0.05%)</title><rect x="1010.0" y="515.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1013.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$138/1830298872.get$Lambda (89 samples, 0.03%)</title><rect x="1010.0" y="499.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1013.0" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$138 (89 samples, 0.03%)</title><rect x="1010.0" y="483.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1013.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$142/1552091493.get$Lambda (71 samples, 0.02%)</title><rect x="1010.4" y="499.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1013.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$142 (71 samples, 0.02%)</title><rect x="1010.4" y="483.0" width="0.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1013.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (745 samples, 0.23%)</title><rect x="1010.6" y="531.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1013.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (745 samples, 0.23%)</title><rect x="1010.6" y="515.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1013.6" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (426 samples, 0.13%)</title><rect x="1010.6" y="499.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1013.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (319 samples, 0.10%)</title><rect x="1012.2" y="499.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1015.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (319 samples, 0.10%)</title><rect x="1012.2" y="483.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1015.2" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (319 samples, 0.10%)</title><rect x="1012.2" y="467.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1015.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Basic.primaryFor (606 samples, 0.19%)</title><rect x="1013.4" y="627.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1016.4" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (115 samples, 0.04%)</title><rect x="1013.6" y="611.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1016.6" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap (115 samples, 0.04%)</title><rect x="1013.6" y="595.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1016.6" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.add (440 samples, 0.14%)</title><rect x="1014.0" y="611.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1017.0" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.put (440 samples, 0.14%)</title><rect x="1014.0" y="595.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1017.0" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (440 samples, 0.14%)</title><rect x="1014.0" y="579.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1017.0" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (252 samples, 0.08%)</title><rect x="1014.0" y="563.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1017.0" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (252 samples, 0.08%)</title><rect x="1014.0" y="547.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1017.0" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (188 samples, 0.06%)</title><rect x="1014.9" y="563.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1017.9" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (187 samples, 0.06%)</title><rect x="1014.9" y="547.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1017.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils.convertRequest (3,551 samples, 1.11%)</title><rect x="1015.6" y="627.0" width="13.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1018.6" y="638.0"></text>
</g>
<g>
<title>java.lang.String[] (128 samples, 0.04%)</title><rect x="1015.6" y="611.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1018.6" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (147 samples, 0.05%)</title><rect x="1016.1" y="611.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1019.1" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (147 samples, 0.05%)</title><rect x="1016.1" y="595.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1019.1" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (562 samples, 0.18%)</title><rect x="1016.6" y="611.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1019.6" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (208 samples, 0.06%)</title><rect x="1016.6" y="595.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1019.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (354 samples, 0.11%)</title><rect x="1017.4" y="595.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1020.4" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (101 samples, 0.03%)</title><rect x="1017.4" y="579.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1020.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (253 samples, 0.08%)</title><rect x="1017.8" y="579.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1020.8" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (253 samples, 0.08%)</title><rect x="1017.8" y="563.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1020.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (2,272 samples, 0.71%)</title><rect x="1018.7" y="611.0" width="8.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1021.7" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (194 samples, 0.06%)</title><rect x="1018.7" y="595.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1021.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (2,078 samples, 0.65%)</title><rect x="1019.4" y="595.0" width="7.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1022.4" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,931 samples, 0.60%)</title><rect x="1019.4" y="579.0" width="7.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1022.4" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,931 samples, 0.60%)</title><rect x="1019.4" y="563.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1022.4" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (94 samples, 0.03%)</title><rect x="1019.4" y="547.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1022.4" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (115 samples, 0.04%)</title><rect x="1019.7" y="547.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1022.7" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (264 samples, 0.08%)</title><rect x="1020.2" y="547.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1023.2" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (81 samples, 0.03%)</title><rect x="1021.1" y="547.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1024.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (139 samples, 0.04%)</title><rect x="1021.4" y="547.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1024.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (139 samples, 0.04%)</title><rect x="1021.4" y="531.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1024.4" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1284541460.get$Lambda (139 samples, 0.04%)</title><rect x="1021.4" y="515.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1024.4" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (139 samples, 0.04%)</title><rect x="1021.4" y="499.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1024.4" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (166 samples, 0.05%)</title><rect x="1021.9" y="547.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1024.9" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (166 samples, 0.05%)</title><rect x="1021.9" y="531.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1024.9" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (816 samples, 0.25%)</title><rect x="1022.6" y="547.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1025.6" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1284541460.accept (816 samples, 0.25%)</title><rect x="1022.6" y="531.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1025.6" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (816 samples, 0.25%)</title><rect x="1022.6" y="515.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1025.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (133 samples, 0.04%)</title><rect x="1022.6" y="499.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1025.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (133 samples, 0.04%)</title><rect x="1022.6" y="483.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1025.6" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$127/1726426466.get$Lambda (133 samples, 0.04%)</title><rect x="1022.6" y="467.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1025.6" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$127 (133 samples, 0.04%)</title><rect x="1022.6" y="451.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1025.6" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (264 samples, 0.08%)</title><rect x="1023.0" y="499.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1026.0" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$127/1726426466.accept (264 samples, 0.08%)</title><rect x="1023.0" y="483.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1026.0" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (264 samples, 0.08%)</title><rect x="1023.0" y="467.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1026.0" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (264 samples, 0.08%)</title><rect x="1023.0" y="451.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1026.0" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (264 samples, 0.08%)</title><rect x="1023.0" y="435.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1026.0" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (264 samples, 0.08%)</title><rect x="1023.0" y="419.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1026.0" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (264 samples, 0.08%)</title><rect x="1023.0" y="403.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1026.0" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (264 samples, 0.08%)</title><rect x="1023.0" y="387.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1026.0" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (264 samples, 0.08%)</title><rect x="1023.0" y="371.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1026.0" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (226 samples, 0.07%)</title><rect x="1024.0" y="499.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1027.0" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (226 samples, 0.07%)</title><rect x="1024.0" y="483.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1027.0" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (111 samples, 0.03%)</title><rect x="1024.0" y="467.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1027.0" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (111 samples, 0.03%)</title><rect x="1024.0" y="451.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1027.0" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (111 samples, 0.03%)</title><rect x="1024.0" y="435.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1027.0" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (115 samples, 0.04%)</title><rect x="1024.4" y="467.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1027.4" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (115 samples, 0.04%)</title><rect x="1024.4" y="451.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1027.4" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (193 samples, 0.06%)</title><rect x="1024.8" y="499.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1027.8" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (193 samples, 0.06%)</title><rect x="1024.8" y="483.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1027.8" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (256 samples, 0.08%)</title><rect x="1025.6" y="547.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1028.6" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (256 samples, 0.08%)</title><rect x="1025.6" y="531.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1028.6" y="542.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (147 samples, 0.05%)</title><rect x="1026.5" y="579.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1029.5" y="590.0"></text>
</g>
<g>
<title>java/util/Optional.of (147 samples, 0.05%)</title><rect x="1026.5" y="563.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1029.5" y="574.0"></text>
</g>
<g>
<title>java.util.Optional (147 samples, 0.05%)</title><rect x="1026.5" y="547.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1029.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (442 samples, 0.14%)</title><rect x="1027.0" y="611.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1030.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (442 samples, 0.14%)</title><rect x="1027.0" y="595.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1030.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (442 samples, 0.14%)</title><rect x="1027.0" y="579.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1030.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (442 samples, 0.14%)</title><rect x="1027.0" y="563.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1030.0" y="574.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (442 samples, 0.14%)</title><rect x="1027.0" y="547.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1030.0" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (190 samples, 0.06%)</title><rect x="1027.0" y="531.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1030.0" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (190 samples, 0.06%)</title><rect x="1027.0" y="515.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1030.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$117/1366093034.apply (252 samples, 0.08%)</title><rect x="1027.7" y="531.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1030.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (252 samples, 0.08%)</title><rect x="1027.7" y="515.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1030.7" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList (130 samples, 0.04%)</title><rect x="1027.7" y="499.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1030.7" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (122 samples, 0.04%)</title><rect x="1028.2" y="499.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1031.2" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (122 samples, 0.04%)</title><rect x="1028.2" y="483.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1031.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replicas.toString (120 samples, 0.04%)</title><rect x="1028.7" y="627.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1031.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (120 samples, 0.04%)</title><rect x="1028.7" y="611.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1031.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1300723205.invoke (120 samples, 0.04%)</title><rect x="1028.7" y="595.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1031.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (120 samples, 0.04%)</title><rect x="1028.7" y="579.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1031.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (120 samples, 0.04%)</title><rect x="1028.7" y="563.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1031.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (120 samples, 0.04%)</title><rect x="1028.7" y="547.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1031.7" y="558.0"></text>
</g>
<g>
<title>byte[] (120 samples, 0.04%)</title><rect x="1028.7" y="531.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1031.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.asyncAct (1,147 samples, 0.36%)</title><rect x="1029.1" y="643.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1032.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (590 samples, 0.18%)</title><rect x="1029.1" y="627.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1032.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (590 samples, 0.18%)</title><rect x="1029.1" y="611.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1032.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica$$Lambda$450/692403226.get$Lambda (590 samples, 0.18%)</title><rect x="1029.1" y="595.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1032.1" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.service.pranova.Replica$$Lambda$450 (590 samples, 0.18%)</title><rect x="1029.1" y="579.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1032.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (557 samples, 0.17%)</title><rect x="1031.3" y="627.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1034.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (557 samples, 0.17%)</title><rect x="1031.3" y="611.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1034.3" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (551 samples, 0.17%)</title><rect x="1031.3" y="595.0" width="2.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1034.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.schedule (2,431 samples, 0.76%)</title><rect x="1033.3" y="643.0" width="9.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1036.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (177 samples, 0.06%)</title><rect x="1033.5" y="627.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1036.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (177 samples, 0.06%)</title><rect x="1033.5" y="611.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1036.5" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (117 samples, 0.04%)</title><rect x="1033.5" y="595.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1036.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (156 samples, 0.05%)</title><rect x="1034.1" y="627.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1037.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (156 samples, 0.05%)</title><rect x="1034.1" y="611.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1037.1" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniAccept (101 samples, 0.03%)</title><rect x="1034.1" y="595.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1037.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils.collect (1,602 samples, 0.50%)</title><rect x="1034.7" y="627.0" width="5.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1037.7" y="638.0"></text>
</g>
<g>
<title>java.util.ArrayList (74 samples, 0.02%)</title><rect x="1034.7" y="611.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1037.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/90689146.linkToTargetMethod (316 samples, 0.10%)</title><rect x="1035.5" y="611.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1038.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/190755687.invokeStatic (316 samples, 0.10%)</title><rect x="1035.5" y="595.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1038.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils$$Lambda$161/1603100438.get$Lambda (316 samples, 0.10%)</title><rect x="1035.5" y="579.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1038.5" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.service.pranova.FutureUtils$$Lambda$161 (316 samples, 0.10%)</title><rect x="1035.5" y="563.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1038.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (503 samples, 0.16%)</title><rect x="1036.8" y="611.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1039.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (503 samples, 0.16%)</title><rect x="1036.8" y="595.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1039.8" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (254 samples, 0.08%)</title><rect x="1036.8" y="579.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1039.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (79 samples, 0.02%)</title><rect x="1037.8" y="579.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1040.8" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (79 samples, 0.02%)</title><rect x="1037.8" y="563.0" width="0.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1040.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (170 samples, 0.05%)</title><rect x="1038.0" y="579.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1041.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (170 samples, 0.05%)</title><rect x="1038.0" y="563.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1041.0" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (170 samples, 0.05%)</title><rect x="1038.0" y="547.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1041.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (433 samples, 0.13%)</title><rect x="1038.7" y="611.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1041.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (433 samples, 0.13%)</title><rect x="1038.7" y="595.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1041.7" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (215 samples, 0.07%)</title><rect x="1038.7" y="579.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1041.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (151 samples, 0.05%)</title><rect x="1039.7" y="579.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1042.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (151 samples, 0.05%)</title><rect x="1039.7" y="563.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1042.7" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (151 samples, 0.05%)</title><rect x="1039.7" y="547.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1042.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.&lt;init&gt; (90 samples, 0.03%)</title><rect x="1040.3" y="611.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1043.3" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (90 samples, 0.03%)</title><rect x="1040.3" y="595.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1043.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils.merge (454 samples, 0.14%)</title><rect x="1040.6" y="627.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1043.6" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (70 samples, 0.02%)</title><rect x="1040.6" y="611.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1043.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (174 samples, 0.05%)</title><rect x="1041.0" y="611.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1044.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (174 samples, 0.05%)</title><rect x="1041.0" y="595.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1044.0" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (115 samples, 0.04%)</title><rect x="1041.0" y="579.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1044.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (169 samples, 0.05%)</title><rect x="1041.6" y="611.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1044.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (169 samples, 0.05%)</title><rect x="1041.6" y="595.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1044.6" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (112 samples, 0.03%)</title><rect x="1041.6" y="579.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1044.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replicas.quorum (595 samples, 0.19%)</title><rect x="1042.3" y="675.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1045.3" y="686.0"></text>
</g>
<g>
<title>ru.mail.polis.service.pranova.Replicas (595 samples, 0.19%)</title><rect x="1042.3" y="659.0" width="2.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1045.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,450 samples, 0.45%)</title><rect x="1044.5" y="707.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1047.5" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,450 samples, 0.45%)</title><rect x="1044.5" y="691.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1047.5" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,450 samples, 0.45%)</title><rect x="1044.5" y="675.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1047.5" y="686.0"></text>
</g>
<g>
<title>java.lang.String (630 samples, 0.20%)</title><rect x="1044.5" y="659.0" width="2.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1047.5" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (820 samples, 0.26%)</title><rect x="1046.8" y="659.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1049.8" y="670.0"></text>
</g>
<g>
<title>byte[] (820 samples, 0.26%)</title><rect x="1046.8" y="643.0" width="3.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1049.8" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7,884 samples, 2.46%)</title><rect x="1049.8" y="739.0" width="29.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1052.8" y="750.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (1,085 samples, 0.34%)</title><rect x="1049.8" y="723.0" width="4.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1052.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2,235 samples, 0.70%)</title><rect x="1053.8" y="723.0" width="8.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1056.8" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (2,221 samples, 0.69%)</title><rect x="1053.8" y="707.0" width="8.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1056.8" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,564 samples, 1.42%)</title><rect x="1062.0" y="723.0" width="16.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1065.0" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,564 samples, 1.42%)</title><rect x="1062.0" y="707.0" width="16.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1065.0" y="718.0"></text>
</g>
<g>
<title>char[] (2,325 samples, 0.72%)</title><rect x="1062.0" y="691.0" width="8.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1065.0" y="702.0"></text>
</g>
<g>
<title>java.lang.String (633 samples, 0.20%)</title><rect x="1070.6" y="691.0" width="2.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1073.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,583 samples, 0.49%)</title><rect x="1073.0" y="691.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1076.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,583 samples, 0.49%)</title><rect x="1073.0" y="675.0" width="5.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1076.0" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,583 samples, 0.49%)</title><rect x="1073.0" y="659.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1076.0" y="670.0"></text>
</g>
<g>
<title>byte[] (1,583 samples, 0.49%)</title><rect x="1073.0" y="643.0" width="5.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1076.0" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (939 samples, 0.29%)</title><rect x="1078.8" y="739.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1081.8" y="750.0"></text>
</g>
<g>
<title>byte[] (939 samples, 0.29%)</title><rect x="1078.8" y="723.0" width="3.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1081.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,244 samples, 0.39%)</title><rect x="1082.2" y="739.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1085.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,244 samples, 0.39%)</title><rect x="1082.2" y="723.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1085.2" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,244 samples, 0.39%)</title><rect x="1082.2" y="707.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1085.2" y="718.0"></text>
</g>
<g>
<title>java.lang.String (596 samples, 0.19%)</title><rect x="1082.2" y="691.0" width="2.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1085.2" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (648 samples, 0.20%)</title><rect x="1084.4" y="691.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1087.4" y="702.0"></text>
</g>
<g>
<title>byte[] (648 samples, 0.20%)</title><rect x="1084.4" y="675.0" width="2.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1087.4" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (25,157 samples, 7.84%)</title><rect x="1086.8" y="739.0" width="92.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1089.8" y="750.0">one/nio/uti..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (25,157 samples, 7.84%)</title><rect x="1086.8" y="723.0" width="92.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1089.8" y="734.0">one/nio/uti..</text>
</g>
<g>
<title>char[] (12,613 samples, 3.93%)</title><rect x="1086.8" y="707.0" width="46.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1089.8" y="718.0">char[]</text>
</g>
<g>
<title>char[] (98 samples, 0.03%)</title><rect x="1133.2" y="707.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1136.2" y="718.0"></text>
</g>
<g>
<title>java.lang.String (4,188 samples, 1.31%)</title><rect x="1133.6" y="707.0" width="15.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1136.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8,258 samples, 2.57%)</title><rect x="1149.0" y="707.0" width="30.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1152.0" y="718.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8,258 samples, 2.57%)</title><rect x="1149.0" y="691.0" width="30.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1152.0" y="702.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8,258 samples, 2.57%)</title><rect x="1149.0" y="675.0" width="30.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1152.0" y="686.0">ja..</text>
</g>
<g>
<title>byte[] (8,258 samples, 2.57%)</title><rect x="1149.0" y="659.0" width="30.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1152.0" y="670.0">by..</text>
</g>
<g>
<title>one/nio/net/Session.read (1,643 samples, 0.51%)</title><rect x="1179.3" y="755.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1182.3" y="766.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (1,643 samples, 0.51%)</title><rect x="1179.3" y="739.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1182.3" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,643 samples, 0.51%)</title><rect x="1179.3" y="723.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1182.3" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,643 samples, 0.51%)</title><rect x="1179.3" y="707.0" width="6.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1182.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/LSMDao$Worker.run (1,257 samples, 0.39%)</title><rect x="1185.4" y="803.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1188.4" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/LSMDao.flush (1,257 samples, 0.39%)</title><rect x="1185.4" y="787.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1188.4" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.write (1,251 samples, 0.39%)</title><rect x="1185.4" y="771.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1188.4" y="782.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (81 samples, 0.03%)</title><rect x="1185.6" y="755.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1188.6" y="766.0"></text>
</g>
<g>
<title>java.lang.Long (81 samples, 0.03%)</title><rect x="1185.6" y="739.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1188.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/Bytes.fromLong (500 samples, 0.16%)</title><rect x="1185.9" y="755.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1188.9" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (500 samples, 0.16%)</title><rect x="1185.9" y="739.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1188.9" y="750.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (377 samples, 0.12%)</title><rect x="1185.9" y="723.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1188.9" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (123 samples, 0.04%)</title><rect x="1187.3" y="723.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1190.3" y="734.0"></text>
</g>
<g>
<title>byte[] (123 samples, 0.04%)</title><rect x="1187.3" y="707.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1190.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/Cell.getKey (118 samples, 0.04%)</title><rect x="1187.8" y="755.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1190.8" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (118 samples, 0.04%)</title><rect x="1187.8" y="739.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1190.8" y="750.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (118 samples, 0.04%)</title><rect x="1187.8" y="723.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1190.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.writeBuffer (342 samples, 0.11%)</title><rect x="1188.2" y="755.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1191.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/Bytes.fromInt (342 samples, 0.11%)</title><rect x="1188.2" y="739.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1191.2" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (342 samples, 0.11%)</title><rect x="1188.2" y="723.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1191.2" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (244 samples, 0.08%)</title><rect x="1188.2" y="707.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1191.2" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (98 samples, 0.03%)</title><rect x="1189.1" y="707.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1192.1" y="718.0"></text>
</g>
<g>
<title>byte[] (98 samples, 0.03%)</title><rect x="1189.1" y="691.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1192.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/Value.getData (151 samples, 0.05%)</title><rect x="1189.4" y="755.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1192.4" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (151 samples, 0.05%)</title><rect x="1189.4" y="739.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1192.4" y="750.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (151 samples, 0.05%)</title><rect x="1189.4" y="723.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1192.4" y="734.0"></text>
</g>
</g>
</svg>
