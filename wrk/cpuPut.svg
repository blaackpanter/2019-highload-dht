<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="789"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="789"> </text>
<g id="frames">
<g>
<title>all (25,005 samples, 100.00%)</title><rect x="10.0" y="755.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="766.0">all</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (37 samples, 0.15%)</title><rect x="10.3" y="739.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.3" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (15 samples, 0.06%)</title><rect x="10.4" y="723.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.4" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (13 samples, 0.05%)</title><rect x="10.4" y="707.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.4" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (11 samples, 0.04%)</title><rect x="10.5" y="691.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.5" y="702.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (8 samples, 0.03%)</title><rect x="10.6" y="675.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="13.6" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (6 samples, 0.02%)</title><rect x="10.6" y="659.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.6" y="670.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (16 samples, 0.06%)</title><rect x="11.2" y="723.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="14.2" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (15 samples, 0.06%)</title><rect x="11.3" y="707.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="14.3" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (13 samples, 0.05%)</title><rect x="11.3" y="691.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="14.3" y="702.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (11 samples, 0.04%)</title><rect x="11.4" y="675.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="14.4" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (8 samples, 0.03%)</title><rect x="11.5" y="659.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="14.5" y="670.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (16 samples, 0.06%)</title><rect x="12.0" y="739.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="15.0" y="750.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (15 samples, 0.06%)</title><rect x="12.1" y="723.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="15.1" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (13 samples, 0.05%)</title><rect x="12.1" y="707.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="15.1" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (11 samples, 0.04%)</title><rect x="12.2" y="691.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.2" y="702.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (9 samples, 0.04%)</title><rect x="12.2" y="675.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="15.2" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (7 samples, 0.03%)</title><rect x="12.2" y="659.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="15.2" y="670.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (78 samples, 0.31%)</title><rect x="12.8" y="739.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="15.8" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (64 samples, 0.26%)</title><rect x="13.1" y="723.0" width="3.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="16.1" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (62 samples, 0.25%)</title><rect x="13.1" y="707.0" width="2.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="16.1" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (58 samples, 0.23%)</title><rect x="13.2" y="691.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="16.2" y="702.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation() (6 samples, 0.02%)</title><rect x="13.3" y="675.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="16.3" y="686.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (41 samples, 0.16%)</title><rect x="13.8" y="675.0" width="1.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="16.8" y="686.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (6 samples, 0.02%)</title><rect x="14.0" y="659.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="17.0" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (24 samples, 0.10%)</title><rect x="14.3" y="659.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="17.3" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (686 samples, 2.74%)</title><rect x="16.5" y="739.0" width="32.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="19.5" y="750.0">Sh..</text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (671 samples, 2.68%)</title><rect x="16.8" y="723.0" width="31.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="19.8" y="734.0">Ob..</text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (371 samples, 1.48%)</title><rect x="17.6" y="707.0" width="17.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="20.6" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (91 samples, 0.36%)</title><rect x="17.8" y="691.0" width="4.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="20.8" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (22 samples, 0.09%)</title><rect x="21.0" y="675.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="24.0" y="686.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 0.02%)</title><rect x="22.1" y="691.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="25.1" y="702.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (82 samples, 0.33%)</title><rect x="22.4" y="691.0" width="3.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="25.4" y="702.0"></text>
</g>
<g>
<title>__psynch_cvwait (81 samples, 0.32%)</title><rect x="22.4" y="675.0" width="3.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="25.4" y="686.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (189 samples, 0.76%)</title><rect x="26.2" y="691.0" width="9.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="29.2" y="702.0"></text>
</g>
<g>
<title>__gettimeofday (10 samples, 0.04%)</title><rect x="26.3" y="675.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="29.3" y="686.0"></text>
</g>
<g>
<title>__psynch_cvwait (176 samples, 0.70%)</title><rect x="26.8" y="675.0" width="8.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="29.8" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (261 samples, 1.04%)</title><rect x="35.3" y="707.0" width="12.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="38.3" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (73 samples, 0.29%)</title><rect x="44.2" y="691.0" width="3.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="47.2" y="702.0"></text>
</g>
<g>
<title>SpinPause (17 samples, 0.07%)</title><rect x="47.6" y="707.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="50.6" y="718.0"></text>
</g>
<g>
<title>[not_walkable] (43 samples, 0.17%)</title><rect x="49.1" y="739.0" width="2.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="52.1" y="750.0"></text>
</g>
<g>
<title>[not_walkable_Java] (19 samples, 0.08%)</title><rect x="51.2" y="739.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="54.2" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (7 samples, 0.03%)</title><rect x="51.3" y="723.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="54.3" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (7 samples, 0.03%)</title><rect x="51.3" y="707.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="54.3" y="718.0"></text>
</g>
<g>
<title>[unknown_Java] (326 samples, 1.30%)</title><rect x="52.0" y="739.0" width="15.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="55.0" y="750.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (219 samples, 0.88%)</title><rect x="57.1" y="723.0" width="10.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="60.1" y="734.0"></text>
</g>
<g>
<title>_res (156 samples, 0.62%)</title><rect x="60.1" y="707.0" width="7.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="63.1" y="718.0"></text>
</g>
<g>
<title>java/lang/Thread.run (14,021 samples, 56.07%)</title><rect x="67.4" y="739.0" width="661.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="70.4" y="750.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (14,021 samples, 56.07%)</title><rect x="67.4" y="723.0" width="661.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="70.4" y="734.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (14,021 samples, 56.07%)</title><rect x="67.4" y="707.0" width="661.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="70.4" y="718.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1,297 samples, 5.19%)</title><rect x="67.8" y="691.0" width="61.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="70.8" y="702.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,296 samples, 5.18%)</title><rect x="67.8" y="675.0" width="61.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="70.8" y="686.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,287 samples, 5.15%)</title><rect x="68.1" y="659.0" width="60.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="71.1" y="670.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (9 samples, 0.04%)</title><rect x="68.1" y="643.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="71.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9 samples, 0.04%)</title><rect x="68.1" y="627.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="71.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$133/477450495.apply (1,277 samples, 5.11%)</title><rect x="68.6" y="643.0" width="60.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="71.6" y="654.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$1 (1,276 samples, 5.10%)</title><rect x="68.6" y="627.0" width="60.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="71.6" y="638.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (1,276 samples, 5.10%)</title><rect x="68.6" y="611.0" width="60.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="71.6" y="622.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (6 samples, 0.02%)</title><rect x="69.0" y="595.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (1,117 samples, 4.47%)</title><rect x="69.3" y="595.0" width="52.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="72.3" y="606.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (1,117 samples, 4.47%)</title><rect x="69.3" y="579.0" width="52.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.3" y="590.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (1,117 samples, 4.47%)</title><rect x="69.3" y="563.0" width="52.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.3" y="574.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (519 samples, 2.08%)</title><rect x="69.3" y="547.0" width="24.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.3" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (519 samples, 2.08%)</title><rect x="69.3" y="531.0" width="24.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="72.3" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (519 samples, 2.08%)</title><rect x="69.3" y="515.0" width="24.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="72.3" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$200/846686280.apply (515 samples, 2.06%)</title><rect x="69.5" y="499.0" width="24.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="72.5" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (515 samples, 2.06%)</title><rect x="69.5" y="483.0" width="24.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="72.5" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (515 samples, 2.06%)</title><rect x="69.5" y="467.0" width="24.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.5" y="478.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$156/1859135568.apply (515 samples, 2.06%)</title><rect x="69.5" y="451.0" width="24.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="72.5" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (515 samples, 2.06%)</title><rect x="69.5" y="435.0" width="24.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.5" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (7 samples, 0.03%)</title><rect x="69.6" y="419.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (7 samples, 0.03%)</title><rect x="69.6" y="403.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="72.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (503 samples, 2.01%)</title><rect x="70.0" y="419.0" width="23.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="73.0" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (449 samples, 1.80%)</title><rect x="70.1" y="403.0" width="21.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="73.1" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (442 samples, 1.77%)</title><rect x="70.4" y="387.0" width="20.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="73.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$217/823875895.apply (435 samples, 1.74%)</title><rect x="70.7" y="371.0" width="20.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="73.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (435 samples, 1.74%)</title><rect x="70.7" y="355.0" width="20.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="73.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (12 samples, 0.05%)</title><rect x="71.3" y="339.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="74.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (12 samples, 0.05%)</title><rect x="71.3" y="323.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="74.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (12 samples, 0.05%)</title><rect x="71.3" y="307.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="74.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (12 samples, 0.05%)</title><rect x="71.3" y="291.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="74.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6 samples, 0.02%)</title><rect x="71.6" y="275.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="74.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6 samples, 0.02%)</title><rect x="71.6" y="259.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="74.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (54 samples, 0.22%)</title><rect x="71.9" y="339.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="74.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (53 samples, 0.21%)</title><rect x="72.0" y="323.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="75.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (27 samples, 0.11%)</title><rect x="72.0" y="307.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="75.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (23 samples, 0.09%)</title><rect x="73.4" y="307.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="76.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (23 samples, 0.09%)</title><rect x="73.4" y="291.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="76.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (10 samples, 0.04%)</title><rect x="73.4" y="275.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="76.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (10 samples, 0.04%)</title><rect x="73.4" y="259.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="76.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (10 samples, 0.04%)</title><rect x="73.4" y="243.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="76.4" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (8 samples, 0.03%)</title><rect x="73.5" y="227.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="76.5" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (8 samples, 0.03%)</title><rect x="73.5" y="211.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="76.5" y="222.0"></text>
</g>
<g>
<title>write (7 samples, 0.03%)</title><rect x="73.5" y="195.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="76.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (9 samples, 0.04%)</title><rect x="74.0" y="275.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="77.0" y="286.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (9 samples, 0.04%)</title><rect x="74.0" y="259.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="77.0" y="270.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (6 samples, 0.02%)</title><rect x="74.0" y="243.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="77.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (354 samples, 1.42%)</title><rect x="74.5" y="339.0" width="16.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="77.5" y="350.0"></text>
</g>
<g>
<title>java/lang/Long.toString (8 samples, 0.03%)</title><rect x="74.6" y="323.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="77.6" y="334.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (9 samples, 0.04%)</title><rect x="75.0" y="323.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="78.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (9 samples, 0.04%)</title><rect x="75.0" y="307.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="78.0" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (9 samples, 0.04%)</title><rect x="75.0" y="291.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="78.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (260 samples, 1.04%)</title><rect x="75.5" y="323.0" width="12.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="78.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (38 samples, 0.15%)</title><rect x="75.5" y="307.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="78.5" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (34 samples, 0.14%)</title><rect x="75.6" y="291.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="78.6" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (34 samples, 0.14%)</title><rect x="75.6" y="275.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="78.6" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (34 samples, 0.14%)</title><rect x="75.6" y="259.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.6" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (34 samples, 0.14%)</title><rect x="75.6" y="243.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="78.6" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (31 samples, 0.12%)</title><rect x="75.7" y="227.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="78.7" y="238.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (27 samples, 0.11%)</title><rect x="75.9" y="211.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="78.9" y="222.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (27 samples, 0.11%)</title><rect x="75.9" y="195.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="78.9" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (27 samples, 0.11%)</title><rect x="75.9" y="179.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="78.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (120 samples, 0.48%)</title><rect x="77.2" y="307.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="80.2" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext (45 samples, 0.18%)</title><rect x="77.2" y="291.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="80.2" y="302.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (6 samples, 0.02%)</title><rect x="79.0" y="275.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="82.0" y="286.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (10 samples, 0.04%)</title><rect x="79.4" y="291.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="82.4" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (10 samples, 0.04%)</title><rect x="79.4" y="275.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="82.4" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (7 samples, 0.03%)</title><rect x="79.4" y="259.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="82.4" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (7 samples, 0.03%)</title><rect x="79.4" y="243.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="82.4" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (7 samples, 0.03%)</title><rect x="79.4" y="227.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="82.4" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (7 samples, 0.03%)</title><rect x="79.4" y="211.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="82.4" y="222.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (10 samples, 0.04%)</title><rect x="80.1" y="291.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="83.1" y="302.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (7 samples, 0.03%)</title><rect x="80.5" y="291.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="83.5" y="302.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$List12.get (7 samples, 0.03%)</title><rect x="80.5" y="275.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="83.5" y="286.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$234/300523585.test (43 samples, 0.17%)</title><rect x="80.9" y="291.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="83.9" y="302.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (41 samples, 0.16%)</title><rect x="81.0" y="275.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="84.0" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (7 samples, 0.03%)</title><rect x="81.6" y="259.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="84.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/119290689.test (20 samples, 0.08%)</title><rect x="82.0" y="259.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="85.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (20 samples, 0.08%)</title><rect x="82.0" y="243.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="85.0" y="254.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$71/917831210.test (20 samples, 0.08%)</title><rect x="82.0" y="227.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="85.0" y="238.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (20 samples, 0.08%)</title><rect x="82.0" y="211.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="85.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$70/298430307.test (20 samples, 0.08%)</title><rect x="82.0" y="195.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="85.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (20 samples, 0.08%)</title><rect x="82.0" y="179.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.0" y="190.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (20 samples, 0.08%)</title><rect x="82.0" y="163.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="85.0" y="174.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (20 samples, 0.08%)</title><rect x="82.0" y="147.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="85.0" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (20 samples, 0.08%)</title><rect x="82.0" y="131.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="85.0" y="142.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (16 samples, 0.06%)</title><rect x="82.2" y="115.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="85.2" y="126.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (16 samples, 0.06%)</title><rect x="82.2" y="99.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.2" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.headerFilter (9 samples, 0.04%)</title><rect x="82.9" y="307.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="85.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.isConnect (9 samples, 0.04%)</title><rect x="82.9" y="291.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="85.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (93 samples, 0.37%)</title><rect x="83.3" y="307.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="86.3" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (93 samples, 0.37%)</title><rect x="83.3" y="291.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="86.3" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (92 samples, 0.37%)</title><rect x="83.3" y="275.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="86.3" y="286.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.03%)</title><rect x="83.6" y="259.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="86.6" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (79 samples, 0.32%)</title><rect x="83.9" y="259.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="86.9" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/938808288.accept (75 samples, 0.30%)</title><rect x="84.0" y="243.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="87.0" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (73 samples, 0.29%)</title><rect x="84.1" y="227.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.1" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (23 samples, 0.09%)</title><rect x="84.9" y="211.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="87.9" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$124/787427873.accept (22 samples, 0.09%)</title><rect x="85.0" y="195.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="88.0" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (22 samples, 0.09%)</title><rect x="85.0" y="179.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="88.0" y="190.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.02%)</title><rect x="85.4" y="163.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="88.4" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (32 samples, 0.13%)</title><rect x="86.0" y="211.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="89.0" y="222.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (8 samples, 0.03%)</title><rect x="86.5" y="195.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="89.5" y="206.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (8 samples, 0.03%)</title><rect x="86.5" y="179.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="89.5" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (8 samples, 0.03%)</title><rect x="86.5" y="163.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="89.5" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (13 samples, 0.05%)</title><rect x="86.9" y="195.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="89.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (23 samples, 0.09%)</title><rect x="87.7" y="323.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="90.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (23 samples, 0.09%)</title><rect x="87.7" y="307.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="90.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (8 samples, 0.03%)</title><rect x="88.4" y="291.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="91.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (50 samples, 0.20%)</title><rect x="88.8" y="323.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="91.8" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (22 samples, 0.09%)</title><rect x="89.8" y="307.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="92.8" y="318.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (8 samples, 0.03%)</title><rect x="90.1" y="291.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="93.1" y="302.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (8 samples, 0.03%)</title><rect x="90.1" y="275.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="93.1" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (8 samples, 0.03%)</title><rect x="90.1" y="259.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="93.1" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (7 samples, 0.03%)</title><rect x="90.5" y="291.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="93.5" y="302.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (6 samples, 0.02%)</title><rect x="90.9" y="307.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="93.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (50 samples, 0.20%)</title><rect x="91.4" y="403.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="94.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (50 samples, 0.20%)</title><rect x="91.4" y="387.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="94.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (15 samples, 0.06%)</title><rect x="91.6" y="371.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="94.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (15 samples, 0.06%)</title><rect x="91.6" y="355.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="94.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.first (15 samples, 0.06%)</title><rect x="91.6" y="339.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="94.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (30 samples, 0.12%)</title><rect x="92.3" y="371.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="95.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (30 samples, 0.12%)</title><rect x="92.3" y="355.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="95.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (29 samples, 0.12%)</title><rect x="92.4" y="339.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="95.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (29 samples, 0.12%)</title><rect x="92.4" y="323.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="95.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (19 samples, 0.08%)</title><rect x="92.4" y="307.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="95.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$189/1017919595.run (19 samples, 0.08%)</title><rect x="92.4" y="291.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="95.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (19 samples, 0.08%)</title><rect x="92.4" y="275.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="95.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (11 samples, 0.04%)</title><rect x="92.8" y="259.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="95.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (9 samples, 0.04%)</title><rect x="92.9" y="243.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="95.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (10 samples, 0.04%)</title><rect x="93.3" y="307.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="96.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6 samples, 0.02%)</title><rect x="93.5" y="291.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="96.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (6 samples, 0.02%)</title><rect x="93.5" y="275.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="96.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (593 samples, 2.37%)</title><rect x="94.0" y="547.0" width="28.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="97.0" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (9 samples, 0.04%)</title><rect x="94.2" y="531.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="97.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (8 samples, 0.03%)</title><rect x="94.2" y="515.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="97.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.02%)</title><rect x="94.3" y="499.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="97.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.02%)</title><rect x="94.3" y="483.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="97.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (580 samples, 2.32%)</title><rect x="94.6" y="531.0" width="27.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="97.6" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (547 samples, 2.19%)</title><rect x="94.6" y="515.0" width="25.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="97.6" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (547 samples, 2.19%)</title><rect x="94.6" y="499.0" width="25.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="97.6" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (543 samples, 2.17%)</title><rect x="94.6" y="483.0" width="25.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="97.6" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (7 samples, 0.03%)</title><rect x="94.6" y="467.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="97.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$160/1662199070.apply (536 samples, 2.14%)</title><rect x="94.9" y="467.0" width="25.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="97.9" y="478.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (536 samples, 2.14%)</title><rect x="94.9" y="451.0" width="25.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="97.9" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (536 samples, 2.14%)</title><rect x="94.9" y="435.0" width="25.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="97.9" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (281 samples, 1.12%)</title><rect x="94.9" y="419.0" width="13.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="97.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (281 samples, 1.12%)</title><rect x="94.9" y="403.0" width="13.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="97.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (279 samples, 1.12%)</title><rect x="95.0" y="387.0" width="13.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="98.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$193/1960149510.apply (279 samples, 1.12%)</title><rect x="95.0" y="371.0" width="13.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="98.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (279 samples, 1.12%)</title><rect x="95.0" y="355.0" width="13.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="98.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (279 samples, 1.12%)</title><rect x="95.0" y="339.0" width="13.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="98.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (279 samples, 1.12%)</title><rect x="95.0" y="323.0" width="13.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="98.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (239 samples, 0.96%)</title><rect x="95.0" y="307.0" width="11.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="98.0" y="318.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (15 samples, 0.06%)</title><rect x="95.0" y="291.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="98.0" y="302.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (12 samples, 0.05%)</title><rect x="95.1" y="275.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="98.1" y="286.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode0 (10 samples, 0.04%)</title><rect x="95.2" y="259.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="98.2" y="270.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeBlock (7 samples, 0.03%)</title><rect x="95.3" y="243.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="98.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (205 samples, 0.82%)</title><rect x="95.7" y="291.0" width="9.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="98.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (200 samples, 0.80%)</title><rect x="95.8" y="275.0" width="9.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="98.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (200 samples, 0.80%)</title><rect x="95.8" y="259.0" width="9.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="98.8" y="270.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (195 samples, 0.78%)</title><rect x="96.0" y="243.0" width="9.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="99.0" y="254.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (152 samples, 0.61%)</title><rect x="96.5" y="227.0" width="7.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="99.5" y="238.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (11 samples, 0.04%)</title><rect x="97.3" y="211.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="100.3" y="222.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (10 samples, 0.04%)</title><rect x="97.4" y="195.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="100.4" y="206.0"></text>
</g>
<g>
<title>binary_search(Array&lt;Method*&gt; const*, Symbol const*) (9 samples, 0.04%)</title><rect x="97.4" y="179.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="100.4" y="190.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (29 samples, 0.12%)</title><rect x="98.2" y="211.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="101.2" y="222.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (10 samples, 0.04%)</title><rect x="98.7" y="195.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="101.7" y="206.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (10 samples, 0.04%)</title><rect x="99.6" y="211.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="102.6" y="222.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (6 samples, 0.02%)</title><rect x="99.6" y="195.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="102.6" y="206.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (15 samples, 0.06%)</title><rect x="100.3" y="211.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="103.3" y="222.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (9 samples, 0.04%)</title><rect x="100.6" y="195.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="103.6" y="206.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (8 samples, 0.03%)</title><rect x="100.6" y="179.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="103.6" y="190.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (6 samples, 0.02%)</title><rect x="100.7" y="163.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="103.7" y="174.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (6 samples, 0.02%)</title><rect x="100.7" y="147.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="103.7" y="158.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (51 samples, 0.20%)</title><rect x="101.2" y="211.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="104.2" y="222.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (8 samples, 0.03%)</title><rect x="101.3" y="195.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="104.3" y="206.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (40 samples, 0.16%)</title><rect x="101.7" y="195.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="104.7" y="206.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (17 samples, 0.07%)</title><rect x="101.8" y="179.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="104.8" y="190.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (16 samples, 0.06%)</title><rect x="101.9" y="163.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="104.9" y="174.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (6 samples, 0.02%)</title><rect x="102.2" y="147.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="105.2" y="158.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (21 samples, 0.08%)</title><rect x="102.6" y="179.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="105.6" y="190.0"></text>
</g>
<g>
<title>CompiledMethod::find_pc_desc(unsigned char*, bool) (8 samples, 0.03%)</title><rect x="102.9" y="163.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="105.9" y="174.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (6 samples, 0.02%)</title><rect x="103.0" y="147.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="106.0" y="158.0"></text>
</g>
<g>
<title>call_stub (7 samples, 0.03%)</title><rect x="103.8" y="227.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="106.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$66/1706292388.run (20 samples, 0.08%)</title><rect x="104.1" y="227.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="107.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (19 samples, 0.08%)</title><rect x="104.2" y="211.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="107.2" y="222.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (19 samples, 0.08%)</title><rect x="104.2" y="195.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="107.2" y="206.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (10 samples, 0.04%)</title><rect x="104.3" y="179.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="107.3" y="190.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (10 samples, 0.04%)</title><rect x="104.3" y="163.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="107.3" y="174.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (9 samples, 0.04%)</title><rect x="104.3" y="147.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="107.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (8 samples, 0.03%)</title><rect x="104.4" y="131.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="107.4" y="142.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (7 samples, 0.03%)</title><rect x="104.8" y="179.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="107.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (7 samples, 0.03%)</title><rect x="104.8" y="163.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="107.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (19 samples, 0.08%)</title><rect x="105.4" y="291.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="108.4" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.05%)</title><rect x="105.6" y="275.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="108.6" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.05%)</title><rect x="105.6" y="259.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="108.6" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.05%)</title><rect x="105.6" y="243.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="108.6" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.03%)</title><rect x="105.7" y="227.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="108.7" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.03%)</title><rect x="105.7" y="211.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="108.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (40 samples, 0.16%)</title><rect x="106.3" y="307.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="109.3" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (9 samples, 0.04%)</title><rect x="106.6" y="291.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="109.6" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (9 samples, 0.04%)</title><rect x="106.6" y="275.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="109.6" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (9 samples, 0.04%)</title><rect x="106.6" y="259.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="109.6" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (9 samples, 0.04%)</title><rect x="106.6" y="243.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="109.6" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (26 samples, 0.10%)</title><rect x="107.0" y="291.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="110.0" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (13 samples, 0.05%)</title><rect x="107.6" y="275.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="110.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (255 samples, 1.02%)</title><rect x="108.2" y="419.0" width="12.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="111.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (252 samples, 1.01%)</title><rect x="108.3" y="403.0" width="11.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="111.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (12 samples, 0.05%)</title><rect x="108.5" y="387.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="111.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (94 samples, 0.38%)</title><rect x="109.1" y="387.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="112.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (74 samples, 0.30%)</title><rect x="109.2" y="371.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="112.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (69 samples, 0.28%)</title><rect x="109.5" y="355.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="112.5" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.get (17 samples, 0.07%)</title><rect x="110.0" y="339.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="113.0" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (16 samples, 0.06%)</title><rect x="110.0" y="323.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="113.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (6 samples, 0.02%)</title><rect x="110.5" y="307.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="113.5" y="318.0"></text>
</g>
<g>
<title>java/util/Objects.equals (6 samples, 0.02%)</title><rect x="110.5" y="291.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.5" y="302.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (6 samples, 0.02%)</title><rect x="110.5" y="275.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.5" y="286.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (6 samples, 0.02%)</title><rect x="110.5" y="259.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="113.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (40 samples, 0.16%)</title><rect x="110.8" y="339.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="113.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (13 samples, 0.05%)</title><rect x="112.7" y="371.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="115.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (142 samples, 0.57%)</title><rect x="113.5" y="387.0" width="6.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="116.5" y="398.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (122 samples, 0.49%)</title><rect x="114.4" y="371.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="117.4" y="382.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (77 samples, 0.31%)</title><rect x="114.8" y="355.0" width="3.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="117.8" y="366.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (16 samples, 0.06%)</title><rect x="115.1" y="339.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="118.1" y="350.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (16 samples, 0.06%)</title><rect x="115.9" y="339.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="118.9" y="350.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (14 samples, 0.06%)</title><rect x="115.9" y="323.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="118.9" y="334.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (6 samples, 0.02%)</title><rect x="115.9" y="307.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="118.9" y="318.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (6 samples, 0.02%)</title><rect x="116.2" y="307.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="119.2" y="318.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (29 samples, 0.12%)</title><rect x="117.0" y="339.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="120.0" y="350.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (14 samples, 0.06%)</title><rect x="117.1" y="323.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="120.1" y="334.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (8 samples, 0.03%)</title><rect x="117.4" y="307.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="120.4" y="318.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (14 samples, 0.06%)</title><rect x="117.7" y="323.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="120.7" y="334.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (10 samples, 0.04%)</title><rect x="117.9" y="307.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="120.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$163/960945384.run (21 samples, 0.08%)</title><rect x="119.0" y="355.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="122.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (19 samples, 0.08%)</title><rect x="119.1" y="339.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="122.1" y="350.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (15 samples, 0.06%)</title><rect x="119.3" y="323.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="122.3" y="334.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (15 samples, 0.06%)</title><rect x="119.3" y="307.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="122.3" y="318.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (15 samples, 0.06%)</title><rect x="119.3" y="291.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="122.3" y="302.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (14 samples, 0.06%)</title><rect x="119.3" y="275.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="122.3" y="286.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (12 samples, 0.05%)</title><rect x="119.4" y="259.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="122.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (9 samples, 0.04%)</title><rect x="119.6" y="243.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="122.6" y="254.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (7 samples, 0.03%)</title><rect x="119.7" y="227.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="122.7" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (7 samples, 0.03%)</title><rect x="119.7" y="211.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="122.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (28 samples, 0.11%)</title><rect x="120.7" y="515.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="123.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (8 samples, 0.03%)</title><rect x="121.5" y="499.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="124.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (54 samples, 0.22%)</title><rect x="122.0" y="595.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="125.0" y="606.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (20 samples, 0.08%)</title><rect x="122.4" y="579.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="125.4" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (15 samples, 0.06%)</title><rect x="122.6" y="563.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="125.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (26 samples, 0.10%)</title><rect x="123.3" y="579.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="126.3" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (26 samples, 0.10%)</title><rect x="123.3" y="563.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="126.3" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (20 samples, 0.08%)</title><rect x="123.6" y="547.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="126.6" y="558.0"></text>
</g>
<g>
<title>write (18 samples, 0.07%)</title><rect x="123.7" y="531.0" width="0.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="126.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (20 samples, 0.08%)</title><rect x="124.5" y="595.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="127.5" y="606.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (16 samples, 0.06%)</title><rect x="124.7" y="579.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="127.7" y="590.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (14 samples, 0.06%)</title><rect x="124.7" y="563.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="127.7" y="574.0"></text>
</g>
<g>
<title>__psynch_cvsignal (8 samples, 0.03%)</title><rect x="124.9" y="547.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="127.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (48 samples, 0.19%)</title><rect x="125.5" y="595.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="128.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (41 samples, 0.16%)</title><rect x="125.7" y="579.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="128.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (33 samples, 0.13%)</title><rect x="126.0" y="563.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="129.0" y="574.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (26 samples, 0.10%)</title><rect x="126.4" y="547.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="129.4" y="558.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (21 samples, 0.08%)</title><rect x="126.6" y="531.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="129.6" y="542.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (20 samples, 0.08%)</title><rect x="126.6" y="515.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="129.6" y="526.0"></text>
</g>
<g>
<title>JVM_IHashCode (11 samples, 0.04%)</title><rect x="126.9" y="499.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="129.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (22 samples, 0.09%)</title><rect x="127.7" y="595.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="130.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (22 samples, 0.09%)</title><rect x="127.7" y="579.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="130.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (22 samples, 0.09%)</title><rect x="127.7" y="563.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="130.7" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.now (18 samples, 0.07%)</title><rect x="127.7" y="547.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="130.7" y="558.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (18 samples, 0.07%)</title><rect x="127.7" y="531.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="130.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (11 samples, 0.04%)</title><rect x="128.1" y="515.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="131.1" y="526.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (8 samples, 0.03%)</title><rect x="128.2" y="499.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="131.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (78 samples, 0.31%)</title><rect x="129.1" y="691.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="132.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (76 samples, 0.30%)</title><rect x="129.2" y="675.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="132.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (75 samples, 0.30%)</title><rect x="129.2" y="659.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="132.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (57 samples, 0.23%)</title><rect x="130.1" y="643.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="133.1" y="654.0"></text>
</g>
<g>
<title>itable stub (14 samples, 0.06%)</title><rect x="130.9" y="627.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="133.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (6 samples, 0.02%)</title><rect x="131.5" y="627.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="134.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (12 samples, 0.05%)</title><rect x="132.0" y="627.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="135.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (8,931 samples, 35.72%)</title><rect x="132.7" y="691.0" width="421.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="135.7" y="702.0">java/util/concurrent/ThreadPoolExecutor.getTask</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (573 samples, 2.29%)</title><rect x="132.7" y="675.0" width="27.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="135.7" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (537 samples, 2.15%)</title><rect x="133.5" y="659.0" width="25.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="136.5" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (6 samples, 0.02%)</title><rect x="133.8" y="643.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="136.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.02%)</title><rect x="133.8" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="136.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (520 samples, 2.08%)</title><rect x="134.2" y="643.0" width="24.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="137.2" y="654.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (520 samples, 2.08%)</title><rect x="134.2" y="627.0" width="24.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="137.2" y="638.0">j..</text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (486 samples, 1.94%)</title><rect x="135.6" y="611.0" width="23.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="138.6" y="622.0">U..</text>
</g>
<g>
<title>Parker::park(bool, long) (461 samples, 1.84%)</title><rect x="136.2" y="595.0" width="21.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="139.2" y="606.0">P..</text>
</g>
<g>
<title>JavaThread::handle_special_suspend_equivalent_condition() (10 samples, 0.04%)</title><rect x="136.3" y="579.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="139.3" y="590.0"></text>
</g>
<g>
<title>__psynch_cvwait (433 samples, 1.73%)</title><rect x="136.8" y="579.0" width="20.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="139.8" y="590.0"></text>
</g>
<g>
<title>_pthread_cond_wait (10 samples, 0.04%)</title><rect x="157.3" y="579.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="160.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (18 samples, 0.07%)</title><rect x="158.9" y="659.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="161.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (18 samples, 0.07%)</title><rect x="158.9" y="643.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="161.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (18 samples, 0.07%)</title><rect x="158.9" y="627.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="161.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (18 samples, 0.07%)</title><rect x="158.9" y="611.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="161.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.05%)</title><rect x="159.2" y="595.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="162.2" y="606.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (12 samples, 0.05%)</title><rect x="159.2" y="579.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="162.2" y="590.0"></text>
</g>
<g>
<title>__psynch_cvsignal (12 samples, 0.05%)</title><rect x="159.2" y="563.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="162.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (8,358 samples, 33.43%)</title><rect x="159.8" y="675.0" width="394.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="162.8" y="686.0">java/util/concurrent/SynchronousQueue.poll</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (8,347 samples, 33.38%)</title><rect x="160.3" y="659.0" width="393.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="163.3" y="670.0">java/util/concurrent/SynchronousQueue$TransferStack.tr..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (26 samples, 0.10%)</title><rect x="160.5" y="643.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="163.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (22 samples, 0.09%)</title><rect x="160.7" y="627.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="163.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (8,092 samples, 32.36%)</title><rect x="161.8" y="643.0" width="381.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="164.8" y="654.0">java/util/concurrent/SynchronousQueue$TransferStack...</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (8,087 samples, 32.34%)</title><rect x="161.9" y="627.0" width="381.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="164.9" y="638.0">java/util/concurrent/locks/LockSupport.parkNanos</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7,808 samples, 31.23%)</title><rect x="171.6" y="611.0" width="368.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="174.6" y="622.0">jdk/internal/misc/Unsafe.park</text>
</g>
<g>
<title>JavaThreadParkedState::~JavaThreadParkedState() (6 samples, 0.02%)</title><rect x="180.5" y="595.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="183.5" y="606.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (7,601 samples, 30.40%)</title><rect x="181.2" y="595.0" width="358.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="184.2" y="606.0">Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, l..</text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (11 samples, 0.04%)</title><rect x="182.1" y="579.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="185.1" y="590.0"></text>
</g>
<g>
<title>JavaThread::is_terminated() const (6 samples, 0.02%)</title><rect x="182.3" y="563.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="185.3" y="574.0"></text>
</g>
<g>
<title>int OrderAccess::load_acquire&lt;int&gt;(int const volatile*) (6 samples, 0.02%)</title><rect x="182.3" y="547.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="185.3" y="558.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (18 samples, 0.07%)</title><rect x="182.6" y="579.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="185.6" y="590.0"></text>
</g>
<g>
<title>JavaThreadStatusChanger::JavaThreadStatusChanger(JavaThread*, java_lang_Thread::ThreadStatus) (7 samples, 0.03%)</title><rect x="182.7" y="563.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="185.7" y="574.0"></text>
</g>
<g>
<title>ThreadService::is_thread_monitoring_contention() (8 samples, 0.03%)</title><rect x="183.0" y="563.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="186.0" y="574.0"></text>
</g>
<g>
<title>JfrEvent&lt;EventThreadPark&gt;::JfrEvent(EventStartTime) (7 samples, 0.03%)</title><rect x="183.8" y="579.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="186.8" y="590.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (7,468 samples, 29.87%)</title><rect x="184.3" y="579.0" width="352.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="187.3" y="590.0">Parker::park(bool, long)</text>
</g>
<g>
<title>JavaThread::handle_special_suspend_equivalent_condition() (31 samples, 0.12%)</title><rect x="185.3" y="563.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="188.3" y="574.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (11 samples, 0.04%)</title><rect x="185.9" y="547.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="188.9" y="558.0"></text>
</g>
<g>
<title>_dispatch_queue_attrs (7 samples, 0.03%)</title><rect x="186.4" y="547.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="189.4" y="558.0"></text>
</g>
<g>
<title>ThreadBlockInVM::ThreadBlockInVM(JavaThread*) (8 samples, 0.03%)</title><rect x="187.1" y="563.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="190.1" y="574.0"></text>
</g>
<g>
<title>__gettimeofday (128 samples, 0.51%)</title><rect x="187.5" y="563.0" width="6.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="190.5" y="574.0"></text>
</g>
<g>
<title>__psynch_cvwait (7,167 samples, 28.66%)</title><rect x="193.5" y="563.0" width="338.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="196.5" y="574.0">__psynch_cvwait</text>
</g>
<g>
<title>_pthread_cond_wait (49 samples, 0.20%)</title><rect x="531.7" y="563.0" width="2.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="534.7" y="574.0"></text>
</g>
<g>
<title>_pthread_testcancel (10 samples, 0.04%)</title><rect x="534.1" y="563.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="537.1" y="574.0"></text>
</g>
<g>
<title>pthread_mutex_lock (15 samples, 0.06%)</title><rect x="535.0" y="563.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="538.0" y="574.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (22 samples, 0.09%)</title><rect x="535.7" y="563.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="538.7" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (10 samples, 0.04%)</title><rect x="537.1" y="579.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="540.1" y="590.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (8 samples, 0.03%)</title><rect x="537.2" y="563.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="540.2" y="574.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (6 samples, 0.02%)</title><rect x="537.3" y="547.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="540.3" y="558.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (13 samples, 0.05%)</title><rect x="537.5" y="579.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="540.5" y="590.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (8 samples, 0.03%)</title><rect x="537.7" y="563.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="540.7" y="574.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (6 samples, 0.02%)</title><rect x="537.8" y="547.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="540.8" y="558.0"></text>
</g>
<g>
<title>pthread_mutex_trylock (15 samples, 0.06%)</title><rect x="538.8" y="579.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="541.8" y="590.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (73 samples, 0.29%)</title><rect x="540.1" y="611.0" width="3.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="543.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (10 samples, 0.04%)</title><rect x="543.6" y="643.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="546.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (10 samples, 0.04%)</title><rect x="543.6" y="627.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="546.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (9 samples, 0.04%)</title><rect x="543.7" y="611.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="546.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (214 samples, 0.86%)</title><rect x="544.1" y="643.0" width="10.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="547.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (51 samples, 0.20%)</title><rect x="551.8" y="627.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="554.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$237/297625770.run (1,601 samples, 6.40%)</title><rect x="554.2" y="691.0" width="75.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="557.2" y="702.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (1,601 samples, 6.40%)</title><rect x="554.2" y="675.0" width="75.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="557.2" y="686.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (1,600 samples, 6.40%)</title><rect x="554.2" y="659.0" width="75.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="557.2" y="670.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (1,584 samples, 6.33%)</title><rect x="555.0" y="643.0" width="74.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="558.0" y="654.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,584 samples, 6.33%)</title><rect x="555.0" y="627.0" width="74.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="558.0" y="638.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,584 samples, 6.33%)</title><rect x="555.0" y="611.0" width="74.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="558.0" y="622.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,580 samples, 6.32%)</title><rect x="555.1" y="595.0" width="74.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="558.1" y="606.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,576 samples, 6.30%)</title><rect x="555.3" y="579.0" width="74.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="558.3" y="590.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,576 samples, 6.30%)</title><rect x="555.3" y="563.0" width="74.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="558.3" y="574.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (7 samples, 0.03%)</title><rect x="555.5" y="547.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="558.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,562 samples, 6.25%)</title><rect x="555.9" y="547.0" width="73.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="558.9" y="558.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1,558 samples, 6.23%)</title><rect x="556.0" y="531.0" width="73.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="559.0" y="542.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (326 samples, 1.30%)</title><rect x="556.3" y="515.0" width="15.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="559.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (281 samples, 1.12%)</title><rect x="556.7" y="499.0" width="13.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="559.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (258 samples, 1.03%)</title><rect x="557.8" y="483.0" width="12.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="560.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (252 samples, 1.01%)</title><rect x="557.8" y="467.0" width="11.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="560.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (251 samples, 1.00%)</title><rect x="557.8" y="451.0" width="11.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="560.8" y="462.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.02%)</title><rect x="558.3" y="435.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="561.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (63 samples, 0.25%)</title><rect x="558.6" y="435.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="561.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (24 samples, 0.10%)</title><rect x="558.8" y="419.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="561.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (24 samples, 0.10%)</title><rect x="558.8" y="403.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="561.8" y="414.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.03%)</title><rect x="559.2" y="387.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="562.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$248/577952506.apply (8 samples, 0.03%)</title><rect x="559.6" y="387.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="562.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$248/577952506.apply (34 samples, 0.14%)</title><rect x="560.0" y="419.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="563.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (31 samples, 0.12%)</title><rect x="560.0" y="403.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="563.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (29 samples, 0.12%)</title><rect x="560.1" y="387.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="563.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (21 samples, 0.08%)</title><rect x="560.4" y="371.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="563.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (13 samples, 0.05%)</title><rect x="560.8" y="355.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="563.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (12 samples, 0.05%)</title><rect x="560.8" y="339.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="563.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (155 samples, 0.62%)</title><rect x="561.6" y="435.0" width="7.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="564.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (8 samples, 0.03%)</title><rect x="561.8" y="419.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="564.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8 samples, 0.03%)</title><rect x="561.8" y="403.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="564.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$220/1881559820.apply (7 samples, 0.03%)</title><rect x="561.9" y="387.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="564.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (141 samples, 0.56%)</title><rect x="562.2" y="419.0" width="6.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="565.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$220/1881559820.apply (138 samples, 0.55%)</title><rect x="562.4" y="403.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="565.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (137 samples, 0.55%)</title><rect x="562.4" y="387.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="565.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (137 samples, 0.55%)</title><rect x="562.4" y="371.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="565.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$154/1991052763.apply (135 samples, 0.54%)</title><rect x="562.4" y="355.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="565.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (135 samples, 0.54%)</title><rect x="562.4" y="339.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="565.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (8 samples, 0.03%)</title><rect x="562.4" y="323.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="565.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (6 samples, 0.02%)</title><rect x="562.5" y="307.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="565.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (6 samples, 0.02%)</title><rect x="562.8" y="323.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="565.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (6 samples, 0.02%)</title><rect x="562.8" y="307.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="565.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (121 samples, 0.48%)</title><rect x="563.1" y="323.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="566.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (64 samples, 0.26%)</title><rect x="563.1" y="307.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="566.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (64 samples, 0.26%)</title><rect x="563.1" y="291.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="566.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (52 samples, 0.21%)</title><rect x="563.4" y="275.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="566.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$242/603485577.accept (18 samples, 0.07%)</title><rect x="563.5" y="259.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="566.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (18 samples, 0.07%)</title><rect x="563.5" y="243.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="566.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (18 samples, 0.07%)</title><rect x="563.5" y="227.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="566.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (18 samples, 0.07%)</title><rect x="563.5" y="211.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="566.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (18 samples, 0.07%)</title><rect x="563.5" y="195.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="566.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (12 samples, 0.05%)</title><rect x="563.6" y="179.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="566.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$246/511351265.accept (32 samples, 0.13%)</title><rect x="564.3" y="259.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="567.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (32 samples, 0.13%)</title><rect x="564.3" y="243.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="567.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (32 samples, 0.13%)</title><rect x="564.3" y="227.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="567.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (32 samples, 0.13%)</title><rect x="564.3" y="211.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="567.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (32 samples, 0.13%)</title><rect x="564.3" y="195.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="567.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (32 samples, 0.13%)</title><rect x="564.3" y="179.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="567.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (32 samples, 0.13%)</title><rect x="564.3" y="163.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="567.3" y="174.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.02%)</title><rect x="564.3" y="147.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="567.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (21 samples, 0.08%)</title><rect x="564.8" y="147.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="567.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (21 samples, 0.08%)</title><rect x="564.8" y="131.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="567.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (15 samples, 0.06%)</title><rect x="564.8" y="115.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="567.8" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (6 samples, 0.02%)</title><rect x="564.8" y="99.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="567.8" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (6 samples, 0.02%)</title><rect x="564.8" y="83.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="567.8" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (6 samples, 0.02%)</title><rect x="564.8" y="67.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="567.8" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.02%)</title><rect x="564.8" y="51.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="567.8" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.02%)</title><rect x="564.8" y="35.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="567.8" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (8 samples, 0.03%)</title><rect x="565.1" y="99.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="568.1" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (8 samples, 0.03%)</title><rect x="565.1" y="83.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="568.1" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (6 samples, 0.02%)</title><rect x="565.9" y="275.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="568.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (56 samples, 0.22%)</title><rect x="566.1" y="307.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="569.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (52 samples, 0.21%)</title><rect x="566.3" y="291.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="569.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (27 samples, 0.11%)</title><rect x="566.4" y="275.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="569.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (13 samples, 0.05%)</title><rect x="567.0" y="259.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="570.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (13 samples, 0.05%)</title><rect x="567.0" y="243.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="570.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (24 samples, 0.10%)</title><rect x="567.7" y="275.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="570.7" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (21 samples, 0.08%)</title><rect x="567.8" y="259.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="570.8" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (21 samples, 0.08%)</title><rect x="567.8" y="243.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="570.8" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (21 samples, 0.08%)</title><rect x="567.8" y="227.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="570.8" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (21 samples, 0.08%)</title><rect x="567.8" y="211.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="570.8" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (19 samples, 0.08%)</title><rect x="567.9" y="195.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="570.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$255/1944351138.get (6 samples, 0.02%)</title><rect x="569.2" y="435.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="572.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.02%)</title><rect x="569.7" y="467.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="572.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (6 samples, 0.02%)</title><rect x="569.7" y="451.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="572.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (6 samples, 0.02%)</title><rect x="569.7" y="435.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="572.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (6 samples, 0.02%)</title><rect x="569.7" y="419.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="572.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (6 samples, 0.02%)</title><rect x="569.7" y="403.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="572.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (22 samples, 0.09%)</title><rect x="570.0" y="499.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="573.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (11 samples, 0.04%)</title><rect x="570.5" y="483.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="573.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedPredecessors (6 samples, 0.02%)</title><rect x="570.5" y="467.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="573.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (15 samples, 0.06%)</title><rect x="571.0" y="499.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="574.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.04%)</title><rect x="571.0" y="483.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="574.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (10 samples, 0.04%)</title><rect x="571.0" y="467.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="574.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (8 samples, 0.03%)</title><rect x="571.1" y="451.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="574.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (8 samples, 0.03%)</title><rect x="571.1" y="435.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="574.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (8 samples, 0.03%)</title><rect x="571.1" y="419.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="574.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$254/1933384166.run (7 samples, 0.03%)</title><rect x="571.2" y="403.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="574.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (9 samples, 0.04%)</title><rect x="571.7" y="515.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="574.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (9 samples, 0.04%)</title><rect x="571.7" y="499.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="574.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (9 samples, 0.04%)</title><rect x="571.7" y="483.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="574.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1,207 samples, 4.83%)</title><rect x="572.3" y="515.0" width="56.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="575.3" y="526.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1,207 samples, 4.83%)</title><rect x="572.3" y="499.0" width="56.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="575.3" y="510.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (6 samples, 0.02%)</title><rect x="572.6" y="483.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="575.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1,194 samples, 4.78%)</title><rect x="572.9" y="483.0" width="56.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="575.9" y="494.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1,188 samples, 4.75%)</title><rect x="573.1" y="467.0" width="56.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="576.1" y="478.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$253/1252625978.run (26 samples, 0.10%)</title><rect x="573.5" y="451.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="576.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (26 samples, 0.10%)</title><rect x="573.5" y="435.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="576.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (11 samples, 0.04%)</title><rect x="574.2" y="419.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="577.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1,153 samples, 4.61%)</title><rect x="574.8" y="451.0" width="54.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="577.8" y="462.0">jdk/i..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (1,135 samples, 4.54%)</title><rect x="574.8" y="435.0" width="53.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="577.8" y="446.0">java/..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1,135 samples, 4.54%)</title><rect x="574.8" y="419.0" width="53.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="577.8" y="430.0">sun/n..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (10 samples, 0.04%)</title><rect x="575.0" y="403.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="578.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (10 samples, 0.04%)</title><rect x="575.0" y="387.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="578.0" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1,117 samples, 4.47%)</title><rect x="575.5" y="403.0" width="52.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="578.5" y="414.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1,114 samples, 4.46%)</title><rect x="575.6" y="387.0" width="52.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="578.6" y="398.0">sun/n..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (18 samples, 0.07%)</title><rect x="575.6" y="371.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="578.6" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (14 samples, 0.06%)</title><rect x="575.6" y="355.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="578.6" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (7 samples, 0.03%)</title><rect x="576.5" y="371.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="579.5" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.03%)</title><rect x="576.5" y="355.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="579.5" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (7 samples, 0.03%)</title><rect x="576.5" y="339.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="579.5" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (1,026 samples, 4.10%)</title><rect x="576.8" y="371.0" width="48.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="579.8" y="382.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (1,020 samples, 4.08%)</title><rect x="577.0" y="355.0" width="48.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="580.0" y="366.0">sun/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_writev0 (15 samples, 0.06%)</title><rect x="578.7" y="339.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="581.7" y="350.0"></text>
</g>
<g>
<title>writev (965 samples, 3.86%)</title><rect x="579.6" y="339.0" width="45.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="582.6" y="350.0">writev</text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (62 samples, 0.25%)</title><rect x="625.2" y="371.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="628.2" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (16 samples, 0.06%)</title><rect x="626.9" y="355.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="629.9" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (16 samples, 0.06%)</title><rect x="626.9" y="339.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="629.9" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (8 samples, 0.03%)</title><rect x="627.0" y="323.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="630.0" y="334.0"></text>
</g>
<g>
<title>vtable stub (7 samples, 0.03%)</title><rect x="627.3" y="323.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="630.3" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (10 samples, 0.04%)</title><rect x="627.7" y="355.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="630.7" y="366.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (18 samples, 0.07%)</title><rect x="628.3" y="435.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="631.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (7 samples, 0.03%)</title><rect x="629.2" y="515.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="632.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (7 samples, 0.03%)</title><rect x="629.2" y="499.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="632.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,602 samples, 6.41%)</title><rect x="629.8" y="691.0" width="75.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="632.8" y="702.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,602 samples, 6.41%)</title><rect x="629.8" y="675.0" width="75.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="632.8" y="686.0">jdk/inte..</text>
</g>
<g>
<title>itable stub (6 samples, 0.02%)</title><rect x="629.8" y="659.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="632.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (779 samples, 3.12%)</title><rect x="630.2" y="659.0" width="36.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="633.2" y="670.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$189/1017919595.run (772 samples, 3.09%)</title><rect x="630.5" y="643.0" width="36.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="633.5" y="654.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (772 samples, 3.09%)</title><rect x="630.5" y="627.0" width="36.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="633.5" y="638.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peek (8 samples, 0.03%)</title><rect x="630.7" y="611.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="633.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (8 samples, 0.03%)</title><rect x="630.7" y="595.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="633.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (96 samples, 0.38%)</title><rect x="631.3" y="611.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="634.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (96 samples, 0.38%)</title><rect x="631.3" y="595.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="634.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (96 samples, 0.38%)</title><rect x="631.3" y="579.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="634.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (96 samples, 0.38%)</title><rect x="631.3" y="563.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="634.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (90 samples, 0.36%)</title><rect x="631.3" y="547.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="634.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (75 samples, 0.30%)</title><rect x="632.0" y="531.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="635.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (73 samples, 0.29%)</title><rect x="632.1" y="515.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="635.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (73 samples, 0.29%)</title><rect x="632.1" y="499.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="635.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (25 samples, 0.10%)</title><rect x="632.1" y="483.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="635.1" y="494.0"></text>
</g>
<g>
<title>java/util/HashSet.add (25 samples, 0.10%)</title><rect x="632.1" y="467.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="635.1" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.put (25 samples, 0.10%)</title><rect x="632.1" y="451.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="635.1" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (25 samples, 0.10%)</title><rect x="632.1" y="435.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="635.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (48 samples, 0.19%)</title><rect x="633.3" y="483.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="636.3" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (46 samples, 0.18%)</title><rect x="633.4" y="467.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="636.4" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (41 samples, 0.16%)</title><rect x="633.6" y="451.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="636.6" y="462.0"></text>
</g>
<g>
<title>write (36 samples, 0.14%)</title><rect x="633.9" y="435.0" width="1.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="636.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (6 samples, 0.02%)</title><rect x="635.6" y="547.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="638.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (654 samples, 2.62%)</title><rect x="636.0" y="611.0" width="30.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="639.0" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (654 samples, 2.62%)</title><rect x="636.0" y="595.0" width="30.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="639.0" y="606.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (654 samples, 2.62%)</title><rect x="636.0" y="579.0" width="30.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="639.0" y="590.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (654 samples, 2.62%)</title><rect x="636.0" y="563.0" width="30.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="639.0" y="574.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (416 samples, 1.66%)</title><rect x="636.5" y="547.0" width="19.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="639.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (416 samples, 1.66%)</title><rect x="636.5" y="531.0" width="19.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="639.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (413 samples, 1.65%)</title><rect x="636.6" y="515.0" width="19.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="639.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (410 samples, 1.64%)</title><rect x="636.8" y="499.0" width="19.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="639.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (407 samples, 1.63%)</title><rect x="636.9" y="483.0" width="19.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="639.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (405 samples, 1.62%)</title><rect x="636.9" y="467.0" width="19.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="639.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (404 samples, 1.62%)</title><rect x="637.0" y="451.0" width="19.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="640.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (11 samples, 0.04%)</title><rect x="637.0" y="435.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="640.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (364 samples, 1.46%)</title><rect x="637.5" y="435.0" width="17.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="640.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (364 samples, 1.46%)</title><rect x="637.5" y="419.0" width="17.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="640.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (301 samples, 1.20%)</title><rect x="637.7" y="403.0" width="14.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="640.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (27 samples, 0.11%)</title><rect x="638.2" y="387.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="641.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (27 samples, 0.11%)</title><rect x="638.2" y="371.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="641.2" y="382.0"></text>
</g>
<g>
<title>itable stub (9 samples, 0.04%)</title><rect x="638.7" y="355.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="641.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$250/1677809941.apply (6 samples, 0.02%)</title><rect x="639.4" y="387.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="642.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (6 samples, 0.02%)</title><rect x="639.4" y="371.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="642.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (6 samples, 0.02%)</title><rect x="639.4" y="355.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="642.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (6 samples, 0.02%)</title><rect x="639.4" y="339.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="642.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (6 samples, 0.02%)</title><rect x="639.4" y="323.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="642.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.02%)</title><rect x="639.4" y="307.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="642.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$136/1630948186.apply (208 samples, 0.83%)</title><rect x="639.7" y="387.0" width="9.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="642.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (208 samples, 0.83%)</title><rect x="639.7" y="371.0" width="9.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="642.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (9 samples, 0.04%)</title><rect x="639.7" y="355.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="642.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (8 samples, 0.03%)</title><rect x="639.8" y="339.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="642.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (196 samples, 0.78%)</title><rect x="640.1" y="355.0" width="9.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="643.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (6 samples, 0.02%)</title><rect x="640.1" y="339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="643.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (190 samples, 0.76%)</title><rect x="640.4" y="339.0" width="9.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="643.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (186 samples, 0.74%)</title><rect x="640.6" y="323.0" width="8.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="643.6" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (65 samples, 0.26%)</title><rect x="640.9" y="307.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="643.9" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (13 samples, 0.05%)</title><rect x="640.9" y="291.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="643.9" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (11 samples, 0.04%)</title><rect x="641.0" y="275.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="644.0" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (11 samples, 0.04%)</title><rect x="641.0" y="259.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="644.0" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (11 samples, 0.04%)</title><rect x="641.0" y="243.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="644.0" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (11 samples, 0.04%)</title><rect x="641.0" y="227.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="644.0" y="238.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.02%)</title><rect x="641.3" y="211.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="644.3" y="222.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.02%)</title><rect x="641.3" y="195.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="644.3" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (6 samples, 0.02%)</title><rect x="641.3" y="179.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="644.3" y="190.0"></text>
</g>
<g>
<title>java/util/Collection.stream (18 samples, 0.07%)</title><rect x="641.6" y="291.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="644.6" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (18 samples, 0.07%)</title><rect x="641.6" y="275.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="644.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (12 samples, 0.05%)</title><rect x="641.8" y="259.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="644.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (26 samples, 0.10%)</title><rect x="642.4" y="291.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="645.4" y="302.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (26 samples, 0.10%)</title><rect x="642.4" y="275.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="645.4" y="286.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (26 samples, 0.10%)</title><rect x="642.4" y="259.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="645.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (20 samples, 0.08%)</title><rect x="642.7" y="243.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="645.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (17 samples, 0.07%)</title><rect x="642.7" y="227.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="645.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (15 samples, 0.06%)</title><rect x="642.8" y="211.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="645.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (14 samples, 0.06%)</title><rect x="642.8" y="195.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="645.8" y="206.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (11 samples, 0.04%)</title><rect x="642.8" y="179.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="645.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (6 samples, 0.02%)</title><rect x="643.1" y="163.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="646.1" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (8 samples, 0.03%)</title><rect x="643.6" y="291.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="646.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (103 samples, 0.41%)</title><rect x="644.5" y="307.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="647.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$266/1609474805.run (98 samples, 0.39%)</title><rect x="644.8" y="291.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="647.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (98 samples, 0.39%)</title><rect x="644.8" y="275.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="647.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (30 samples, 0.12%)</title><rect x="644.9" y="259.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="647.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (19 samples, 0.08%)</title><rect x="645.2" y="243.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="648.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (19 samples, 0.08%)</title><rect x="645.2" y="227.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="648.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.first (19 samples, 0.08%)</title><rect x="645.2" y="211.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="648.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.02%)</title><rect x="646.1" y="243.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="649.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.acquire (11 samples, 0.04%)</title><rect x="646.4" y="259.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="649.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (43 samples, 0.17%)</title><rect x="646.9" y="259.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="649.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (43 samples, 0.17%)</title><rect x="646.9" y="243.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="649.9" y="254.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (35 samples, 0.14%)</title><rect x="647.0" y="227.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="650.0" y="238.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (7 samples, 0.03%)</title><rect x="647.1" y="211.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="650.1" y="222.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (26 samples, 0.10%)</title><rect x="647.5" y="211.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="650.5" y="222.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (23 samples, 0.09%)</title><rect x="647.6" y="195.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="650.6" y="206.0"></text>
</g>
<g>
<title>JVM_IHashCode (15 samples, 0.06%)</title><rect x="647.8" y="179.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="650.8" y="190.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (7 samples, 0.03%)</title><rect x="647.9" y="163.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="650.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (6 samples, 0.02%)</title><rect x="648.9" y="259.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="651.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$223/1818542728.apply (50 samples, 0.20%)</title><rect x="649.5" y="387.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="652.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$5 (50 samples, 0.20%)</title><rect x="649.5" y="371.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="652.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (49 samples, 0.20%)</title><rect x="649.5" y="355.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="652.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (38 samples, 0.15%)</title><rect x="650.0" y="339.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="653.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (35 samples, 0.14%)</title><rect x="650.1" y="323.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="653.1" y="334.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (26 samples, 0.10%)</title><rect x="650.6" y="307.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="653.6" y="318.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (18 samples, 0.07%)</title><rect x="650.9" y="291.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="653.9" y="302.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (18 samples, 0.07%)</title><rect x="650.9" y="275.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="653.9" y="286.0"></text>
</g>
<g>
<title>JVM_IHashCode (12 samples, 0.05%)</title><rect x="651.1" y="259.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="654.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (40 samples, 0.16%)</title><rect x="651.9" y="403.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="654.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (37 samples, 0.15%)</title><rect x="652.0" y="387.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="655.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$224/1842993601.apply (36 samples, 0.14%)</title><rect x="652.1" y="371.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="655.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (36 samples, 0.14%)</title><rect x="652.1" y="355.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="655.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (31 samples, 0.12%)</title><rect x="652.1" y="339.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="655.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (31 samples, 0.12%)</title><rect x="652.1" y="323.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="655.1" y="334.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (28 samples, 0.11%)</title><rect x="652.3" y="307.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="655.3" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (28 samples, 0.11%)</title><rect x="652.3" y="291.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="655.3" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (16 samples, 0.06%)</title><rect x="652.4" y="275.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="655.4" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterDeletion (11 samples, 0.04%)</title><rect x="652.6" y="259.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="655.6" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (9 samples, 0.04%)</title><rect x="653.2" y="275.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="656.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (12 samples, 0.05%)</title><rect x="653.8" y="403.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="656.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (10 samples, 0.04%)</title><rect x="653.9" y="387.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="656.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10 samples, 0.04%)</title><rect x="653.9" y="371.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="656.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$256/1416383859.apply (29 samples, 0.12%)</title><rect x="654.7" y="435.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="657.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (29 samples, 0.12%)</title><rect x="654.7" y="419.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="657.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (25 samples, 0.10%)</title><rect x="654.9" y="403.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="657.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (12 samples, 0.05%)</title><rect x="655.5" y="387.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="658.5" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.getLocalAddress (12 samples, 0.05%)</title><rect x="655.5" y="371.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="658.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (221 samples, 0.88%)</title><rect x="656.2" y="547.0" width="10.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="659.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (16 samples, 0.06%)</title><rect x="657.0" y="531.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="660.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (21 samples, 0.08%)</title><rect x="657.8" y="531.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="660.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (18 samples, 0.07%)</title><rect x="657.9" y="515.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="660.9" y="526.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (18 samples, 0.07%)</title><rect x="657.9" y="499.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="660.9" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (18 samples, 0.07%)</title><rect x="657.9" y="483.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="660.9" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (18 samples, 0.07%)</title><rect x="657.9" y="467.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="660.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (22 samples, 0.09%)</title><rect x="658.8" y="531.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="661.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (18 samples, 0.07%)</title><rect x="659.0" y="515.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="662.0" y="526.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (18 samples, 0.07%)</title><rect x="659.0" y="499.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="662.0" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (18 samples, 0.07%)</title><rect x="659.0" y="483.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="662.0" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (18 samples, 0.07%)</title><rect x="659.0" y="467.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="662.0" y="478.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (6 samples, 0.02%)</title><rect x="659.5" y="451.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="662.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (19 samples, 0.08%)</title><rect x="659.8" y="531.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="662.8" y="542.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (12 samples, 0.05%)</title><rect x="660.0" y="515.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="663.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (54 samples, 0.22%)</title><rect x="660.7" y="531.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="663.7" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (54 samples, 0.22%)</title><rect x="660.7" y="515.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="663.7" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (53 samples, 0.21%)</title><rect x="660.8" y="499.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="663.8" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (48 samples, 0.19%)</title><rect x="661.0" y="483.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="664.0" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/938808288.accept (42 samples, 0.17%)</title><rect x="661.3" y="467.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="664.3" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (40 samples, 0.16%)</title><rect x="661.4" y="451.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="664.4" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (19 samples, 0.08%)</title><rect x="661.6" y="435.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="664.6" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$124/787427873.accept (13 samples, 0.05%)</title><rect x="661.7" y="419.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="664.7" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (13 samples, 0.05%)</title><rect x="661.7" y="403.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="664.7" y="414.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.02%)</title><rect x="661.8" y="387.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="664.8" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (15 samples, 0.06%)</title><rect x="662.5" y="435.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="665.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (71 samples, 0.28%)</title><rect x="663.3" y="531.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="666.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (61 samples, 0.24%)</title><rect x="663.6" y="515.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="666.6" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (25 samples, 0.10%)</title><rect x="664.0" y="499.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="667.0" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (14 samples, 0.06%)</title><rect x="664.4" y="483.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="667.4" y="494.0"></text>
</g>
<g>
<title>java/lang/String.trim (10 samples, 0.04%)</title><rect x="665.1" y="499.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="668.1" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (8 samples, 0.03%)</title><rect x="665.2" y="483.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="668.2" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (19 samples, 0.08%)</title><rect x="665.6" y="499.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="668.6" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (6 samples, 0.02%)</title><rect x="665.9" y="483.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="668.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$204/1787594300.accept (6 samples, 0.02%)</title><rect x="666.6" y="547.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="669.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (813 samples, 3.25%)</title><rect x="667.0" y="659.0" width="38.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="670.0" y="670.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (807 samples, 3.23%)</title><rect x="667.3" y="643.0" width="38.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="670.3" y="654.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (802 samples, 3.21%)</title><rect x="667.3" y="627.0" width="37.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="670.3" y="638.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$189/1017919595.run (799 samples, 3.20%)</title><rect x="667.4" y="611.0" width="37.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="670.4" y="622.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (798 samples, 3.19%)</title><rect x="667.4" y="595.0" width="37.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="670.4" y="606.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peek (6 samples, 0.02%)</title><rect x="667.5" y="579.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="670.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (6 samples, 0.02%)</title><rect x="667.5" y="563.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="670.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (786 samples, 3.14%)</title><rect x="667.7" y="579.0" width="37.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="670.7" y="590.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (780 samples, 3.12%)</title><rect x="667.9" y="563.0" width="36.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="670.9" y="574.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (780 samples, 3.12%)</title><rect x="667.9" y="547.0" width="36.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="670.9" y="558.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$268/2092591718.run (503 samples, 2.01%)</title><rect x="667.9" y="531.0" width="23.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="670.9" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (503 samples, 2.01%)</title><rect x="667.9" y="515.0" width="23.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="670.9" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (497 samples, 1.99%)</title><rect x="668.1" y="499.0" width="23.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="671.1" y="510.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (33 samples, 0.13%)</title><rect x="668.1" y="483.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="671.1" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (21 samples, 0.08%)</title><rect x="668.1" y="467.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="671.1" y="478.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (21 samples, 0.08%)</title><rect x="668.1" y="451.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="671.1" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (21 samples, 0.08%)</title><rect x="668.1" y="435.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="671.1" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (21 samples, 0.08%)</title><rect x="668.1" y="419.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="671.1" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (21 samples, 0.08%)</title><rect x="668.1" y="403.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="671.1" y="414.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (16 samples, 0.06%)</title><rect x="668.4" y="387.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="671.4" y="398.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (16 samples, 0.06%)</title><rect x="668.4" y="371.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="671.4" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (10 samples, 0.04%)</title><rect x="668.6" y="355.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="671.6" y="366.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (8 samples, 0.03%)</title><rect x="668.7" y="339.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="671.7" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (9 samples, 0.04%)</title><rect x="669.3" y="467.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="672.3" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (9 samples, 0.04%)</title><rect x="669.3" y="451.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="672.3" y="462.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (9 samples, 0.04%)</title><rect x="669.3" y="435.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="672.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (463 samples, 1.85%)</title><rect x="669.7" y="483.0" width="21.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="672.7" y="494.0">j..</text>
</g>
<g>
<title>java/time/Instant.now (16 samples, 0.06%)</title><rect x="669.7" y="467.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="672.7" y="478.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (16 samples, 0.06%)</title><rect x="669.7" y="451.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="672.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (14 samples, 0.06%)</title><rect x="669.8" y="435.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="672.8" y="446.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (14 samples, 0.06%)</title><rect x="669.8" y="419.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="672.8" y="430.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (9 samples, 0.04%)</title><rect x="670.0" y="403.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="673.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (447 samples, 1.79%)</title><rect x="670.4" y="467.0" width="21.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="673.4" y="478.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (347 samples, 1.39%)</title><rect x="670.7" y="451.0" width="16.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="673.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (14 samples, 0.06%)</title><rect x="687.1" y="451.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="690.1" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.get (14 samples, 0.06%)</title><rect x="687.1" y="435.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="690.1" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (11 samples, 0.04%)</title><rect x="687.1" y="419.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="690.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (80 samples, 0.32%)</title><rect x="687.8" y="451.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="690.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (74 samples, 0.30%)</title><rect x="688.0" y="435.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="691.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (18 samples, 0.07%)</title><rect x="688.0" y="419.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="691.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (13 samples, 0.05%)</title><rect x="688.3" y="403.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="691.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (13 samples, 0.05%)</title><rect x="688.3" y="387.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="691.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (8 samples, 0.03%)</title><rect x="688.4" y="371.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="691.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (8 samples, 0.03%)</title><rect x="688.4" y="355.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="691.4" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (8 samples, 0.03%)</title><rect x="688.4" y="339.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="691.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (56 samples, 0.22%)</title><rect x="688.9" y="419.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="691.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (56 samples, 0.22%)</title><rect x="688.9" y="403.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="691.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (44 samples, 0.18%)</title><rect x="688.9" y="387.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="691.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (44 samples, 0.18%)</title><rect x="688.9" y="371.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="691.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (44 samples, 0.18%)</title><rect x="688.9" y="355.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="691.9" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (40 samples, 0.16%)</title><rect x="689.1" y="339.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="692.1" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (38 samples, 0.15%)</title><rect x="689.2" y="323.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="692.2" y="334.0"></text>
</g>
<g>
<title>write (35 samples, 0.14%)</title><rect x="689.3" y="307.0" width="1.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="692.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (9 samples, 0.04%)</title><rect x="691.1" y="387.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="694.1" y="398.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.02%)</title><rect x="691.2" y="371.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="694.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$269/536020518.accept (28 samples, 0.11%)</title><rect x="691.6" y="531.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="694.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (28 samples, 0.11%)</title><rect x="691.6" y="515.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="694.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (28 samples, 0.11%)</title><rect x="691.6" y="499.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="694.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (15 samples, 0.06%)</title><rect x="691.8" y="483.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="694.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (15 samples, 0.06%)</title><rect x="691.8" y="467.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="694.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (14 samples, 0.06%)</title><rect x="691.8" y="451.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="694.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (10 samples, 0.04%)</title><rect x="692.0" y="435.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="695.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$274/801904823.accept (6 samples, 0.02%)</title><rect x="692.1" y="419.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="695.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (6 samples, 0.02%)</title><rect x="692.1" y="403.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="695.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (6 samples, 0.02%)</title><rect x="692.1" y="387.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="695.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$206/201544838.accept (9 samples, 0.04%)</title><rect x="692.5" y="483.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="695.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (9 samples, 0.04%)</title><rect x="692.5" y="467.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="695.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (246 samples, 0.98%)</title><rect x="692.9" y="531.0" width="11.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="695.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (246 samples, 0.98%)</title><rect x="692.9" y="515.0" width="11.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="695.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (241 samples, 0.96%)</title><rect x="693.2" y="499.0" width="11.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="696.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (239 samples, 0.96%)</title><rect x="693.2" y="483.0" width="11.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="696.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (239 samples, 0.96%)</title><rect x="693.2" y="467.0" width="11.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="696.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (237 samples, 0.95%)</title><rect x="693.3" y="451.0" width="11.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="696.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (232 samples, 0.93%)</title><rect x="693.5" y="435.0" width="11.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="696.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$276/128011993.accept (230 samples, 0.92%)</title><rect x="693.6" y="419.0" width="10.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="696.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (223 samples, 0.89%)</title><rect x="693.9" y="403.0" width="10.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="696.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (223 samples, 0.89%)</title><rect x="693.9" y="387.0" width="10.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="696.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (223 samples, 0.89%)</title><rect x="693.9" y="371.0" width="10.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="696.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (8 samples, 0.03%)</title><rect x="694.0" y="355.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="697.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$282/1443783454.apply (6 samples, 0.02%)</title><rect x="694.1" y="339.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="697.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (6 samples, 0.02%)</title><rect x="694.1" y="323.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="697.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (211 samples, 0.84%)</title><rect x="694.4" y="355.0" width="10.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="697.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (208 samples, 0.83%)</title><rect x="694.5" y="339.0" width="9.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="697.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (206 samples, 0.82%)</title><rect x="694.6" y="323.0" width="9.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="697.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (198 samples, 0.79%)</title><rect x="694.6" y="307.0" width="9.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="697.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (198 samples, 0.79%)</title><rect x="694.6" y="291.0" width="9.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="697.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (195 samples, 0.78%)</title><rect x="694.8" y="275.0" width="9.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="697.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (194 samples, 0.78%)</title><rect x="694.8" y="259.0" width="9.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="697.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (193 samples, 0.77%)</title><rect x="694.9" y="243.0" width="9.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="697.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (190 samples, 0.76%)</title><rect x="695.0" y="227.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="698.0" y="238.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (173 samples, 0.69%)</title><rect x="695.7" y="211.0" width="8.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="698.7" y="222.0"></text>
</g>
<g>
<title>__psynch_cvsignal (149 samples, 0.60%)</title><rect x="696.5" y="195.0" width="7.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="699.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (7 samples, 0.03%)</title><rect x="704.0" y="307.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="707.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica$$Lambda$258/1838535232.run (503 samples, 2.01%)</title><rect x="705.4" y="691.0" width="23.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="708.4" y="702.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.lambda$asyncAct$5 (503 samples, 2.01%)</title><rect x="705.4" y="675.0" width="23.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="708.4" y="686.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (357 samples, 1.43%)</title><rect x="705.4" y="659.0" width="16.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="708.4" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (340 samples, 1.36%)</title><rect x="706.0" y="643.0" width="16.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="709.0" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (21 samples, 0.08%)</title><rect x="706.0" y="627.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="709.0" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (319 samples, 1.28%)</title><rect x="707.0" y="627.0" width="15.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="710.0" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (319 samples, 1.28%)</title><rect x="707.0" y="611.0" width="15.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="710.0" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (314 samples, 1.26%)</title><rect x="707.2" y="595.0" width="14.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="710.2" y="606.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (309 samples, 1.24%)</title><rect x="707.3" y="579.0" width="14.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="710.3" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (305 samples, 1.22%)</title><rect x="707.5" y="563.0" width="14.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="710.5" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (299 samples, 1.20%)</title><rect x="707.8" y="547.0" width="14.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="710.8" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (299 samples, 1.20%)</title><rect x="707.8" y="531.0" width="14.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="710.8" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (281 samples, 1.12%)</title><rect x="708.0" y="515.0" width="13.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="711.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (281 samples, 1.12%)</title><rect x="708.0" y="499.0" width="13.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="711.0" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (281 samples, 1.12%)</title><rect x="708.0" y="483.0" width="13.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="711.0" y="494.0"></text>
</g>
<g>
<title>write (266 samples, 1.06%)</title><rect x="708.8" y="467.0" width="12.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="711.8" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (13 samples, 0.05%)</title><rect x="721.3" y="515.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="724.3" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (11 samples, 0.04%)</title><rect x="721.3" y="499.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="724.3" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (9 samples, 0.04%)</title><rect x="721.4" y="483.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="724.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica$$Lambda$110/431350616.act (146 samples, 0.58%)</title><rect x="722.2" y="659.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="725.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.lambda$execPut$0 (146 samples, 0.58%)</title><rect x="722.2" y="643.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="725.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.put (146 samples, 0.58%)</title><rect x="722.2" y="627.0" width="6.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="725.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/LSMDao.upsert (145 samples, 0.58%)</title><rect x="722.2" y="611.0" width="6.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="725.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/MemoryTablePool.upsert (145 samples, 0.58%)</title><rect x="722.2" y="595.0" width="6.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="725.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/MemTable.upsert (137 samples, 0.55%)</title><rect x="722.5" y="579.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="725.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (129 samples, 0.52%)</title><rect x="722.5" y="563.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="725.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (125 samples, 0.50%)</title><rect x="722.6" y="547.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="725.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (16 samples, 0.06%)</title><rect x="723.0" y="531.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="726.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (99 samples, 0.40%)</title><rect x="723.8" y="531.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="726.8" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (40 samples, 0.16%)</title><rect x="726.6" y="515.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="729.6" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (40 samples, 0.16%)</title><rect x="726.6" y="499.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="729.6" y="510.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (40 samples, 0.16%)</title><rect x="726.6" y="483.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="729.6" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (18 samples, 0.07%)</title><rect x="727.6" y="467.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="730.6" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (18 samples, 0.07%)</title><rect x="727.6" y="451.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="730.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/Value.of (8 samples, 0.03%)</title><rect x="728.6" y="563.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="731.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (1,745 samples, 6.98%)</title><rect x="729.1" y="739.0" width="82.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="732.1" y="750.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (1,744 samples, 6.97%)</title><rect x="729.1" y="723.0" width="82.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="732.1" y="734.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (432 samples, 1.73%)</title><rect x="729.4" y="707.0" width="20.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="732.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (419 samples, 1.68%)</title><rect x="729.6" y="691.0" width="19.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="732.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (410 samples, 1.64%)</title><rect x="730.0" y="675.0" width="19.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="733.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (94 samples, 0.38%)</title><rect x="730.4" y="659.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="733.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (92 samples, 0.37%)</title><rect x="730.5" y="643.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="733.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.02%)</title><rect x="730.6" y="627.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="733.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils$$Lambda$113/949432318.get (85 samples, 0.34%)</title><rect x="730.8" y="627.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="733.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils.lambda$replication$6 (85 samples, 0.34%)</title><rect x="730.8" y="611.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="733.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica$$Lambda$110/431350616.act (81 samples, 0.32%)</title><rect x="731.0" y="595.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="734.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.lambda$execPut$0 (81 samples, 0.32%)</title><rect x="731.0" y="579.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="734.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.put (81 samples, 0.32%)</title><rect x="731.0" y="563.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="734.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/LSMDao.upsert (81 samples, 0.32%)</title><rect x="731.0" y="547.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="734.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/MemoryTablePool.upsert (81 samples, 0.32%)</title><rect x="731.0" y="531.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="734.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/MemTable.upsert (76 samples, 0.30%)</title><rect x="731.1" y="515.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="734.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (67 samples, 0.27%)</title><rect x="731.1" y="499.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="734.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (66 samples, 0.26%)</title><rect x="731.2" y="483.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="734.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (53 samples, 0.21%)</title><rect x="731.8" y="467.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="734.8" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (23 samples, 0.09%)</title><rect x="733.2" y="451.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="736.2" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (23 samples, 0.09%)</title><rect x="733.2" y="435.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="736.2" y="446.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (23 samples, 0.09%)</title><rect x="733.2" y="419.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="736.2" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (9 samples, 0.04%)</title><rect x="733.9" y="403.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="736.9" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (9 samples, 0.04%)</title><rect x="733.9" y="387.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="736.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/Value.of (8 samples, 0.03%)</title><rect x="734.3" y="499.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="737.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (305 samples, 1.22%)</title><rect x="734.8" y="659.0" width="14.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="737.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (303 samples, 1.21%)</title><rect x="734.9" y="643.0" width="14.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="737.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (75 samples, 0.30%)</title><rect x="735.1" y="627.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="738.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (75 samples, 0.30%)</title><rect x="735.1" y="611.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="738.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (21 samples, 0.08%)</title><rect x="735.3" y="595.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="738.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (6 samples, 0.02%)</title><rect x="735.3" y="579.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="738.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.02%)</title><rect x="735.3" y="563.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="738.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils$$Lambda$146/1951641922.apply (15 samples, 0.06%)</title><rect x="735.6" y="579.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="738.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils.lambda$replication$7 (15 samples, 0.06%)</title><rect x="735.6" y="563.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="738.6" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (15 samples, 0.06%)</title><rect x="735.6" y="547.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="738.6" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (10 samples, 0.04%)</title><rect x="735.6" y="531.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="738.6" y="542.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (10 samples, 0.04%)</title><rect x="735.6" y="515.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="738.6" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (10 samples, 0.04%)</title><rect x="735.6" y="499.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="738.6" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (10 samples, 0.04%)</title><rect x="735.6" y="483.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="738.6" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (10 samples, 0.04%)</title><rect x="735.6" y="467.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="738.6" y="478.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (7 samples, 0.03%)</title><rect x="735.7" y="451.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="738.7" y="462.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (7 samples, 0.03%)</title><rect x="735.7" y="435.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="738.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (7 samples, 0.03%)</title><rect x="735.7" y="419.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="738.7" y="430.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (6 samples, 0.02%)</title><rect x="735.7" y="403.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="738.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (44 samples, 0.18%)</title><rect x="736.5" y="595.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="739.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (42 samples, 0.17%)</title><rect x="736.6" y="579.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="739.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils$$Lambda$147/1690205539.accept (40 samples, 0.16%)</title><rect x="736.7" y="563.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="739.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils.lambda$collect$4 (40 samples, 0.16%)</title><rect x="736.7" y="547.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="739.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (34 samples, 0.14%)</title><rect x="736.7" y="531.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="739.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (34 samples, 0.14%)</title><rect x="736.7" y="515.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="739.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (34 samples, 0.14%)</title><rect x="736.7" y="499.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="739.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (34 samples, 0.14%)</title><rect x="736.7" y="483.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="739.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (33 samples, 0.13%)</title><rect x="736.7" y="467.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="739.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (33 samples, 0.13%)</title><rect x="736.7" y="451.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="739.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (33 samples, 0.13%)</title><rect x="736.7" y="435.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="739.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (32 samples, 0.13%)</title><rect x="736.8" y="419.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="739.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (32 samples, 0.13%)</title><rect x="736.8" y="403.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="739.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (32 samples, 0.13%)</title><rect x="736.8" y="387.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="739.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (31 samples, 0.12%)</title><rect x="736.8" y="371.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="739.8" y="382.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (28 samples, 0.11%)</title><rect x="736.9" y="355.0" width="1.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="739.9" y="366.0"></text>
</g>
<g>
<title>__psynch_cvsignal (24 samples, 0.10%)</title><rect x="737.1" y="339.0" width="1.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="740.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (224 samples, 0.90%)</title><rect x="738.7" y="627.0" width="10.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="741.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (11 samples, 0.04%)</title><rect x="738.7" y="611.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="741.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (11 samples, 0.04%)</title><rect x="738.7" y="595.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="741.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils$$Lambda$149/975932011.accept (213 samples, 0.85%)</title><rect x="739.2" y="611.0" width="10.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="742.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils.lambda$merge$2 (212 samples, 0.85%)</title><rect x="739.2" y="595.0" width="10.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="742.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (164 samples, 0.66%)</title><rect x="739.4" y="579.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="742.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (164 samples, 0.66%)</title><rect x="739.4" y="563.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="742.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (163 samples, 0.65%)</title><rect x="739.4" y="547.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="742.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica$$Lambda$155/7802206.accept (162 samples, 0.65%)</title><rect x="739.4" y="531.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="742.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.lambda$schedule$1 (162 samples, 0.65%)</title><rect x="739.4" y="515.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="742.4" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (157 samples, 0.63%)</title><rect x="739.6" y="499.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="742.6" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (153 samples, 0.61%)</title><rect x="739.8" y="483.0" width="7.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="742.8" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.03%)</title><rect x="739.8" y="467.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="742.8" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (146 samples, 0.58%)</title><rect x="740.1" y="467.0" width="6.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="743.1" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (146 samples, 0.58%)</title><rect x="740.1" y="451.0" width="6.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="743.1" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (146 samples, 0.58%)</title><rect x="740.1" y="435.0" width="6.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="743.1" y="446.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (140 samples, 0.56%)</title><rect x="740.3" y="419.0" width="6.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="743.3" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (140 samples, 0.56%)</title><rect x="740.3" y="403.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="743.3" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (139 samples, 0.56%)</title><rect x="740.3" y="387.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="743.3" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (139 samples, 0.56%)</title><rect x="740.3" y="371.0" width="6.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="743.3" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (135 samples, 0.54%)</title><rect x="740.4" y="355.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="743.4" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (134 samples, 0.54%)</title><rect x="740.5" y="339.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="743.5" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (133 samples, 0.53%)</title><rect x="740.5" y="323.0" width="6.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="743.5" y="334.0"></text>
</g>
<g>
<title>write (126 samples, 0.50%)</title><rect x="740.8" y="307.0" width="6.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="743.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (29 samples, 0.12%)</title><rect x="747.2" y="579.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="750.2" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (29 samples, 0.12%)</title><rect x="747.2" y="563.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="750.2" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (20 samples, 0.08%)</title><rect x="747.6" y="547.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="750.6" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (20 samples, 0.08%)</title><rect x="747.6" y="531.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="750.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (18 samples, 0.07%)</title><rect x="747.6" y="515.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="750.6" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (10 samples, 0.04%)</title><rect x="747.8" y="499.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="750.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (9 samples, 0.04%)</title><rect x="747.9" y="483.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="750.9" y="494.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$41/580718781.accept (9 samples, 0.04%)</title><rect x="747.9" y="467.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="750.9" y="478.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.lambda$toMap$68 (9 samples, 0.04%)</title><rect x="747.9" y="451.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="750.9" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.merge (8 samples, 0.03%)</title><rect x="747.9" y="435.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="750.9" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (15 samples, 0.06%)</title><rect x="748.5" y="579.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="751.5" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (15 samples, 0.06%)</title><rect x="748.5" y="563.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="751.5" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (15 samples, 0.06%)</title><rect x="748.5" y="547.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="751.5" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (12 samples, 0.05%)</title><rect x="748.7" y="531.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="751.7" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (9 samples, 0.04%)</title><rect x="748.7" y="515.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="751.7" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (9 samples, 0.04%)</title><rect x="748.7" y="499.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="751.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (9 samples, 0.04%)</title><rect x="749.3" y="691.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="752.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.04%)</title><rect x="749.3" y="675.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="752.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.03%)</title><rect x="749.4" y="659.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="752.4" y="670.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (8 samples, 0.03%)</title><rect x="749.4" y="643.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="752.4" y="654.0"></text>
</g>
<g>
<title>__psynch_cvsignal (7 samples, 0.03%)</title><rect x="749.4" y="627.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="752.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (717 samples, 2.87%)</title><rect x="749.8" y="707.0" width="33.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="752.8" y="718.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (717 samples, 2.87%)</title><rect x="749.8" y="691.0" width="33.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="752.8" y="702.0">jd..</text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (697 samples, 2.79%)</title><rect x="750.7" y="675.0" width="32.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="753.7" y="686.0">Un..</text>
</g>
<g>
<title>Parker::park(bool, long) (682 samples, 2.73%)</title><rect x="750.9" y="659.0" width="32.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="753.9" y="670.0">Pa..</text>
</g>
<g>
<title>__psynch_cvwait (668 samples, 2.67%)</title><rect x="751.3" y="643.0" width="31.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="754.3" y="654.0">__..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (589 samples, 2.36%)</title><rect x="783.6" y="707.0" width="27.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="786.6" y="718.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (587 samples, 2.35%)</title><rect x="783.7" y="691.0" width="27.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="786.7" y="702.0">j..</text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (566 samples, 2.26%)</title><rect x="784.7" y="675.0" width="26.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="787.7" y="686.0">U..</text>
</g>
<g>
<title>Parker::park(bool, long) (549 samples, 2.20%)</title><rect x="785.3" y="659.0" width="25.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="788.3" y="670.0">P..</text>
</g>
<g>
<title>__gettimeofday (12 samples, 0.05%)</title><rect x="785.7" y="643.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="788.7" y="654.0"></text>
</g>
<g>
<title>__psynch_cvwait (516 samples, 2.06%)</title><rect x="786.3" y="643.0" width="24.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="789.3" y="654.0">_..</text>
</g>
<g>
<title>_pthread_cond_wait (8 samples, 0.03%)</title><rect x="810.6" y="643.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="813.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (4,409 samples, 17.63%)</title><rect x="811.4" y="739.0" width="208.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="814.4" y="750.0">jdk/internal/net/http/HttpC..</text>
</g>
<g>
<title>java/util/ArrayList.clear (40 samples, 0.16%)</title><rect x="812.5" y="723.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="815.5" y="734.0"></text>
</g>
<g>
<title>itable stub (14 samples, 0.06%)</title><rect x="813.5" y="707.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="816.5" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (755 samples, 3.02%)</title><rect x="814.4" y="723.0" width="35.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="817.4" y="734.0">jav..</text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$124/787427873.accept (15 samples, 0.06%)</title><rect x="814.6" y="707.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="817.6" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (15 samples, 0.06%)</title><rect x="814.6" y="691.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="817.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String.trim (12 samples, 0.05%)</title><rect x="814.7" y="675.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="817.7" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (12 samples, 0.05%)</title><rect x="814.7" y="659.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="817.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$229/1548822157.accept (723 samples, 2.89%)</title><rect x="815.3" y="707.0" width="34.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="818.3" y="718.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (723 samples, 2.89%)</title><rect x="815.3" y="691.0" width="34.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="818.3" y="702.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (723 samples, 2.89%)</title><rect x="815.3" y="675.0" width="34.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="818.3" y="686.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (723 samples, 2.89%)</title><rect x="815.3" y="659.0" width="34.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="818.3" y="670.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (723 samples, 2.89%)</title><rect x="815.3" y="643.0" width="34.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="818.3" y="654.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (15 samples, 0.06%)</title><rect x="815.3" y="627.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="818.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (10 samples, 0.04%)</title><rect x="815.5" y="611.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="818.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (10 samples, 0.04%)</title><rect x="815.5" y="595.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="818.5" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.add (10 samples, 0.04%)</title><rect x="815.5" y="579.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="818.5" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.put (10 samples, 0.04%)</title><rect x="815.5" y="563.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="818.5" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (10 samples, 0.04%)</title><rect x="815.5" y="547.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="818.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (708 samples, 2.83%)</title><rect x="816.0" y="627.0" width="33.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="819.0" y="638.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (708 samples, 2.83%)</title><rect x="816.0" y="611.0" width="33.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="819.0" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (708 samples, 2.83%)</title><rect x="816.0" y="595.0" width="33.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="819.0" y="606.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (707 samples, 2.83%)</title><rect x="816.0" y="579.0" width="33.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="819.0" y="590.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (707 samples, 2.83%)</title><rect x="816.0" y="563.0" width="33.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="819.0" y="574.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$176/521403122.run (702 samples, 2.81%)</title><rect x="816.1" y="547.0" width="33.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="819.1" y="558.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (702 samples, 2.81%)</title><rect x="816.1" y="531.0" width="33.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="819.1" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (464 samples, 1.86%)</title><rect x="816.6" y="515.0" width="21.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="819.6" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (457 samples, 1.83%)</title><rect x="816.9" y="499.0" width="21.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="819.9" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (457 samples, 1.83%)</title><rect x="816.9" y="483.0" width="21.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="819.9" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (456 samples, 1.82%)</title><rect x="817.0" y="467.0" width="21.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="820.0" y="478.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (456 samples, 1.82%)</title><rect x="817.0" y="451.0" width="21.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="820.0" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (448 samples, 1.79%)</title><rect x="817.3" y="435.0" width="21.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="820.3" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (448 samples, 1.79%)</title><rect x="817.3" y="419.0" width="21.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="820.3" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (446 samples, 1.78%)</title><rect x="817.4" y="403.0" width="21.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="820.4" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (446 samples, 1.78%)</title><rect x="817.4" y="387.0" width="21.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="820.4" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (444 samples, 1.78%)</title><rect x="817.4" y="371.0" width="20.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="820.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (444 samples, 1.78%)</title><rect x="817.4" y="355.0" width="20.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="820.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (438 samples, 1.75%)</title><rect x="817.7" y="339.0" width="20.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="820.7" y="350.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (425 samples, 1.70%)</title><rect x="818.2" y="323.0" width="20.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="821.2" y="334.0"></text>
</g>
<g>
<title>Parker::unpark() (6 samples, 0.02%)</title><rect x="818.8" y="307.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="821.8" y="318.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (6 samples, 0.02%)</title><rect x="818.8" y="291.0" width="0.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="821.8" y="302.0"></text>
</g>
<g>
<title>__psynch_mutexwait (6 samples, 0.02%)</title><rect x="818.8" y="275.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="821.8" y="286.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (6 samples, 0.02%)</title><rect x="819.8" y="307.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="822.8" y="318.0"></text>
</g>
<g>
<title>__psynch_cvsignal (372 samples, 1.49%)</title><rect x="820.1" y="307.0" width="17.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="823.1" y="318.0"></text>
</g>
<g>
<title>pthread_cond_signal (6 samples, 0.02%)</title><rect x="837.8" y="307.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="840.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (6 samples, 0.02%)</title><rect x="838.5" y="515.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="841.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (7 samples, 0.03%)</title><rect x="838.8" y="515.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="841.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (7 samples, 0.03%)</title><rect x="838.8" y="499.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="841.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (6 samples, 0.02%)</title><rect x="838.8" y="483.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="841.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (6 samples, 0.02%)</title><rect x="838.8" y="467.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="841.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (6 samples, 0.02%)</title><rect x="838.8" y="451.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="841.8" y="462.0"></text>
</g>
<g>
<title>java/util/HashSet.add (6 samples, 0.02%)</title><rect x="838.8" y="435.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="841.8" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6 samples, 0.02%)</title><rect x="838.8" y="419.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="841.8" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6 samples, 0.02%)</title><rect x="838.8" y="403.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="841.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (215 samples, 0.86%)</title><rect x="839.1" y="515.0" width="10.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="842.1" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (209 samples, 0.84%)</title><rect x="839.4" y="499.0" width="9.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="842.4" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (204 samples, 0.82%)</title><rect x="839.6" y="483.0" width="9.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="842.6" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (198 samples, 0.79%)</title><rect x="839.9" y="467.0" width="9.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="842.9" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (190 samples, 0.76%)</title><rect x="839.9" y="451.0" width="9.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="842.9" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (190 samples, 0.76%)</title><rect x="839.9" y="435.0" width="9.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="842.9" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (183 samples, 0.73%)</title><rect x="840.2" y="419.0" width="8.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="843.2" y="430.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (10 samples, 0.04%)</title><rect x="840.7" y="403.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="843.7" y="414.0"></text>
</g>
<g>
<title>read (158 samples, 0.63%)</title><rect x="841.3" y="403.0" width="7.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="844.3" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (8 samples, 0.03%)</title><rect x="848.9" y="451.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="851.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$236/218073880.accept (14 samples, 0.06%)</title><rect x="849.4" y="707.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="852.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (14 samples, 0.06%)</title><rect x="849.4" y="691.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="852.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$228/264193509.run (14 samples, 0.06%)</title><rect x="849.4" y="675.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="852.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (14 samples, 0.06%)</title><rect x="849.4" y="659.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="852.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (14 samples, 0.06%)</title><rect x="849.4" y="643.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="852.4" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (62 samples, 0.25%)</title><rect x="850.2" y="723.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="853.2" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (54 samples, 0.22%)</title><rect x="850.6" y="707.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="853.6" y="718.0"></text>
</g>
<g>
<title>itable stub (9 samples, 0.04%)</title><rect x="850.7" y="691.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="853.7" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (40 samples, 0.16%)</title><rect x="851.1" y="691.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="854.1" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (38 samples, 0.15%)</title><rect x="851.2" y="675.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="854.2" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (38 samples, 0.15%)</title><rect x="851.2" y="659.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="854.2" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (32 samples, 0.13%)</title><rect x="851.3" y="643.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="854.3" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (11 samples, 0.04%)</title><rect x="851.5" y="627.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="854.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (6 samples, 0.02%)</title><rect x="851.7" y="611.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="854.7" y="622.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (7 samples, 0.03%)</title><rect x="852.0" y="627.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="855.0" y="638.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (6 samples, 0.02%)</title><rect x="852.5" y="627.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="855.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (1,676 samples, 6.70%)</title><rect x="853.1" y="723.0" width="79.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="856.1" y="734.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$178/1353562590.run (721 samples, 2.88%)</title><rect x="853.7" y="707.0" width="34.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="856.7" y="718.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (721 samples, 2.88%)</title><rect x="853.7" y="691.0" width="34.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="856.7" y="702.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/Logger.log (7 samples, 0.03%)</title><rect x="853.8" y="675.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="856.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (711 samples, 2.84%)</title><rect x="854.1" y="675.0" width="33.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="857.1" y="686.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (711 samples, 2.84%)</title><rect x="854.1" y="659.0" width="33.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="857.1" y="670.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (711 samples, 2.84%)</title><rect x="854.1" y="643.0" width="33.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="857.1" y="654.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (709 samples, 2.84%)</title><rect x="854.2" y="627.0" width="33.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="857.2" y="638.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$176/521403122.run (699 samples, 2.80%)</title><rect x="854.4" y="611.0" width="33.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="857.4" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (696 samples, 2.78%)</title><rect x="854.6" y="595.0" width="32.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="857.6" y="606.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (681 samples, 2.72%)</title><rect x="854.9" y="579.0" width="32.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="857.9" y="590.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (652 samples, 2.61%)</title><rect x="856.2" y="563.0" width="30.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="859.2" y="574.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (25 samples, 0.10%)</title><rect x="856.5" y="547.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="859.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (19 samples, 0.08%)</title><rect x="856.7" y="531.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="859.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (19 samples, 0.08%)</title><rect x="856.7" y="515.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="859.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (19 samples, 0.08%)</title><rect x="856.7" y="499.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="859.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (10 samples, 0.04%)</title><rect x="857.2" y="483.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="860.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (8 samples, 0.03%)</title><rect x="857.3" y="467.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="860.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (8 samples, 0.03%)</title><rect x="857.3" y="451.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="860.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (8 samples, 0.03%)</title><rect x="857.3" y="435.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="860.3" y="446.0"></text>
</g>
<g>
<title>java/util/HashSet.add (8 samples, 0.03%)</title><rect x="857.3" y="419.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="860.3" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.put (8 samples, 0.03%)</title><rect x="857.3" y="403.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="860.3" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (8 samples, 0.03%)</title><rect x="857.3" y="387.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="860.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (622 samples, 2.49%)</title><rect x="857.6" y="547.0" width="29.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="860.6" y="558.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (616 samples, 2.46%)</title><rect x="857.9" y="531.0" width="29.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="860.9" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (616 samples, 2.46%)</title><rect x="857.9" y="515.0" width="29.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="860.9" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (612 samples, 2.45%)</title><rect x="858.1" y="499.0" width="28.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="861.1" y="510.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (610 samples, 2.44%)</title><rect x="858.1" y="483.0" width="28.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="861.1" y="494.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (606 samples, 2.42%)</title><rect x="858.3" y="467.0" width="28.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="861.3" y="478.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (606 samples, 2.42%)</title><rect x="858.3" y="451.0" width="28.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="861.3" y="462.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (596 samples, 2.38%)</title><rect x="858.4" y="435.0" width="28.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="861.4" y="446.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (595 samples, 2.38%)</title><rect x="858.4" y="419.0" width="28.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="861.4" y="430.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (588 samples, 2.35%)</title><rect x="858.8" y="403.0" width="27.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="861.8" y="414.0">j..</text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (560 samples, 2.24%)</title><rect x="860.1" y="387.0" width="26.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="863.1" y="398.0">U..</text>
</g>
<g>
<title>Parker::unpark() (6 samples, 0.02%)</title><rect x="860.3" y="371.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="863.3" y="382.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (6 samples, 0.02%)</title><rect x="860.3" y="355.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="863.3" y="366.0"></text>
</g>
<g>
<title>__psynch_mutexwait (6 samples, 0.02%)</title><rect x="860.3" y="339.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="863.3" y="350.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (6 samples, 0.02%)</title><rect x="861.1" y="371.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="864.1" y="382.0"></text>
</g>
<g>
<title>__psynch_cvsignal (512 samples, 2.05%)</title><rect x="861.4" y="371.0" width="24.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="864.4" y="382.0">_..</text>
</g>
<g>
<title>pthread_cond_signal (12 samples, 0.05%)</title><rect x="885.8" y="371.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="888.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (7 samples, 0.03%)</title><rect x="887.1" y="579.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="890.1" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (7 samples, 0.03%)</title><rect x="887.1" y="563.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="890.1" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 0.03%)</title><rect x="887.1" y="547.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="890.1" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 0.03%)</title><rect x="887.1" y="531.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="890.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (7 samples, 0.03%)</title><rect x="887.1" y="515.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="890.1" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (7 samples, 0.03%)</title><rect x="887.1" y="499.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="890.1" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (7 samples, 0.03%)</title><rect x="887.1" y="483.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="890.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (6 samples, 0.02%)</title><rect x="887.4" y="611.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="890.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$180/1993165503.run (943 samples, 3.77%)</title><rect x="887.7" y="707.0" width="44.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="890.7" y="718.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (943 samples, 3.77%)</title><rect x="887.7" y="691.0" width="44.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="890.7" y="702.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (941 samples, 3.76%)</title><rect x="887.8" y="675.0" width="44.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="890.8" y="686.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (941 samples, 3.76%)</title><rect x="887.8" y="659.0" width="44.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="890.8" y="670.0">java..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (938 samples, 3.75%)</title><rect x="887.9" y="643.0" width="44.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="890.9" y="654.0">java..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (938 samples, 3.75%)</title><rect x="887.9" y="627.0" width="44.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="890.9" y="638.0">java..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (929 samples, 3.72%)</title><rect x="888.0" y="611.0" width="43.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="891.0" y="622.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (928 samples, 3.71%)</title><rect x="888.0" y="595.0" width="43.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="891.0" y="606.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (924 samples, 3.70%)</title><rect x="888.2" y="579.0" width="43.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="891.2" y="590.0">jdk/..</text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (898 samples, 3.59%)</title><rect x="889.4" y="563.0" width="42.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="892.4" y="574.0">Unsa..</text>
</g>
<g>
<title>Parker::unpark() (14 samples, 0.06%)</title><rect x="890.2" y="547.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="893.2" y="558.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (14 samples, 0.06%)</title><rect x="890.2" y="531.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="893.2" y="542.0"></text>
</g>
<g>
<title>__psynch_mutexwait (13 samples, 0.05%)</title><rect x="890.2" y="515.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="893.2" y="526.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (10 samples, 0.04%)</title><rect x="891.4" y="547.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="894.4" y="558.0"></text>
</g>
<g>
<title>__psynch_cvsignal (824 samples, 3.30%)</title><rect x="891.9" y="547.0" width="38.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="894.9" y="558.0">__p..</text>
</g>
<g>
<title>pthread_cond_signal (6 samples, 0.02%)</title><rect x="930.9" y="547.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="933.9" y="558.0"></text>
</g>
<g>
<title>pthread_mutex_lock (12 samples, 0.05%)</title><rect x="931.2" y="547.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="934.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (43 samples, 0.17%)</title><rect x="932.2" y="723.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="935.2" y="734.0"></text>
</g>
<g>
<title>java/time/Instant.now (12 samples, 0.05%)</title><rect x="932.2" y="707.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="935.2" y="718.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (12 samples, 0.05%)</title><rect x="932.2" y="691.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="935.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (31 samples, 0.12%)</title><rect x="932.8" y="707.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="935.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (12 samples, 0.05%)</title><rect x="933.7" y="691.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="936.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (11 samples, 0.04%)</title><rect x="934.2" y="723.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="937.2" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (11 samples, 0.04%)</title><rect x="934.2" y="707.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="937.2" y="718.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (11 samples, 0.04%)</title><rect x="934.2" y="691.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="937.2" y="702.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (11 samples, 0.04%)</title><rect x="934.2" y="675.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="937.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (33 samples, 0.13%)</title><rect x="934.7" y="723.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="937.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (64 samples, 0.26%)</title><rect x="936.3" y="723.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="939.3" y="734.0"></text>
</g>
<g>
<title>java/time/Instant.now (20 samples, 0.08%)</title><rect x="936.6" y="707.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="939.6" y="718.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (20 samples, 0.08%)</title><rect x="936.6" y="691.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="939.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (10 samples, 0.04%)</title><rect x="937.1" y="675.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="940.1" y="686.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (8 samples, 0.03%)</title><rect x="937.2" y="659.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="940.2" y="670.0"></text>
</g>
<g>
<title>java/time/Instant.until (6 samples, 0.02%)</title><rect x="937.5" y="707.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="940.5" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (7 samples, 0.03%)</title><rect x="937.8" y="707.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="940.8" y="718.0"></text>
</g>
<g>
<title>java/util/TreeSet.isEmpty (9 samples, 0.04%)</title><rect x="938.4" y="707.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="941.4" y="718.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (8 samples, 0.03%)</title><rect x="938.9" y="707.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="941.9" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (1,617 samples, 6.47%)</title><rect x="939.3" y="723.0" width="76.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="942.3" y="734.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1,616 samples, 6.46%)</title><rect x="939.4" y="707.0" width="76.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="942.4" y="718.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (1,615 samples, 6.46%)</title><rect x="939.4" y="691.0" width="76.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="942.4" y="702.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (1,473 samples, 5.89%)</title><rect x="939.5" y="675.0" width="69.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="942.5" y="686.0">sun/nio..</text>
</g>
<g>
<title>kevent (1,456 samples, 5.82%)</title><rect x="940.3" y="659.0" width="68.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="943.3" y="670.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (128 samples, 0.51%)</title><rect x="1009.0" y="675.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1012.0" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (11 samples, 0.04%)</title><rect x="1009.1" y="659.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1012.1" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (9 samples, 0.04%)</title><rect x="1009.1" y="643.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1012.1" y="654.0"></text>
</g>
<g>
<title>__psynch_cvsignal (8 samples, 0.03%)</title><rect x="1009.1" y="627.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1012.1" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.get (13 samples, 0.05%)</title><rect x="1009.6" y="659.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1012.6" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (13 samples, 0.05%)</title><rect x="1009.6" y="643.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1012.6" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.clearInterrupt (77 samples, 0.31%)</title><rect x="1010.3" y="659.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1013.3" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (75 samples, 0.30%)</title><rect x="1010.3" y="643.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1013.3" y="654.0"></text>
</g>
<g>
<title>read (71 samples, 0.28%)</title><rect x="1010.5" y="627.0" width="3.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1013.5" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (25 samples, 0.10%)</title><rect x="1013.9" y="659.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1016.9" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (13 samples, 0.05%)</title><rect x="1014.2" y="643.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1017.2" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (10 samples, 0.04%)</title><rect x="1015.1" y="675.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1018.1" y="686.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (9 samples, 0.04%)</title><rect x="1015.2" y="659.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1018.2" y="670.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (9 samples, 0.04%)</title><rect x="1015.2" y="643.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1018.2" y="654.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (9 samples, 0.04%)</title><rect x="1015.2" y="627.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1018.2" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (9 samples, 0.04%)</title><rect x="1015.2" y="611.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1018.2" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (56 samples, 0.22%)</title><rect x="1015.6" y="723.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1018.6" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (56 samples, 0.22%)</title><rect x="1015.6" y="707.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1018.6" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (56 samples, 0.22%)</title><rect x="1015.6" y="691.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1018.6" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (46 samples, 0.18%)</title><rect x="1015.6" y="675.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1018.6" y="686.0"></text>
</g>
<g>
<title>kevent (41 samples, 0.16%)</title><rect x="1015.9" y="659.0" width="1.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1018.9" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (8 samples, 0.03%)</title><rect x="1017.8" y="675.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1020.8" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (9 samples, 0.04%)</title><rect x="1018.3" y="723.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1021.3" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (9 samples, 0.04%)</title><rect x="1018.3" y="707.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1021.3" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (6 samples, 0.02%)</title><rect x="1018.4" y="691.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1021.4" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (17 samples, 0.07%)</title><rect x="1018.7" y="723.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1021.7" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (16 samples, 0.06%)</title><rect x="1018.7" y="707.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1021.7" y="718.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,840 samples, 11.36%)</title><rect x="1019.5" y="739.0" width="134.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1022.5" y="750.0">one/nio/server/Se..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.isOpen (7 samples, 0.03%)</title><rect x="1020.1" y="723.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1023.1" y="734.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (1,005 samples, 4.02%)</title><rect x="1020.4" y="723.0" width="47.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1023.4" y="734.0">one/..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (12 samples, 0.05%)</title><rect x="1020.7" y="707.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1023.7" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (983 samples, 3.93%)</title><rect x="1021.3" y="707.0" width="46.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1024.3" y="718.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (976 samples, 3.90%)</title><rect x="1021.7" y="691.0" width="46.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1024.7" y="702.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (975 samples, 3.90%)</title><rect x="1021.7" y="675.0" width="46.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1024.7" y="686.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (908 samples, 3.63%)</title><rect x="1021.7" y="659.0" width="42.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1024.7" y="670.0">sun/..</text>
</g>
<g>
<title>Java_sun_nio_ch_KQueue_poll (7 samples, 0.03%)</title><rect x="1023.4" y="643.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1026.4" y="654.0"></text>
</g>
<g>
<title>kevent (865 samples, 3.46%)</title><rect x="1023.7" y="643.0" width="40.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1026.7" y="654.0">kev..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (27 samples, 0.11%)</title><rect x="1064.6" y="659.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1067.6" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (21 samples, 0.08%)</title><rect x="1064.9" y="643.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1067.9" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.add (13 samples, 0.05%)</title><rect x="1064.9" y="627.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1067.9" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.put (13 samples, 0.05%)</title><rect x="1064.9" y="611.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1067.9" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (13 samples, 0.05%)</title><rect x="1064.9" y="595.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1067.9" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (8 samples, 0.03%)</title><rect x="1065.8" y="659.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1068.8" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (26 samples, 0.10%)</title><rect x="1066.2" y="659.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1069.2" y="670.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (20 samples, 0.08%)</title><rect x="1066.5" y="643.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1069.5" y="654.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (20 samples, 0.08%)</title><rect x="1066.5" y="627.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1069.5" y="638.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (20 samples, 0.08%)</title><rect x="1066.5" y="611.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1069.5" y="622.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (20 samples, 0.08%)</title><rect x="1066.5" y="595.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1069.5" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,812 samples, 7.25%)</title><rect x="1067.8" y="723.0" width="85.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1070.8" y="734.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,812 samples, 7.25%)</title><rect x="1067.8" y="707.0" width="85.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1070.8" y="718.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,634 samples, 6.53%)</title><rect x="1068.0" y="691.0" width="77.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1071.0" y="702.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,566 samples, 6.26%)</title><rect x="1068.3" y="675.0" width="73.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1071.3" y="686.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,566 samples, 6.26%)</title><rect x="1068.3" y="659.0" width="73.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1071.3" y="670.0">one/nio/..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1,524 samples, 6.09%)</title><rect x="1068.3" y="643.0" width="72.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1071.3" y="654.0">RequestH..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (31 samples, 0.12%)</title><rect x="1068.4" y="627.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1071.4" y="638.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (8 samples, 0.03%)</title><rect x="1069.5" y="611.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1072.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/AsyncService.entity (1,491 samples, 5.96%)</title><rect x="1069.9" y="627.0" width="70.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1072.9" y="638.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/pranova/AsyncService.isProxied (8 samples, 0.03%)</title><rect x="1070.0" y="611.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1073.0" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.03%)</title><rect x="1070.0" y="595.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1073.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.execPut (1,481 samples, 5.92%)</title><rect x="1070.4" y="611.0" width="69.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1073.4" y="622.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.execAct (1,481 samples, 5.92%)</title><rect x="1070.4" y="595.0" width="69.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1073.4" y="606.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils.replication (1,240 samples, 4.96%)</title><rect x="1070.8" y="579.0" width="58.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1073.8" y="590.0">ru/mai..</text>
</g>
<g>
<title>java/net/URI.create (135 samples, 0.54%)</title><rect x="1070.9" y="563.0" width="6.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1073.9" y="574.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (135 samples, 0.54%)</title><rect x="1070.9" y="547.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1073.9" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (135 samples, 0.54%)</title><rect x="1070.9" y="531.0" width="6.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1073.9" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChar (29 samples, 0.12%)</title><rect x="1070.9" y="515.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1073.9" y="526.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (6 samples, 0.02%)</title><rect x="1072.0" y="499.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1075.0" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (102 samples, 0.41%)</title><rect x="1072.4" y="515.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1075.4" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (16 samples, 0.06%)</title><rect x="1072.9" y="499.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1075.9" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (16 samples, 0.06%)</title><rect x="1072.9" y="483.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1075.9" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (42 samples, 0.17%)</title><rect x="1073.7" y="499.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1076.7" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (24 samples, 0.10%)</title><rect x="1074.0" y="483.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1077.0" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (6 samples, 0.02%)</title><rect x="1074.0" y="467.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1077.0" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (6 samples, 0.02%)</title><rect x="1074.0" y="451.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1077.0" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (11 samples, 0.04%)</title><rect x="1074.2" y="467.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1077.2" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (6 samples, 0.02%)</title><rect x="1074.5" y="451.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1077.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.charAt (6 samples, 0.02%)</title><rect x="1074.5" y="435.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1077.5" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseIPv4Address (7 samples, 0.03%)</title><rect x="1074.8" y="467.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1077.8" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scanIPv4Address (7 samples, 0.03%)</title><rect x="1074.8" y="451.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1077.8" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (12 samples, 0.05%)</title><rect x="1075.1" y="483.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1078.1" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (34 samples, 0.14%)</title><rect x="1075.7" y="499.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1078.7" y="510.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (26 samples, 0.10%)</title><rect x="1076.0" y="483.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1079.0" y="494.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (26 samples, 0.10%)</title><rect x="1076.0" y="467.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1079.0" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (26 samples, 0.10%)</title><rect x="1076.0" y="451.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1079.0" y="462.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.decode (20 samples, 0.08%)</title><rect x="1077.3" y="563.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1080.3" y="574.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (10 samples, 0.04%)</title><rect x="1077.5" y="547.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1080.5" y="558.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (8 samples, 0.03%)</title><rect x="1077.6" y="531.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1080.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Decoder.decodeLoop (8 samples, 0.03%)</title><rect x="1077.6" y="515.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1080.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (133 samples, 0.53%)</title><rect x="1078.4" y="563.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1081.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (131 samples, 0.52%)</title><rect x="1078.5" y="547.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1081.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (131 samples, 0.52%)</title><rect x="1078.5" y="531.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1081.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (131 samples, 0.52%)</title><rect x="1078.5" y="515.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1081.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (131 samples, 0.52%)</title><rect x="1078.5" y="499.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1081.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (128 samples, 0.51%)</title><rect x="1078.7" y="483.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1081.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (128 samples, 0.51%)</title><rect x="1078.7" y="467.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1081.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (127 samples, 0.51%)</title><rect x="1078.7" y="451.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1081.7" y="462.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (123 samples, 0.49%)</title><rect x="1078.8" y="435.0" width="5.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1081.8" y="446.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (6 samples, 0.02%)</title><rect x="1079.5" y="419.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1082.5" y="430.0"></text>
</g>
<g>
<title>__psynch_cvsignal (95 samples, 0.38%)</title><rect x="1079.9" y="419.0" width="4.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1082.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (13 samples, 0.05%)</title><rect x="1084.7" y="563.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1087.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (12 samples, 0.05%)</title><rect x="1084.8" y="547.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1087.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (786 samples, 3.14%)</title><rect x="1085.3" y="563.0" width="37.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1088.3" y="574.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (786 samples, 3.14%)</title><rect x="1085.3" y="547.0" width="37.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1088.3" y="558.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (786 samples, 3.14%)</title><rect x="1085.3" y="531.0" width="37.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1088.3" y="542.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (783 samples, 3.13%)</title><rect x="1085.5" y="515.0" width="36.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1088.5" y="526.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (8 samples, 0.03%)</title><rect x="1085.7" y="499.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1088.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (7 samples, 0.03%)</title><rect x="1086.1" y="499.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1089.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (7 samples, 0.03%)</title><rect x="1086.1" y="483.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1089.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (327 samples, 1.31%)</title><rect x="1086.5" y="499.0" width="15.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1089.5" y="510.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (7 samples, 0.03%)</title><rect x="1086.6" y="483.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1089.6" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (39 samples, 0.16%)</title><rect x="1086.9" y="483.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1089.9" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (9 samples, 0.04%)</title><rect x="1086.9" y="467.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1089.9" y="478.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (9 samples, 0.04%)</title><rect x="1086.9" y="451.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1089.9" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (9 samples, 0.04%)</title><rect x="1086.9" y="435.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1089.9" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (9 samples, 0.04%)</title><rect x="1086.9" y="419.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1089.9" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (9 samples, 0.04%)</title><rect x="1086.9" y="403.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1089.9" y="414.0"></text>
</g>
<g>
<title>java/util/Collection.stream (13 samples, 0.05%)</title><rect x="1087.4" y="467.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1090.4" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (13 samples, 0.05%)</title><rect x="1087.4" y="451.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1090.4" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (13 samples, 0.05%)</title><rect x="1087.4" y="435.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1090.4" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (17 samples, 0.07%)</title><rect x="1088.0" y="467.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1091.0" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (17 samples, 0.07%)</title><rect x="1088.0" y="451.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1091.0" y="462.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (17 samples, 0.07%)</title><rect x="1088.0" y="435.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1091.0" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (9 samples, 0.04%)</title><rect x="1088.4" y="419.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1091.4" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (7 samples, 0.03%)</title><rect x="1088.4" y="403.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1091.4" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (27 samples, 0.11%)</title><rect x="1088.8" y="483.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1091.8" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (25 samples, 0.10%)</title><rect x="1088.9" y="467.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1091.9" y="478.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (18 samples, 0.07%)</title><rect x="1089.2" y="451.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1092.2" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (16 samples, 0.06%)</title><rect x="1089.3" y="435.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1092.3" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/938808288.accept (15 samples, 0.06%)</title><rect x="1089.3" y="419.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1092.3" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (14 samples, 0.06%)</title><rect x="1089.4" y="403.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1092.4" y="414.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (10 samples, 0.04%)</title><rect x="1089.4" y="387.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1092.4" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$124/787427873.accept (10 samples, 0.04%)</title><rect x="1089.4" y="371.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1092.4" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (10 samples, 0.04%)</title><rect x="1089.4" y="355.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1092.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/495702238.test (10 samples, 0.04%)</title><rect x="1089.4" y="339.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1092.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (7 samples, 0.03%)</title><rect x="1089.6" y="323.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1092.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (243 samples, 0.97%)</title><rect x="1090.1" y="483.0" width="11.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1093.1" y="494.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (243 samples, 0.97%)</title><rect x="1090.1" y="467.0" width="11.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1093.1" y="478.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (6 samples, 0.02%)</title><rect x="1090.2" y="451.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1093.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.02%)</title><rect x="1090.2" y="435.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1093.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.02%)</title><rect x="1090.2" y="419.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1093.2" y="430.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (13 samples, 0.05%)</title><rect x="1090.5" y="451.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1093.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (13 samples, 0.05%)</title><rect x="1090.5" y="435.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1093.5" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (223 samples, 0.89%)</title><rect x="1091.1" y="451.0" width="10.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1094.1" y="462.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (133 samples, 0.53%)</title><rect x="1091.3" y="435.0" width="6.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1094.3" y="446.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (11 samples, 0.04%)</title><rect x="1092.6" y="419.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1095.6" y="430.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (9 samples, 0.04%)</title><rect x="1092.7" y="403.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1095.7" y="414.0"></text>
</g>
<g>
<title>binary_search(Array&lt;Method*&gt; const*, Symbol const*) (8 samples, 0.03%)</title><rect x="1092.7" y="387.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1095.7" y="398.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (23 samples, 0.09%)</title><rect x="1093.2" y="419.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1096.2" y="430.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (11 samples, 0.04%)</title><rect x="1093.4" y="403.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1096.4" y="414.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (17 samples, 0.07%)</title><rect x="1094.3" y="419.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1097.3" y="430.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (13 samples, 0.05%)</title><rect x="1094.3" y="403.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1097.3" y="414.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (6 samples, 0.02%)</title><rect x="1094.3" y="387.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1097.3" y="398.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (39 samples, 0.16%)</title><rect x="1095.8" y="419.0" width="1.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1098.8" y="430.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (13 samples, 0.05%)</title><rect x="1095.9" y="403.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1098.9" y="414.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (8 samples, 0.03%)</title><rect x="1096.1" y="387.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1099.1" y="398.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (24 samples, 0.10%)</title><rect x="1096.5" y="403.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1099.5" y="414.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (8 samples, 0.03%)</title><rect x="1096.7" y="387.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1099.7" y="398.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (7 samples, 0.03%)</title><rect x="1096.7" y="371.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1099.7" y="382.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (7 samples, 0.03%)</title><rect x="1096.7" y="355.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1099.7" y="366.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (12 samples, 0.05%)</title><rect x="1097.0" y="387.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1100.0" y="398.0"></text>
</g>
<g>
<title>call_stub (6 samples, 0.02%)</title><rect x="1098.1" y="435.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1101.1" y="446.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (60 samples, 0.24%)</title><rect x="1098.7" y="435.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1101.7" y="446.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (57 samples, 0.23%)</title><rect x="1098.8" y="419.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1101.8" y="430.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (24 samples, 0.10%)</title><rect x="1099.0" y="403.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1102.0" y="414.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (24 samples, 0.10%)</title><rect x="1099.0" y="387.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1102.0" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (24 samples, 0.10%)</title><rect x="1099.0" y="371.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1102.0" y="382.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (29 samples, 0.12%)</title><rect x="1100.1" y="403.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1103.1" y="414.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (16 samples, 0.06%)</title><rect x="1100.4" y="387.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1103.4" y="398.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (16 samples, 0.06%)</title><rect x="1100.4" y="371.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1103.4" y="382.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (11 samples, 0.04%)</title><rect x="1100.7" y="355.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1103.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (11 samples, 0.04%)</title><rect x="1100.7" y="339.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1103.7" y="350.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (6 samples, 0.02%)</title><rect x="1101.2" y="387.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1104.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (6 samples, 0.02%)</title><rect x="1101.2" y="371.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1104.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (6 samples, 0.02%)</title><rect x="1101.6" y="483.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1104.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (71 samples, 0.28%)</title><rect x="1101.9" y="499.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1104.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (57 samples, 0.23%)</title><rect x="1102.6" y="483.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1105.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (54 samples, 0.22%)</title><rect x="1102.7" y="467.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1105.7" y="478.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (10 samples, 0.04%)</title><rect x="1103.4" y="451.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1106.4" y="462.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (10 samples, 0.04%)</title><rect x="1103.4" y="435.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1106.4" y="446.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (10 samples, 0.04%)</title><rect x="1103.4" y="419.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1106.4" y="430.0"></text>
</g>
<g>
<title>java/lang/Class.reflectionData (6 samples, 0.02%)</title><rect x="1103.5" y="403.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1106.5" y="414.0"></text>
</g>
<g>
<title>java/lang/Class.newReflectionData (6 samples, 0.02%)</title><rect x="1103.5" y="387.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1106.5" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (17 samples, 0.07%)</title><rect x="1103.8" y="451.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1106.8" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (10 samples, 0.04%)</title><rect x="1104.1" y="435.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1107.1" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (10 samples, 0.04%)</title><rect x="1104.1" y="419.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1107.1" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (10 samples, 0.04%)</title><rect x="1104.1" y="403.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1107.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (10 samples, 0.04%)</title><rect x="1104.1" y="387.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1107.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isSameClassPackage (8 samples, 0.03%)</title><rect x="1104.2" y="371.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1107.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (6 samples, 0.02%)</title><rect x="1104.6" y="451.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1107.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (6 samples, 0.02%)</title><rect x="1104.9" y="451.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1107.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (363 samples, 1.45%)</title><rect x="1105.3" y="499.0" width="17.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1108.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (353 samples, 1.41%)</title><rect x="1105.3" y="483.0" width="16.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1108.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (353 samples, 1.41%)</title><rect x="1105.3" y="467.0" width="16.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1108.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (7 samples, 0.03%)</title><rect x="1105.3" y="451.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1108.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (345 samples, 1.38%)</title><rect x="1105.6" y="451.0" width="16.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1108.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (345 samples, 1.38%)</title><rect x="1105.6" y="435.0" width="16.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1108.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (335 samples, 1.34%)</title><rect x="1105.8" y="419.0" width="15.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1108.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (335 samples, 1.34%)</title><rect x="1105.8" y="403.0" width="15.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1108.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (322 samples, 1.29%)</title><rect x="1106.4" y="387.0" width="15.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1109.4" y="398.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (307 samples, 1.23%)</title><rect x="1107.0" y="371.0" width="14.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1110.0" y="382.0"></text>
</g>
<g>
<title>Parker::unpark() (10 samples, 0.04%)</title><rect x="1107.1" y="355.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1110.1" y="366.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (9 samples, 0.04%)</title><rect x="1107.2" y="339.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1110.2" y="350.0"></text>
</g>
<g>
<title>__psynch_mutexwait (9 samples, 0.04%)</title><rect x="1107.2" y="323.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1110.2" y="334.0"></text>
</g>
<g>
<title>Thread::current() (6 samples, 0.02%)</title><rect x="1107.7" y="355.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1110.7" y="366.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (12 samples, 0.05%)</title><rect x="1108.5" y="355.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1111.5" y="366.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (7 samples, 0.03%)</title><rect x="1108.8" y="339.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1111.8" y="350.0"></text>
</g>
<g>
<title>__psynch_cvsignal (250 samples, 1.00%)</title><rect x="1109.1" y="355.0" width="11.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1112.1" y="366.0"></text>
</g>
<g>
<title>pthread_mutex_lock (10 samples, 0.04%)</title><rect x="1121.1" y="355.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1124.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (10 samples, 0.04%)</title><rect x="1122.0" y="483.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1125.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (10 samples, 0.04%)</title><rect x="1122.0" y="467.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1125.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Basic.isMe (9 samples, 0.04%)</title><rect x="1122.4" y="563.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1125.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Basic.isMe (9 samples, 0.04%)</title><rect x="1122.4" y="547.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1125.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Basic.primaryFor (14 samples, 0.06%)</title><rect x="1122.8" y="563.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1125.8" y="574.0"></text>
</g>
<g>
<title>java/util/HashSet.add (10 samples, 0.04%)</title><rect x="1123.0" y="547.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1126.0" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.put (10 samples, 0.04%)</title><rect x="1123.0" y="531.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1126.0" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (10 samples, 0.04%)</title><rect x="1123.0" y="515.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1126.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils.convertRequest (124 samples, 0.50%)</title><rect x="1123.5" y="563.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1126.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (53 samples, 0.21%)</title><rect x="1124.4" y="547.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1127.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (48 samples, 0.19%)</title><rect x="1124.6" y="531.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1127.6" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (46 samples, 0.18%)</title><rect x="1124.6" y="515.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1127.6" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (45 samples, 0.18%)</title><rect x="1124.7" y="499.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1127.7" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (35 samples, 0.14%)</title><rect x="1125.2" y="483.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1128.2" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/938808288.accept (31 samples, 0.12%)</title><rect x="1125.3" y="467.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1128.3" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (29 samples, 0.12%)</title><rect x="1125.3" y="451.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1128.3" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (20 samples, 0.08%)</title><rect x="1125.6" y="435.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1128.6" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$124/787427873.accept (15 samples, 0.06%)</title><rect x="1125.8" y="419.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1128.8" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (15 samples, 0.06%)</title><rect x="1125.8" y="403.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1128.8" y="414.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.02%)</title><rect x="1126.1" y="387.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1129.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (44 samples, 0.18%)</title><rect x="1126.9" y="547.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1129.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (43 samples, 0.17%)</title><rect x="1127.0" y="531.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1130.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (41 samples, 0.16%)</title><rect x="1127.0" y="515.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1130.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (32 samples, 0.13%)</title><rect x="1127.0" y="499.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1130.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$68/409962262.test (24 samples, 0.10%)</title><rect x="1127.0" y="483.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1130.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (24 samples, 0.10%)</title><rect x="1127.0" y="467.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1130.0" y="478.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (24 samples, 0.10%)</title><rect x="1127.0" y="451.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1130.0" y="462.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (22 samples, 0.09%)</title><rect x="1127.1" y="435.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1130.1" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (22 samples, 0.09%)</title><rect x="1127.1" y="419.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1130.1" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (19 samples, 0.08%)</title><rect x="1127.3" y="403.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1130.3" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (19 samples, 0.08%)</title><rect x="1127.3" y="387.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1130.3" y="398.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (19 samples, 0.08%)</title><rect x="1127.3" y="371.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1130.3" y="382.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (19 samples, 0.08%)</title><rect x="1127.3" y="355.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1130.3" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (19 samples, 0.08%)</title><rect x="1127.3" y="339.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1130.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (9 samples, 0.04%)</title><rect x="1128.6" y="499.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1131.6" y="510.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (8 samples, 0.03%)</title><rect x="1128.6" y="483.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1131.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (6 samples, 0.02%)</title><rect x="1129.1" y="547.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1132.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (6 samples, 0.02%)</title><rect x="1129.1" y="531.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1132.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (6 samples, 0.02%)</title><rect x="1129.1" y="515.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1132.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.asyncAct (148 samples, 0.59%)</title><rect x="1129.4" y="579.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1132.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (146 samples, 0.58%)</title><rect x="1129.5" y="563.0" width="6.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1132.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (145 samples, 0.58%)</title><rect x="1129.5" y="547.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1132.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (133 samples, 0.53%)</title><rect x="1129.6" y="531.0" width="6.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1132.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (130 samples, 0.52%)</title><rect x="1129.7" y="515.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1132.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (130 samples, 0.52%)</title><rect x="1129.7" y="499.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1132.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (130 samples, 0.52%)</title><rect x="1129.7" y="483.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1132.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (130 samples, 0.52%)</title><rect x="1129.7" y="467.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1132.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (130 samples, 0.52%)</title><rect x="1129.7" y="451.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1132.7" y="462.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (121 samples, 0.48%)</title><rect x="1130.1" y="435.0" width="5.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1133.1" y="446.0"></text>
</g>
<g>
<title>__psynch_cvsignal (85 samples, 0.34%)</title><rect x="1131.4" y="419.0" width="4.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1134.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.schedule (83 samples, 0.33%)</title><rect x="1136.3" y="579.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1139.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (12 samples, 0.05%)</title><rect x="1136.8" y="563.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1139.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (12 samples, 0.05%)</title><rect x="1136.8" y="547.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1139.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils.collect (47 samples, 0.19%)</title><rect x="1137.4" y="563.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1140.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (8 samples, 0.03%)</title><rect x="1137.6" y="547.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1140.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (8 samples, 0.03%)</title><rect x="1137.6" y="531.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1140.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (34 samples, 0.14%)</title><rect x="1138.0" y="547.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1141.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (25 samples, 0.10%)</title><rect x="1138.4" y="531.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1141.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (17 samples, 0.07%)</title><rect x="1138.4" y="515.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1141.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils$$Lambda$147/1690205539.accept (10 samples, 0.04%)</title><rect x="1138.8" y="499.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1141.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils.lambda$collect$4 (9 samples, 0.04%)</title><rect x="1138.8" y="483.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1141.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.03%)</title><rect x="1139.2" y="515.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1142.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.03%)</title><rect x="1139.2" y="499.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1142.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils.merge (12 samples, 0.05%)</title><rect x="1139.6" y="563.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1142.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (8 samples, 0.03%)</title><rect x="1139.6" y="547.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1142.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (8 samples, 0.03%)</title><rect x="1139.6" y="531.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1142.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.&lt;init&gt; (8 samples, 0.03%)</title><rect x="1139.6" y="515.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1142.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (8 samples, 0.03%)</title><rect x="1139.6" y="499.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1142.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.&lt;init&gt; (8 samples, 0.03%)</title><rect x="1139.6" y="483.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1142.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.&lt;init&gt; (8 samples, 0.03%)</title><rect x="1139.6" y="467.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1142.6" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (10 samples, 0.04%)</title><rect x="1140.3" y="643.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1143.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (14 samples, 0.06%)</title><rect x="1140.7" y="643.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1143.7" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.get (14 samples, 0.06%)</title><rect x="1140.7" y="627.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1143.7" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (9 samples, 0.04%)</title><rect x="1140.7" y="611.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1143.7" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (18 samples, 0.07%)</title><rect x="1141.4" y="643.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1144.4" y="654.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (8 samples, 0.03%)</title><rect x="1141.5" y="627.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1144.5" y="638.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.03%)</title><rect x="1141.9" y="627.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1144.9" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (17 samples, 0.07%)</title><rect x="1142.2" y="675.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1145.2" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (9 samples, 0.04%)</title><rect x="1142.4" y="659.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1145.4" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.04%)</title><rect x="1142.4" y="643.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1145.4" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.04%)</title><rect x="1142.4" y="627.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1145.4" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (9 samples, 0.04%)</title><rect x="1142.4" y="611.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1145.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (37 samples, 0.15%)</title><rect x="1143.3" y="675.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1146.3" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.04%)</title><rect x="1144.6" y="659.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1147.6" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.04%)</title><rect x="1144.6" y="643.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1147.6" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (173 samples, 0.69%)</title><rect x="1145.2" y="691.0" width="8.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1148.2" y="702.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (172 samples, 0.69%)</title><rect x="1145.2" y="675.0" width="8.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1148.2" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (172 samples, 0.69%)</title><rect x="1145.2" y="659.0" width="8.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1148.2" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (166 samples, 0.66%)</title><rect x="1145.5" y="643.0" width="7.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1148.5" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (165 samples, 0.66%)</title><rect x="1145.5" y="627.0" width="7.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1148.5" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (148 samples, 0.59%)</title><rect x="1145.5" y="611.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1148.5" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (148 samples, 0.59%)</title><rect x="1145.5" y="595.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1148.5" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (132 samples, 0.53%)</title><rect x="1146.3" y="579.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1149.3" y="590.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (6 samples, 0.02%)</title><rect x="1146.5" y="563.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1149.5" y="574.0"></text>
</g>
<g>
<title>read (122 samples, 0.49%)</title><rect x="1146.8" y="563.0" width="5.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1149.8" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (17 samples, 0.07%)</title><rect x="1152.5" y="611.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1155.5" y="622.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (6 samples, 0.02%)</title><rect x="1153.6" y="739.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1156.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/LSMDao$Worker.run (605 samples, 2.42%)</title><rect x="1153.9" y="739.0" width="28.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1156.9" y="750.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/LSMDao.flush (605 samples, 2.42%)</title><rect x="1153.9" y="723.0" width="28.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1156.9" y="734.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.write (604 samples, 2.42%)</title><rect x="1153.9" y="707.0" width="28.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1156.9" y="718.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.writeBuffer (390 samples, 1.56%)</title><rect x="1154.4" y="691.0" width="18.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1157.4" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (384 samples, 1.54%)</title><rect x="1154.7" y="675.0" width="18.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1157.7" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (372 samples, 1.49%)</title><rect x="1154.9" y="659.0" width="17.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1157.9" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (368 samples, 1.47%)</title><rect x="1155.1" y="643.0" width="17.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1158.1" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (368 samples, 1.47%)</title><rect x="1155.1" y="627.0" width="17.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1158.1" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (367 samples, 1.47%)</title><rect x="1155.1" y="611.0" width="17.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1158.1" y="622.0"></text>
</g>
<g>
<title>write (351 samples, 1.40%)</title><rect x="1155.9" y="595.0" width="16.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1158.9" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (6 samples, 0.02%)</title><rect x="1172.5" y="659.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1175.5" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (203 samples, 0.81%)</title><rect x="1172.9" y="691.0" width="9.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1175.9" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (197 samples, 0.79%)</title><rect x="1173.0" y="675.0" width="9.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1176.0" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (195 samples, 0.78%)</title><rect x="1173.1" y="659.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1176.1" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (195 samples, 0.78%)</title><rect x="1173.1" y="643.0" width="9.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1176.1" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (195 samples, 0.78%)</title><rect x="1173.1" y="627.0" width="9.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1176.1" y="638.0"></text>
</g>
<g>
<title>write (192 samples, 0.77%)</title><rect x="1173.2" y="611.0" width="9.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1176.2" y="622.0"></text>
</g>
<g>
<title>thread_start (160 samples, 0.64%)</title><rect x="1182.4" y="739.0" width="7.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1185.4" y="750.0"></text>
</g>
<g>
<title>_pthread_start (160 samples, 0.64%)</title><rect x="1182.4" y="723.0" width="7.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1185.4" y="734.0"></text>
</g>
<g>
<title>_pthread_body (160 samples, 0.64%)</title><rect x="1182.4" y="707.0" width="7.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1185.4" y="718.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (160 samples, 0.64%)</title><rect x="1182.4" y="691.0" width="7.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1185.4" y="702.0"></text>
</g>
<g>
<title>GangWorker::loop() (49 samples, 0.20%)</title><rect x="1182.4" y="675.0" width="2.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.4" y="686.0"></text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (16 samples, 0.06%)</title><rect x="1182.4" y="659.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.4" y="670.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (16 samples, 0.06%)</title><rect x="1182.4" y="643.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.4" y="654.0"></text>
</g>
<g>
<title>G1CMBitMap::iterate(G1CMBitMapClosure*, MemRegion) (16 samples, 0.06%)</title><rect x="1182.4" y="627.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.4" y="638.0"></text>
</g>
<g>
<title>G1CMBitMapClosure::do_addr(HeapWord*) (15 samples, 0.06%)</title><rect x="1182.5" y="611.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.5" y="622.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) (10 samples, 0.04%)</title><rect x="1182.5" y="595.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.5" y="606.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (8 samples, 0.03%)</title><rect x="1182.6" y="579.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.6" y="590.0"></text>
</g>
<g>
<title>int oopDesc::oop_iterate_size&lt;G1CMOopClosure&gt;(G1CMOopClosure*) (6 samples, 0.02%)</title><rect x="1182.7" y="563.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1185.7" y="574.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (6 samples, 0.02%)</title><rect x="1182.7" y="547.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.7" y="558.0"></text>
</g>
<g>
<title>void G1CMOopClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (6 samples, 0.02%)</title><rect x="1182.7" y="531.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.7" y="542.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (6 samples, 0.02%)</title><rect x="1182.7" y="515.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1185.7" y="526.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (13 samples, 0.05%)</title><rect x="1183.3" y="659.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.3" y="670.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (8 samples, 0.03%)</title><rect x="1183.3" y="643.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1186.3" y="654.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (8 samples, 0.03%)</title><rect x="1183.3" y="627.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.3" y="638.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (8 samples, 0.03%)</title><rect x="1183.3" y="611.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.3" y="622.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (8 samples, 0.03%)</title><rect x="1183.3" y="595.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.3" y="606.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (7 samples, 0.03%)</title><rect x="1183.3" y="579.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.3" y="590.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (12 samples, 0.05%)</title><rect x="1183.9" y="659.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.9" y="670.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (12 samples, 0.05%)</title><rect x="1183.9" y="643.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.9" y="654.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (12 samples, 0.05%)</title><rect x="1183.9" y="627.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.9" y="638.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::rebuild_rem_set_in_region(G1CMBitMap const*, HeapWord*, HeapWord*, HeapRegion*, MemRegion) (12 samples, 0.05%)</title><rect x="1183.9" y="611.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.9" y="622.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::scan_for_references(oopDesc*, MemRegion) (6 samples, 0.02%)</title><rect x="1184.1" y="595.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.1" y="606.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::worker_wait_for_task() (6 samples, 0.02%)</title><rect x="1184.4" y="659.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.4" y="670.0"></text>
</g>
<g>
<title>__block_descriptor_tmp (6 samples, 0.02%)</title><rect x="1184.4" y="643.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1187.4" y="654.0"></text>
</g>
<g>
<title>JavaThread::run() (78 samples, 0.31%)</title><rect x="1184.8" y="675.0" width="3.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.8" y="686.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (78 samples, 0.31%)</title><rect x="1184.8" y="659.0" width="3.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.8" y="670.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (74 samples, 0.30%)</title><rect x="1184.8" y="643.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.8" y="654.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (74 samples, 0.30%)</title><rect x="1184.8" y="627.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.8" y="638.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (65 samples, 0.26%)</title><rect x="1184.8" y="611.0" width="3.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.8" y="622.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (65 samples, 0.26%)</title><rect x="1184.8" y="595.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.8" y="606.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (40 samples, 0.16%)</title><rect x="1184.8" y="579.0" width="1.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.8" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (26 samples, 0.10%)</title><rect x="1185.5" y="563.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.5" y="574.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (6 samples, 0.02%)</title><rect x="1185.6" y="547.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.6" y="558.0"></text>
</g>
<g>
<title>Compile::Optimize() (14 samples, 0.06%)</title><rect x="1186.7" y="579.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.7" y="590.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (11 samples, 0.04%)</title><rect x="1186.8" y="563.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.8" y="574.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.04%)</title><rect x="1187.4" y="579.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.4" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.04%)</title><rect x="1187.4" y="563.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.4" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (9 samples, 0.04%)</title><rect x="1187.4" y="547.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.4" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (9 samples, 0.04%)</title><rect x="1187.4" y="531.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.4" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.03%)</title><rect x="1187.4" y="515.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.4" y="526.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (6 samples, 0.02%)</title><rect x="1187.9" y="611.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.9" y="622.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (6 samples, 0.02%)</title><rect x="1187.9" y="595.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.9" y="606.0"></text>
</g>
<g>
<title>Compilation::compile_method() (6 samples, 0.02%)</title><rect x="1187.9" y="579.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.9" y="590.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (6 samples, 0.02%)</title><rect x="1187.9" y="563.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.9" y="574.0"></text>
</g>
<g>
<title>VMThread::run() (32 samples, 0.13%)</title><rect x="1188.4" y="675.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.4" y="686.0"></text>
</g>
<g>
<title>VMThread::loop() (32 samples, 0.13%)</title><rect x="1188.4" y="659.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.4" y="670.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (29 samples, 0.12%)</title><rect x="1188.6" y="643.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.6" y="654.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (29 samples, 0.12%)</title><rect x="1188.6" y="627.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.6" y="638.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (29 samples, 0.12%)</title><rect x="1188.6" y="611.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.6" y="622.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (27 samples, 0.11%)</title><rect x="1188.6" y="595.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.6" y="606.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&amp;, G1ParScanThreadStateSet*) (16 samples, 0.06%)</title><rect x="1188.9" y="579.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.9" y="590.0"></text>
</g>
<g>
<title>DerivedPointerTable::update_pointers() (10 samples, 0.04%)</title><rect x="1188.9" y="563.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.9" y="574.0"></text>
</g>
</g>
</svg>
