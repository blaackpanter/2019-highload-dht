<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (508,144 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (332,457 samples, 65.43%)</title><rect x="10.0" y="691.0" width="772.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (332,457 samples, 65.43%)</title><rect x="10.0" y="675.0" width="772.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (332,457 samples, 65.43%)</title><rect x="10.0" y="659.0" width="772.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (144,893 samples, 28.51%)</title><rect x="10.0" y="643.0" width="336.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/util/concurrent/CompletableFuture$AsyncSu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (144,893 samples, 28.51%)</title><rect x="10.0" y="627.0" width="336.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="638.0">java/util/concurrent/CompletableFuture.postCom..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (144,893 samples, 28.51%)</title><rect x="10.0" y="611.0" width="336.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="622.0">java/util/concurrent/CompletableFuture$UniComp..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (640 samples, 0.13%)</title><rect x="10.0" y="595.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$138/1830298872.apply (144,252 samples, 28.39%)</title><rect x="11.5" y="595.0" width="335.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="14.5" y="606.0">jdk/internal/net/http/MultiExchange$$Lambda$1..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$1 (144,252 samples, 28.39%)</title><rect x="11.5" y="579.0" width="335.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="14.5" y="590.0">jdk/internal/net/http/MultiExchange.lambda$re..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (144,252 samples, 28.39%)</title><rect x="11.5" y="563.0" width="335.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="14.5" y="574.0">jdk/internal/net/http/MultiExchange.responseA..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (831 samples, 0.16%)</title><rect x="11.5" y="547.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="14.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (831 samples, 0.16%)</title><rect x="11.5" y="531.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="14.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$325/1323411580.get$Lambda (498 samples, 0.10%)</title><rect x="11.5" y="515.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="14.5" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$325 (498 samples, 0.10%)</title><rect x="11.5" y="499.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="14.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$327/1389098907.get$Lambda (333 samples, 0.07%)</title><rect x="12.6" y="515.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="15.6" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$327 (333 samples, 0.07%)</title><rect x="12.6" y="499.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="15.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1,360 samples, 0.27%)</title><rect x="13.4" y="547.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="16.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1,360 samples, 0.27%)</title><rect x="13.4" y="531.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="16.4" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (732 samples, 0.14%)</title><rect x="13.4" y="515.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="16.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (628 samples, 0.12%)</title><rect x="15.1" y="515.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (628 samples, 0.12%)</title><rect x="15.1" y="499.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="18.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (628 samples, 0.12%)</title><rect x="15.1" y="483.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="18.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2,891 samples, 0.57%)</title><rect x="16.6" y="547.0" width="6.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="19.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2,891 samples, 0.57%)</title><rect x="16.6" y="531.0" width="6.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="19.6" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (1,622 samples, 0.32%)</title><rect x="16.6" y="515.0" width="3.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="19.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,269 samples, 0.25%)</title><rect x="20.3" y="515.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="23.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,269 samples, 0.25%)</title><rect x="20.3" y="499.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="23.3" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,269 samples, 0.25%)</title><rect x="20.3" y="483.0" width="3.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="23.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (134,802 samples, 26.53%)</title><rect x="23.3" y="547.0" width="313.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="26.3" y="558.0">jdk/internal/net/http/Exchange.responseAsync</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (134,802 samples, 26.53%)</title><rect x="23.3" y="531.0" width="313.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="26.3" y="542.0">jdk/internal/net/http/Exchange.responseAsy..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (134,802 samples, 26.53%)</title><rect x="23.3" y="515.0" width="313.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="26.3" y="526.0">jdk/internal/net/http/Exchange.responseAsy..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,304 samples, 0.26%)</title><rect x="23.3" y="499.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="26.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,304 samples, 0.26%)</title><rect x="23.3" y="483.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="26.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$172/833586384.get$Lambda (352 samples, 0.07%)</title><rect x="23.3" y="467.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="26.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$172 (352 samples, 0.07%)</title><rect x="23.3" y="451.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="26.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$176/1063808149.get$Lambda (529 samples, 0.10%)</title><rect x="24.1" y="467.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$176 (529 samples, 0.10%)</title><rect x="24.1" y="451.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="27.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$275/177507225.get$Lambda (423 samples, 0.08%)</title><rect x="25.3" y="467.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="28.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$275 (423 samples, 0.08%)</title><rect x="25.3" y="451.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="28.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (87,239 samples, 17.17%)</title><rect x="26.3" y="499.0" width="202.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="29.3" y="510.0">java/util/concurrent/Compl..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (87,239 samples, 17.17%)</title><rect x="26.3" y="483.0" width="202.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="29.3" y="494.0">java/util/concurrent/Compl..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (86,625 samples, 17.05%)</title><rect x="26.3" y="467.0" width="201.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="29.3" y="478.0">java/util/concurrent/Compl..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$275/177507225.apply (86,625 samples, 17.05%)</title><rect x="26.3" y="451.0" width="201.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="29.3" y="462.0">jdk/internal/net/http/Exch..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (86,625 samples, 17.05%)</title><rect x="26.3" y="435.0" width="201.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="29.3" y="446.0">jdk/internal/net/http/Exch..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (86,625 samples, 17.05%)</title><rect x="26.3" y="419.0" width="201.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="29.3" y="430.0">jdk/internal/net/http/Exch..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$176/1063808149.apply (86,625 samples, 17.05%)</title><rect x="26.3" y="403.0" width="201.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="29.3" y="414.0">jdk/internal/net/http/Exch..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (86,625 samples, 17.05%)</title><rect x="26.3" y="387.0" width="201.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="29.3" y="398.0">jdk/internal/net/http/Exch..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,048 samples, 0.21%)</title><rect x="26.3" y="371.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="29.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,048 samples, 0.21%)</title><rect x="26.3" y="355.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="29.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$321/493893851.get$Lambda (1,048 samples, 0.21%)</title><rect x="26.3" y="339.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="29.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$321 (1,048 samples, 0.21%)</title><rect x="26.3" y="323.0" width="2.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="29.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2,520 samples, 0.50%)</title><rect x="28.8" y="371.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="31.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2,520 samples, 0.50%)</title><rect x="28.8" y="355.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="31.8" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (1,173 samples, 0.23%)</title><rect x="28.8" y="339.0" width="2.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="31.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,274 samples, 0.25%)</title><rect x="31.6" y="339.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="34.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,274 samples, 0.25%)</title><rect x="31.6" y="323.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="34.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,274 samples, 0.25%)</title><rect x="31.6" y="307.0" width="3.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="34.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,467 samples, 0.29%)</title><rect x="34.6" y="371.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="37.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,467 samples, 0.29%)</title><rect x="34.6" y="355.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="37.6" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (790 samples, 0.16%)</title><rect x="34.6" y="339.0" width="1.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="37.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (676 samples, 0.13%)</title><rect x="36.4" y="339.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="39.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (676 samples, 0.13%)</title><rect x="36.4" y="323.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (676 samples, 0.13%)</title><rect x="36.4" y="307.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="39.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (81,590 samples, 16.06%)</title><rect x="38.0" y="371.0" width="189.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="41.0" y="382.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (887 samples, 0.17%)</title><rect x="38.0" y="355.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="41.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (887 samples, 0.17%)</title><rect x="38.0" y="339.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="41.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$315/748057916.get$Lambda (323 samples, 0.06%)</title><rect x="38.0" y="323.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="41.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$315 (323 samples, 0.06%)</title><rect x="38.0" y="307.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="41.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$317/47341936.get$Lambda (564 samples, 0.11%)</title><rect x="38.8" y="323.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="41.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$317 (564 samples, 0.11%)</title><rect x="38.8" y="307.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="41.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (70,597 samples, 13.89%)</title><rect x="40.1" y="355.0" width="163.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="43.1" y="366.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (70,597 samples, 13.89%)</title><rect x="40.1" y="339.0" width="163.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="43.1" y="350.0">java/util/concurrent/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (1,154 samples, 0.23%)</title><rect x="40.1" y="323.0" width="2.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="43.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$315/748057916.apply (67,732 samples, 13.33%)</title><rect x="42.7" y="323.0" width="157.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="45.7" y="334.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (67,732 samples, 13.33%)</title><rect x="42.7" y="307.0" width="157.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="45.7" y="318.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (287 samples, 0.06%)</title><rect x="42.7" y="291.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="45.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (287 samples, 0.06%)</title><rect x="42.7" y="275.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="45.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$358/605541379.get$Lambda (287 samples, 0.06%)</title><rect x="42.7" y="259.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="45.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$358 (287 samples, 0.06%)</title><rect x="42.7" y="243.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="45.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,396 samples, 0.27%)</title><rect x="43.4" y="291.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="46.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,396 samples, 0.27%)</title><rect x="43.4" y="275.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="46.4" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (723 samples, 0.14%)</title><rect x="43.4" y="259.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="46.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (673 samples, 0.13%)</title><rect x="45.1" y="259.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="48.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (673 samples, 0.13%)</title><rect x="45.1" y="243.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.1" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (673 samples, 0.13%)</title><rect x="45.1" y="227.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="48.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (630 samples, 0.12%)</title><rect x="46.7" y="291.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="49.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1,352 samples, 0.27%)</title><rect x="48.1" y="291.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="51.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (625 samples, 0.12%)</title><rect x="48.1" y="275.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="51.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (727 samples, 0.14%)</title><rect x="49.6" y="275.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="52.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (594 samples, 0.12%)</title><rect x="49.6" y="259.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="52.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (594 samples, 0.12%)</title><rect x="49.6" y="243.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="52.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (594 samples, 0.12%)</title><rect x="49.6" y="227.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="52.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (594 samples, 0.12%)</title><rect x="49.6" y="211.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="52.6" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (594 samples, 0.12%)</title><rect x="49.6" y="195.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="52.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (133 samples, 0.03%)</title><rect x="51.0" y="259.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="54.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (133 samples, 0.03%)</title><rect x="51.0" y="243.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="54.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (133 samples, 0.03%)</title><rect x="51.0" y="227.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="54.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (133 samples, 0.03%)</title><rect x="51.0" y="211.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (133 samples, 0.03%)</title><rect x="51.0" y="195.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="54.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (133 samples, 0.03%)</title><rect x="51.0" y="179.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="54.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (1,627 samples, 0.32%)</title><rect x="51.3" y="291.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="54.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1,627 samples, 0.32%)</title><rect x="51.3" y="275.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="54.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (460 samples, 0.09%)</title><rect x="51.3" y="259.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (460 samples, 0.09%)</title><rect x="51.3" y="243.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="54.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (460 samples, 0.09%)</title><rect x="51.3" y="227.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="54.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (460 samples, 0.09%)</title><rect x="51.3" y="211.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="54.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (1,167 samples, 0.23%)</title><rect x="52.3" y="259.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="55.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (1,167 samples, 0.23%)</title><rect x="52.3" y="243.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="55.3" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (855 samples, 0.17%)</title><rect x="52.3" y="227.0" width="2.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="55.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (312 samples, 0.06%)</title><rect x="54.3" y="227.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="57.3" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (312 samples, 0.06%)</title><rect x="54.3" y="211.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="57.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (62,440 samples, 12.29%)</title><rect x="55.0" y="291.0" width="145.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="58.0" y="302.0">jdk/internal/net/h..</text>
</g>
<g>
<title>java.lang.StringBuilder (470 samples, 0.09%)</title><rect x="55.0" y="275.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="58.0" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (7,315 samples, 1.44%)</title><rect x="56.1" y="275.0" width="17.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="59.1" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (7,315 samples, 1.44%)</title><rect x="56.1" y="259.0" width="17.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="59.1" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (7,315 samples, 1.44%)</title><rect x="56.1" y="243.0" width="17.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="59.1" y="254.0"></text>
</g>
<g>
<title>byte[] (4,126 samples, 0.81%)</title><rect x="56.1" y="227.0" width="9.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="59.1" y="238.0"></text>
</g>
<g>
<title>byte[] (3,189 samples, 0.63%)</title><rect x="65.7" y="227.0" width="7.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="68.7" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1,590 samples, 0.31%)</title><rect x="73.1" y="275.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="76.1" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1,590 samples, 0.31%)</title><rect x="73.1" y="259.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="76.1" y="270.0"></text>
</g>
<g>
<title>byte[] (1,534 samples, 0.30%)</title><rect x="73.1" y="243.0" width="3.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="76.1" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (6,999 samples, 1.38%)</title><rect x="76.8" y="275.0" width="16.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="79.8" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6,999 samples, 1.38%)</title><rect x="76.8" y="259.0" width="16.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="79.8" y="270.0"></text>
</g>
<g>
<title>java.lang.String (760 samples, 0.15%)</title><rect x="76.8" y="243.0" width="1.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="79.8" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6,239 samples, 1.23%)</title><rect x="78.6" y="243.0" width="14.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="81.6" y="254.0"></text>
</g>
<g>
<title>byte[] (4,359 samples, 0.86%)</title><rect x="78.6" y="227.0" width="10.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="81.6" y="238.0"></text>
</g>
<g>
<title>byte[] (1,880 samples, 0.37%)</title><rect x="88.7" y="227.0" width="4.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="91.7" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (981 samples, 0.19%)</title><rect x="93.1" y="275.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="96.1" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (981 samples, 0.19%)</title><rect x="93.1" y="259.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="96.1" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (981 samples, 0.19%)</title><rect x="93.1" y="243.0" width="2.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="96.1" y="254.0"></text>
</g>
<g>
<title>java/util/List.of (497 samples, 0.10%)</title><rect x="95.3" y="275.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="98.3" y="286.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (497 samples, 0.10%)</title><rect x="95.3" y="259.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="98.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (37,795 samples, 7.44%)</title><rect x="96.5" y="275.0" width="87.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="99.5" y="286.0">jdk/intern..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (477 samples, 0.09%)</title><rect x="96.5" y="259.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="99.5" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (477 samples, 0.09%)</title><rect x="96.5" y="243.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="99.5" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (477 samples, 0.09%)</title><rect x="96.5" y="227.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="99.5" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$374/561363468.get$Lambda (477 samples, 0.09%)</title><rect x="96.5" y="211.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="99.5" y="222.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$374 (477 samples, 0.09%)</title><rect x="96.5" y="195.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="99.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (18,372 samples, 3.62%)</title><rect x="97.6" y="259.0" width="42.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="100.6" y="270.0">jdk/..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (8,915 samples, 1.75%)</title><rect x="97.6" y="243.0" width="20.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="100.6" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (8,915 samples, 1.75%)</title><rect x="97.6" y="227.0" width="20.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="100.6" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (8,915 samples, 1.75%)</title><rect x="97.6" y="211.0" width="20.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="100.6" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8,915 samples, 1.75%)</title><rect x="97.6" y="195.0" width="20.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="100.6" y="206.0"></text>
</g>
<g>
<title>byte[] (6,612 samples, 1.30%)</title><rect x="97.6" y="179.0" width="15.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="100.6" y="190.0"></text>
</g>
<g>
<title>byte[] (2,303 samples, 0.45%)</title><rect x="113.0" y="179.0" width="5.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="116.0" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (1,533 samples, 0.30%)</title><rect x="118.3" y="243.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="121.3" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (1,533 samples, 0.30%)</title><rect x="118.3" y="227.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="121.3" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (1,533 samples, 0.30%)</title><rect x="118.3" y="211.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="121.3" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (1,533 samples, 0.30%)</title><rect x="118.3" y="195.0" width="3.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="121.3" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (1,510 samples, 0.30%)</title><rect x="121.9" y="243.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.9" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (722 samples, 0.14%)</title><rect x="121.9" y="227.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="124.9" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (788 samples, 0.16%)</title><rect x="123.5" y="227.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="126.5" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (788 samples, 0.16%)</title><rect x="123.5" y="211.0" width="1.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="126.5" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$374/561363468.test (6,414 samples, 1.26%)</title><rect x="125.4" y="243.0" width="14.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="128.4" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (6,414 samples, 1.26%)</title><rect x="125.4" y="227.0" width="14.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="128.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/119290689.test (6,414 samples, 1.26%)</title><rect x="125.4" y="211.0" width="14.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="128.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (6,414 samples, 1.26%)</title><rect x="125.4" y="195.0" width="14.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="128.4" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$71/917831210.test (6,414 samples, 1.26%)</title><rect x="125.4" y="179.0" width="14.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="128.4" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (6,414 samples, 1.26%)</title><rect x="125.4" y="163.0" width="14.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="128.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$70/298430307.test (6,414 samples, 1.26%)</title><rect x="125.4" y="147.0" width="14.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="128.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (6,414 samples, 1.26%)</title><rect x="125.4" y="131.0" width="14.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="128.4" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (6,414 samples, 1.26%)</title><rect x="125.4" y="115.0" width="14.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="128.4" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6,414 samples, 1.26%)</title><rect x="125.4" y="99.0" width="14.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="128.4" y="110.0"></text>
</g>
<g>
<title>java.lang.String (3,204 samples, 0.63%)</title><rect x="125.4" y="83.0" width="7.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="128.4" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,210 samples, 0.63%)</title><rect x="132.8" y="83.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="135.8" y="94.0"></text>
</g>
<g>
<title>byte[] (3,210 samples, 0.63%)</title><rect x="132.8" y="67.0" width="7.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="135.8" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (18,946 samples, 3.73%)</title><rect x="140.3" y="259.0" width="44.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="143.3" y="270.0">jdk/..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (18,946 samples, 3.73%)</title><rect x="140.3" y="243.0" width="44.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="143.3" y="254.0">java..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (18,946 samples, 3.73%)</title><rect x="140.3" y="227.0" width="44.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="143.3" y="238.0">java..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (300 samples, 0.06%)</title><rect x="140.3" y="211.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="143.3" y="222.0"></text>
</g>
<g>
<title>java.util.ArrayList (501 samples, 0.10%)</title><rect x="141.0" y="211.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="144.0" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (995 samples, 0.20%)</title><rect x="142.1" y="211.0" width="2.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="145.1" y="222.0"></text>
</g>
<g>
<title>java.util.TreeSet (346 samples, 0.07%)</title><rect x="144.4" y="211.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="147.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (672 samples, 0.13%)</title><rect x="145.2" y="211.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="148.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (672 samples, 0.13%)</title><rect x="145.2" y="195.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="148.2" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1284541460.get$Lambda (672 samples, 0.13%)</title><rect x="145.2" y="179.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="148.2" y="190.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (672 samples, 0.13%)</title><rect x="145.2" y="163.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="148.2" y="174.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (649 samples, 0.13%)</title><rect x="146.8" y="211.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="149.8" y="222.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (649 samples, 0.13%)</title><rect x="146.8" y="195.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="149.8" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (14,546 samples, 2.86%)</title><rect x="148.3" y="211.0" width="33.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="151.3" y="222.0">ja..</text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1284541460.accept (14,546 samples, 2.86%)</title><rect x="148.3" y="195.0" width="33.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="151.3" y="206.0">ja..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (14,546 samples, 2.86%)</title><rect x="148.3" y="179.0" width="33.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="151.3" y="190.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,824 samples, 0.56%)</title><rect x="148.3" y="163.0" width="6.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="151.3" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,824 samples, 0.56%)</title><rect x="148.3" y="147.0" width="6.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="151.3" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$127/1726426466.get$Lambda (2,824 samples, 0.56%)</title><rect x="148.3" y="131.0" width="6.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="151.3" y="142.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$127 (2,824 samples, 0.56%)</title><rect x="148.3" y="115.0" width="6.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="151.3" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,180 samples, 0.23%)</title><rect x="154.9" y="163.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="157.9" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$127/1726426466.accept (1,180 samples, 0.23%)</title><rect x="154.9" y="147.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="157.9" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1,180 samples, 0.23%)</title><rect x="154.9" y="131.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="157.9" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,180 samples, 0.23%)</title><rect x="154.9" y="115.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="157.9" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,180 samples, 0.23%)</title><rect x="154.9" y="99.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="157.9" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,180 samples, 0.23%)</title><rect x="154.9" y="83.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="157.9" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,180 samples, 0.23%)</title><rect x="154.9" y="67.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="157.9" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,180 samples, 0.23%)</title><rect x="154.9" y="51.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="157.9" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,165 samples, 0.23%)</title><rect x="154.9" y="35.0" width="2.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="157.9" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (5,770 samples, 1.14%)</title><rect x="157.6" y="163.0" width="13.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="160.6" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (5,770 samples, 1.14%)</title><rect x="157.6" y="147.0" width="13.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="160.6" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (2,906 samples, 0.57%)</title><rect x="157.6" y="131.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="160.6" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,906 samples, 0.57%)</title><rect x="157.6" y="115.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="160.6" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (2,906 samples, 0.57%)</title><rect x="157.6" y="99.0" width="6.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="160.6" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (2,864 samples, 0.56%)</title><rect x="164.4" y="131.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="167.4" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (2,864 samples, 0.56%)</title><rect x="164.4" y="115.0" width="6.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="167.4" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4,772 samples, 0.94%)</title><rect x="171.0" y="163.0" width="11.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="174.0" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (4,772 samples, 0.94%)</title><rect x="171.0" y="147.0" width="11.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="174.0" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (937 samples, 0.18%)</title><rect x="182.1" y="211.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="185.1" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (937 samples, 0.18%)</title><rect x="182.1" y="195.0" width="2.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="185.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (1,592 samples, 0.31%)</title><rect x="184.3" y="275.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="187.3" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (472 samples, 0.09%)</title><rect x="184.3" y="259.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="187.3" y="270.0"></text>
</g>
<g>
<title>byte[] (472 samples, 0.09%)</title><rect x="184.3" y="243.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="187.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,120 samples, 0.22%)</title><rect x="185.4" y="259.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="188.4" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1,120 samples, 0.22%)</title><rect x="185.4" y="243.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="188.4" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/7967307.invoke (1,120 samples, 0.22%)</title><rect x="185.4" y="227.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="188.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,120 samples, 0.22%)</title><rect x="185.4" y="211.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="188.4" y="222.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (498 samples, 0.10%)</title><rect x="185.4" y="195.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="188.4" y="206.0"></text>
</g>
<g>
<title>java.lang.String (498 samples, 0.10%)</title><rect x="185.4" y="179.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="188.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (622 samples, 0.12%)</title><rect x="186.5" y="195.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="189.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (622 samples, 0.12%)</title><rect x="186.5" y="179.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="189.5" y="190.0"></text>
</g>
<g>
<title>byte[] (622 samples, 0.12%)</title><rect x="186.5" y="163.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="189.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (1,606 samples, 0.32%)</title><rect x="188.0" y="275.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="191.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (1,606 samples, 0.32%)</title><rect x="188.0" y="259.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="191.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,606 samples, 0.32%)</title><rect x="188.0" y="243.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="191.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1,606 samples, 0.32%)</title><rect x="188.0" y="227.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="191.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/7967307.invoke (1,606 samples, 0.32%)</title><rect x="188.0" y="211.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="191.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,606 samples, 0.32%)</title><rect x="188.0" y="195.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="191.0" y="206.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (466 samples, 0.09%)</title><rect x="188.0" y="179.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="191.0" y="190.0"></text>
</g>
<g>
<title>java.lang.String (466 samples, 0.09%)</title><rect x="188.0" y="163.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="191.0" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1,140 samples, 0.22%)</title><rect x="189.0" y="179.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="192.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1,140 samples, 0.22%)</title><rect x="189.0" y="163.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="192.0" y="174.0"></text>
</g>
<g>
<title>byte[] (1,138 samples, 0.22%)</title><rect x="189.0" y="147.0" width="2.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="192.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (3,595 samples, 0.71%)</title><rect x="191.7" y="275.0" width="8.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="194.7" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (983 samples, 0.19%)</title><rect x="191.7" y="259.0" width="2.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="194.7" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (928 samples, 0.18%)</title><rect x="194.0" y="259.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="197.0" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (928 samples, 0.18%)</title><rect x="194.0" y="243.0" width="2.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="197.0" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,684 samples, 0.33%)</title><rect x="196.1" y="259.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="199.1" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,684 samples, 0.33%)</title><rect x="196.1" y="243.0" width="3.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="199.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,711 samples, 0.34%)</title><rect x="200.0" y="323.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="203.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,711 samples, 0.34%)</title><rect x="200.0" y="307.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="203.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,711 samples, 0.34%)</title><rect x="200.0" y="291.0" width="4.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="203.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (1,632 samples, 0.32%)</title><rect x="204.0" y="355.0" width="3.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="207.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (618 samples, 0.12%)</title><rect x="208.0" y="355.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="211.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (7,775 samples, 1.53%)</title><rect x="209.4" y="355.0" width="18.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="212.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (654 samples, 0.13%)</title><rect x="209.4" y="339.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="212.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (654 samples, 0.13%)</title><rect x="209.4" y="323.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="212.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/414125977.get$Lambda (335 samples, 0.07%)</title><rect x="209.4" y="307.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="212.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$288 (335 samples, 0.07%)</title><rect x="209.4" y="291.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="212.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$290/799483436.get$Lambda (319 samples, 0.06%)</title><rect x="210.2" y="307.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="213.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$290 (319 samples, 0.06%)</title><rect x="210.2" y="291.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="213.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (759 samples, 0.15%)</title><rect x="210.9" y="339.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="213.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (668 samples, 0.13%)</title><rect x="212.7" y="339.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="215.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (843 samples, 0.17%)</title><rect x="214.3" y="339.0" width="1.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="217.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (2,219 samples, 0.44%)</title><rect x="216.2" y="339.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="219.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2,219 samples, 0.44%)</title><rect x="216.2" y="323.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="219.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2,219 samples, 0.44%)</title><rect x="216.2" y="307.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="219.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2,219 samples, 0.44%)</title><rect x="216.2" y="291.0" width="5.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="219.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2,219 samples, 0.44%)</title><rect x="216.2" y="275.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="219.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2,219 samples, 0.44%)</title><rect x="216.2" y="259.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="219.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$257/2141450187.run (2,219 samples, 0.44%)</title><rect x="216.2" y="243.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="219.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2,219 samples, 0.44%)</title><rect x="216.2" y="227.0" width="5.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="219.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2,219 samples, 0.44%)</title><rect x="216.2" y="211.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="219.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (786 samples, 0.15%)</title><rect x="216.2" y="195.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="219.2" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (786 samples, 0.15%)</title><rect x="216.2" y="179.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="219.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$294/1409719001.get$Lambda (349 samples, 0.07%)</title><rect x="216.2" y="163.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="219.2" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$294 (349 samples, 0.07%)</title><rect x="216.2" y="147.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="219.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$299/945266435.get$Lambda (437 samples, 0.09%)</title><rect x="217.0" y="163.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="220.0" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$299 (437 samples, 0.09%)</title><rect x="217.0" y="147.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="220.0" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (662 samples, 0.13%)</title><rect x="218.0" y="195.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="221.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (771 samples, 0.15%)</title><rect x="219.6" y="195.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="222.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (771 samples, 0.15%)</title><rect x="219.6" y="179.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="222.6" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (295 samples, 0.06%)</title><rect x="219.6" y="163.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="222.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (476 samples, 0.09%)</title><rect x="220.3" y="163.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="223.3" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (476 samples, 0.09%)</title><rect x="220.3" y="147.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="223.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (2,008 samples, 0.40%)</title><rect x="221.4" y="339.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="224.4" y="350.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (443 samples, 0.09%)</title><rect x="221.4" y="323.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="224.4" y="334.0"></text>
</g>
<g>
<title>java.util.HashMap (943 samples, 0.19%)</title><rect x="222.4" y="323.0" width="2.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="225.4" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (622 samples, 0.12%)</title><rect x="224.6" y="323.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="227.6" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (622 samples, 0.12%)</title><rect x="224.6" y="307.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="227.6" y="318.0"></text>
</g>
<g>
<title>byte[] (622 samples, 0.12%)</title><rect x="224.6" y="291.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="227.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (624 samples, 0.12%)</title><rect x="226.0" y="339.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="229.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (624 samples, 0.12%)</title><rect x="226.0" y="323.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="229.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (614 samples, 0.12%)</title><rect x="227.5" y="467.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="230.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (614 samples, 0.12%)</title><rect x="227.5" y="451.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="230.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (614 samples, 0.12%)</title><rect x="227.5" y="435.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="230.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,339 samples, 0.26%)</title><rect x="228.9" y="499.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="231.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,339 samples, 0.26%)</title><rect x="228.9" y="483.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="231.9" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (679 samples, 0.13%)</title><rect x="228.9" y="467.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="231.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (660 samples, 0.13%)</title><rect x="230.5" y="467.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="233.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (660 samples, 0.13%)</title><rect x="230.5" y="451.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="233.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (660 samples, 0.13%)</title><rect x="230.5" y="435.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="233.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (44,920 samples, 8.84%)</title><rect x="232.0" y="499.0" width="104.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="235.0" y="510.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (825 samples, 0.16%)</title><rect x="232.0" y="483.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="235.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (825 samples, 0.16%)</title><rect x="232.0" y="467.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="235.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$268/1764217902.get$Lambda (493 samples, 0.10%)</title><rect x="232.0" y="451.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="235.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$268 (493 samples, 0.10%)</title><rect x="232.0" y="435.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="235.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$271/825242236.get$Lambda (332 samples, 0.07%)</title><rect x="233.2" y="451.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="236.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$271 (332 samples, 0.07%)</title><rect x="233.2" y="435.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="236.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,329 samples, 0.26%)</title><rect x="233.9" y="483.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="236.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,329 samples, 0.26%)</title><rect x="233.9" y="467.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="236.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$271/825242236.apply (646 samples, 0.13%)</title><rect x="233.9" y="451.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="236.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (646 samples, 0.13%)</title><rect x="233.9" y="435.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="236.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (646 samples, 0.13%)</title><rect x="233.9" y="419.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="236.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (646 samples, 0.13%)</title><rect x="233.9" y="403.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="236.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (683 samples, 0.13%)</title><rect x="235.4" y="451.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="238.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (683 samples, 0.13%)</title><rect x="235.4" y="435.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="238.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (683 samples, 0.13%)</title><rect x="235.4" y="419.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="238.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (645 samples, 0.13%)</title><rect x="237.0" y="483.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="240.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (645 samples, 0.13%)</title><rect x="237.0" y="467.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="240.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (645 samples, 0.13%)</title><rect x="237.0" y="451.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="240.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (645 samples, 0.13%)</title><rect x="237.0" y="435.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="240.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (645 samples, 0.13%)</title><rect x="237.0" y="419.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="240.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (42,121 samples, 8.29%)</title><rect x="238.5" y="483.0" width="97.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="241.5" y="494.0">jdk/interna..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (494 samples, 0.10%)</title><rect x="238.5" y="467.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="241.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (494 samples, 0.10%)</title><rect x="238.5" y="451.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="241.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$186/955650005.get$Lambda (494 samples, 0.10%)</title><rect x="238.5" y="435.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="241.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$186 (494 samples, 0.10%)</title><rect x="238.5" y="419.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="241.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (39,098 samples, 7.69%)</title><rect x="239.7" y="467.0" width="90.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="242.7" y="478.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (39,098 samples, 7.69%)</title><rect x="239.7" y="451.0" width="90.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="242.7" y="462.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (38,466 samples, 7.57%)</title><rect x="239.7" y="435.0" width="89.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="242.7" y="446.0">java/util/..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$186/955650005.apply (38,466 samples, 7.57%)</title><rect x="239.7" y="419.0" width="89.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="242.7" y="430.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (38,466 samples, 7.57%)</title><rect x="239.7" y="403.0" width="89.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="242.7" y="414.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (38,466 samples, 7.57%)</title><rect x="239.7" y="387.0" width="89.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="242.7" y="398.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (319 samples, 0.06%)</title><rect x="239.7" y="371.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="242.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (319 samples, 0.06%)</title><rect x="239.7" y="355.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="242.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$263/432643384.get$Lambda (319 samples, 0.06%)</title><rect x="239.7" y="339.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="242.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$263 (319 samples, 0.06%)</title><rect x="239.7" y="323.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="242.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (15,945 samples, 3.14%)</title><rect x="240.4" y="371.0" width="37.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="243.4" y="382.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (15,945 samples, 3.14%)</title><rect x="240.4" y="355.0" width="37.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="243.4" y="366.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (15,945 samples, 3.14%)</title><rect x="240.4" y="339.0" width="37.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="243.4" y="350.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$263/432643384.apply (15,301 samples, 3.01%)</title><rect x="240.4" y="323.0" width="35.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="243.4" y="334.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (15,301 samples, 3.01%)</title><rect x="240.4" y="307.0" width="35.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="243.4" y="318.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (15,301 samples, 3.01%)</title><rect x="240.4" y="291.0" width="35.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="243.4" y="302.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (15,301 samples, 3.01%)</title><rect x="240.4" y="275.0" width="35.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="243.4" y="286.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (9,939 samples, 1.96%)</title><rect x="240.4" y="259.0" width="23.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="243.4" y="270.0">j..</text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (2,704 samples, 0.53%)</title><rect x="240.4" y="243.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="243.4" y="254.0"></text>
</g>
<g>
<title>java.lang.String (518 samples, 0.10%)</title><rect x="240.4" y="227.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="243.4" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,110 samples, 0.22%)</title><rect x="241.6" y="227.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="244.6" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,110 samples, 0.22%)</title><rect x="241.6" y="211.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="244.6" y="222.0"></text>
</g>
<g>
<title>byte[] (1,108 samples, 0.22%)</title><rect x="241.6" y="195.0" width="2.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="244.6" y="206.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (1,076 samples, 0.21%)</title><rect x="244.2" y="227.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="247.2" y="238.0"></text>
</g>
<g>
<title>byte[] (1,073 samples, 0.21%)</title><rect x="244.2" y="211.0" width="2.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="247.2" y="222.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (512 samples, 0.10%)</title><rect x="246.7" y="243.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="249.7" y="254.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (512 samples, 0.10%)</title><rect x="246.7" y="227.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="249.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (4,729 samples, 0.93%)</title><rect x="247.9" y="243.0" width="10.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="250.9" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (431 samples, 0.08%)</title><rect x="247.9" y="227.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="250.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (3,480 samples, 0.68%)</title><rect x="248.9" y="227.0" width="8.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="251.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (3,480 samples, 0.68%)</title><rect x="248.9" y="211.0" width="8.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="251.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/794075965.linkToTargetMethod (2,486 samples, 0.49%)</title><rect x="248.9" y="195.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="251.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,486 samples, 0.49%)</title><rect x="248.9" y="179.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="251.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$66/1706292388.get$Lambda (2,486 samples, 0.49%)</title><rect x="248.9" y="163.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="251.9" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$66 (2,486 samples, 0.49%)</title><rect x="248.9" y="147.0" width="5.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="251.9" y="158.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (994 samples, 0.20%)</title><rect x="254.6" y="195.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="257.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$66/1706292388.run (994 samples, 0.20%)</title><rect x="254.6" y="179.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="257.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (994 samples, 0.20%)</title><rect x="254.6" y="163.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="257.6" y="174.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (994 samples, 0.20%)</title><rect x="254.6" y="147.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="257.6" y="158.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (994 samples, 0.20%)</title><rect x="254.6" y="131.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="257.6" y="142.0"></text>
</g>
<g>
<title>java.lang.Integer (994 samples, 0.20%)</title><rect x="254.6" y="115.0" width="2.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="257.6" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (818 samples, 0.16%)</title><rect x="256.9" y="227.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="259.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (818 samples, 0.16%)</title><rect x="256.9" y="211.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="259.9" y="222.0"></text>
</g>
<g>
<title>int[] (818 samples, 0.16%)</title><rect x="256.9" y="195.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="259.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (1,994 samples, 0.39%)</title><rect x="258.8" y="243.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="261.8" y="254.0"></text>
</g>
<g>
<title>byte[] (997 samples, 0.20%)</title><rect x="258.8" y="227.0" width="2.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="261.8" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (997 samples, 0.20%)</title><rect x="261.2" y="227.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="264.2" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (997 samples, 0.20%)</title><rect x="261.2" y="211.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="264.2" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (997 samples, 0.20%)</title><rect x="261.2" y="195.0" width="2.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="264.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (5,362 samples, 1.06%)</title><rect x="263.5" y="259.0" width="12.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="266.5" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (1,455 samples, 0.29%)</title><rect x="263.5" y="243.0" width="3.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="266.5" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1,390 samples, 0.27%)</title><rect x="266.9" y="243.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="269.9" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,390 samples, 0.27%)</title><rect x="266.9" y="227.0" width="3.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="269.9" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2,517 samples, 0.50%)</title><rect x="270.1" y="243.0" width="5.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="273.1" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2,517 samples, 0.50%)</title><rect x="270.1" y="227.0" width="5.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="273.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (644 samples, 0.13%)</title><rect x="275.9" y="323.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="278.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (644 samples, 0.13%)</title><rect x="275.9" y="307.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="278.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (644 samples, 0.13%)</title><rect x="275.9" y="291.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="278.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (22,202 samples, 4.37%)</title><rect x="277.4" y="371.0" width="51.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="280.4" y="382.0">jdk/i..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (1,704 samples, 0.34%)</title><rect x="277.4" y="355.0" width="4.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="280.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (19,780 samples, 3.89%)</title><rect x="281.5" y="355.0" width="46.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="284.5" y="366.0">jdk/..</text>
</g>
<g>
<title>java.lang.Object (296 samples, 0.06%)</title><rect x="281.5" y="339.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="284.5" y="350.0"></text>
</g>
<g>
<title>java.util.LinkedList (655 samples, 0.13%)</title><rect x="282.2" y="339.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="285.2" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (493 samples, 0.10%)</title><rect x="283.7" y="339.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="286.7" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (930 samples, 0.18%)</title><rect x="284.9" y="339.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="287.9" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (930 samples, 0.18%)</title><rect x="284.9" y="323.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="287.9" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (930 samples, 0.18%)</title><rect x="284.9" y="307.0" width="2.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="287.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (513 samples, 0.10%)</title><rect x="287.0" y="339.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="290.0" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (513 samples, 0.10%)</title><rect x="287.0" y="323.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="290.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (1,365 samples, 0.27%)</title><rect x="288.2" y="339.0" width="3.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="291.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (1,027 samples, 0.20%)</title><rect x="291.4" y="339.0" width="2.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="294.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (1,119 samples, 0.22%)</title><rect x="293.8" y="339.0" width="2.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="296.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,259 samples, 0.25%)</title><rect x="296.4" y="339.0" width="3.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="299.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (5,950 samples, 1.17%)</title><rect x="299.4" y="339.0" width="13.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="302.4" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (457 samples, 0.09%)</title><rect x="299.4" y="323.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="302.4" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (330 samples, 0.06%)</title><rect x="300.4" y="323.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="303.4" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (478 samples, 0.09%)</title><rect x="301.2" y="323.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="304.2" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (342 samples, 0.07%)</title><rect x="302.3" y="323.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="305.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (306 samples, 0.06%)</title><rect x="303.1" y="323.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="306.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (306 samples, 0.06%)</title><rect x="303.1" y="307.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="306.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$257/2141450187.get$Lambda (306 samples, 0.06%)</title><rect x="303.1" y="291.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="306.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$257 (306 samples, 0.06%)</title><rect x="303.1" y="275.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="306.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (516 samples, 0.10%)</title><rect x="303.8" y="323.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="306.8" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (516 samples, 0.10%)</title><rect x="303.8" y="307.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="306.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (474 samples, 0.09%)</title><rect x="305.0" y="323.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="308.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (678 samples, 0.13%)</title><rect x="306.1" y="323.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="309.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (2,369 samples, 0.47%)</title><rect x="307.7" y="323.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="310.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (467 samples, 0.09%)</title><rect x="307.7" y="307.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="310.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (672 samples, 0.13%)</title><rect x="308.8" y="307.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="311.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (306 samples, 0.06%)</title><rect x="310.3" y="307.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="313.3" y="318.0"></text>
</g>
<g>
<title>java.lang.Object (306 samples, 0.06%)</title><rect x="310.3" y="291.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="313.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (924 samples, 0.18%)</title><rect x="311.0" y="307.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="314.0" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (300 samples, 0.06%)</title><rect x="311.0" y="291.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="314.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (323 samples, 0.06%)</title><rect x="311.7" y="291.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="314.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (301 samples, 0.06%)</title><rect x="312.5" y="291.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="315.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (3,963 samples, 0.78%)</title><rect x="313.2" y="339.0" width="9.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="316.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (342 samples, 0.07%)</title><rect x="313.2" y="323.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="316.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (312 samples, 0.06%)</title><rect x="314.0" y="323.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="317.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (318 samples, 0.06%)</title><rect x="314.7" y="323.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="317.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (505 samples, 0.10%)</title><rect x="315.4" y="323.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="318.4" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (505 samples, 0.10%)</title><rect x="315.4" y="307.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="318.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (2,486 samples, 0.49%)</title><rect x="316.6" y="323.0" width="5.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="319.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (464 samples, 0.09%)</title><rect x="316.6" y="307.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="319.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (687 samples, 0.14%)</title><rect x="317.7" y="307.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="320.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (350 samples, 0.07%)</title><rect x="319.3" y="307.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="322.3" y="318.0"></text>
</g>
<g>
<title>java.lang.Object (350 samples, 0.07%)</title><rect x="319.3" y="291.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="322.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (985 samples, 0.19%)</title><rect x="320.1" y="307.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="323.1" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (355 samples, 0.07%)</title><rect x="320.1" y="291.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="323.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (294 samples, 0.06%)</title><rect x="320.9" y="291.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="323.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (336 samples, 0.07%)</title><rect x="321.6" y="291.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="324.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (488 samples, 0.10%)</title><rect x="322.4" y="339.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="325.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (488 samples, 0.10%)</title><rect x="322.4" y="323.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="325.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (488 samples, 0.10%)</title><rect x="322.4" y="307.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="325.4" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.get (488 samples, 0.10%)</title><rect x="322.4" y="291.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="325.4" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (488 samples, 0.10%)</title><rect x="322.4" y="275.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="325.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (488 samples, 0.10%)</title><rect x="322.4" y="259.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="325.4" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (488 samples, 0.10%)</title><rect x="322.4" y="243.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="325.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (1,699 samples, 0.33%)</title><rect x="323.5" y="339.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="326.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/794075965.linkToTargetMethod (441 samples, 0.09%)</title><rect x="323.5" y="323.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="326.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (441 samples, 0.09%)</title><rect x="323.5" y="307.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="326.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$195/1235247075.get$Lambda (441 samples, 0.09%)</title><rect x="323.5" y="291.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="326.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$195 (441 samples, 0.09%)</title><rect x="323.5" y="275.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="326.5" y="286.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,258 samples, 0.25%)</title><rect x="324.5" y="323.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="327.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$195/1235247075.run (1,258 samples, 0.25%)</title><rect x="324.5" y="307.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="327.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (1,258 samples, 0.25%)</title><rect x="324.5" y="291.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="327.5" y="302.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (311 samples, 0.06%)</title><rect x="324.5" y="275.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="327.5" y="286.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (947 samples, 0.19%)</title><rect x="325.3" y="275.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="328.3" y="286.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (479 samples, 0.09%)</title><rect x="325.3" y="259.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="328.3" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (468 samples, 0.09%)</title><rect x="326.4" y="259.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="329.4" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (468 samples, 0.09%)</title><rect x="326.4" y="243.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="329.4" y="254.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (468 samples, 0.09%)</title><rect x="326.4" y="227.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="329.4" y="238.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (468 samples, 0.09%)</title><rect x="326.4" y="211.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="329.4" y="222.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (468 samples, 0.09%)</title><rect x="326.4" y="195.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="329.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (660 samples, 0.13%)</title><rect x="327.5" y="355.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="330.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (660 samples, 0.13%)</title><rect x="327.5" y="339.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="330.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (632 samples, 0.12%)</title><rect x="329.0" y="435.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="332.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (632 samples, 0.12%)</title><rect x="329.0" y="419.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="332.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (632 samples, 0.12%)</title><rect x="329.0" y="403.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="332.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (629 samples, 0.12%)</title><rect x="330.5" y="467.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="333.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (629 samples, 0.12%)</title><rect x="330.5" y="451.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="333.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (629 samples, 0.12%)</title><rect x="330.5" y="435.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="333.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (629 samples, 0.12%)</title><rect x="330.5" y="419.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="333.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (629 samples, 0.12%)</title><rect x="330.5" y="403.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="333.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (1,900 samples, 0.37%)</title><rect x="331.9" y="467.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="334.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (1,297 samples, 0.26%)</title><rect x="331.9" y="451.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="334.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (1,297 samples, 0.26%)</title><rect x="331.9" y="435.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="334.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2043348462.linkToTargetMethod (1,297 samples, 0.26%)</title><rect x="331.9" y="419.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="334.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/224970805.invoke (1,297 samples, 0.26%)</title><rect x="331.9" y="403.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="334.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1897507833.invoke (1,297 samples, 0.26%)</title><rect x="331.9" y="387.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="334.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,297 samples, 0.26%)</title><rect x="331.9" y="371.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="334.9" y="382.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (471 samples, 0.09%)</title><rect x="331.9" y="355.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="334.9" y="366.0"></text>
</g>
<g>
<title>java.lang.String (471 samples, 0.09%)</title><rect x="331.9" y="339.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="334.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (826 samples, 0.16%)</title><rect x="333.0" y="355.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="336.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (826 samples, 0.16%)</title><rect x="333.0" y="339.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="336.0" y="350.0"></text>
</g>
<g>
<title>byte[] (826 samples, 0.16%)</title><rect x="333.0" y="323.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="336.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (603 samples, 0.12%)</title><rect x="334.9" y="451.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="337.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (603 samples, 0.12%)</title><rect x="334.9" y="435.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="337.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (780 samples, 0.15%)</title><rect x="336.3" y="547.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="339.3" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (780 samples, 0.15%)</title><rect x="336.3" y="531.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="339.3" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (780 samples, 0.15%)</title><rect x="336.3" y="515.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="339.3" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (780 samples, 0.15%)</title><rect x="336.3" y="499.0" width="1.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="339.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (3,588 samples, 0.71%)</title><rect x="338.1" y="547.0" width="8.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="341.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (2,616 samples, 0.51%)</title><rect x="338.1" y="531.0" width="6.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="341.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (972 samples, 0.19%)</title><rect x="344.2" y="531.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="347.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (972 samples, 0.19%)</title><rect x="344.2" y="515.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="347.2" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.now (479 samples, 0.09%)</title><rect x="344.2" y="499.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="347.2" y="510.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (479 samples, 0.09%)</title><rect x="344.2" y="483.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="347.2" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (479 samples, 0.09%)</title><rect x="344.2" y="467.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="347.2" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.create (479 samples, 0.09%)</title><rect x="344.2" y="451.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="347.2" y="462.0"></text>
</g>
<g>
<title>java.time.Instant (479 samples, 0.09%)</title><rect x="344.2" y="435.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="347.2" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (493 samples, 0.10%)</title><rect x="345.3" y="499.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="348.3" y="510.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (493 samples, 0.10%)</title><rect x="345.3" y="483.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="348.3" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (493 samples, 0.10%)</title><rect x="345.3" y="467.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="348.3" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (493 samples, 0.10%)</title><rect x="345.3" y="451.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="348.3" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (493 samples, 0.10%)</title><rect x="345.3" y="435.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="348.3" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (493 samples, 0.10%)</title><rect x="345.3" y="419.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="348.3" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (493 samples, 0.10%)</title><rect x="345.3" y="403.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="348.3" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.create (493 samples, 0.10%)</title><rect x="345.3" y="387.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="348.3" y="398.0"></text>
</g>
<g>
<title>java.time.Instant (493 samples, 0.10%)</title><rect x="345.3" y="371.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="348.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4,007 samples, 0.79%)</title><rect x="346.5" y="643.0" width="9.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="349.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (648 samples, 0.13%)</title><rect x="346.5" y="627.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="349.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (644 samples, 0.13%)</title><rect x="346.5" y="611.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="349.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (644 samples, 0.13%)</title><rect x="346.5" y="595.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="349.5" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (644 samples, 0.13%)</title><rect x="346.5" y="579.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="349.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (3,359 samples, 0.66%)</title><rect x="348.0" y="627.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="351.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (3,359 samples, 0.66%)</title><rect x="348.0" y="611.0" width="7.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="351.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (3,359 samples, 0.66%)</title><rect x="348.0" y="595.0" width="7.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="351.0" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (3,359 samples, 0.66%)</title><rect x="348.0" y="579.0" width="7.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="351.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$422/1809300373.run (12,384 samples, 2.44%)</title><rect x="355.8" y="643.0" width="28.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="358.8" y="654.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (12,384 samples, 2.44%)</title><rect x="355.8" y="627.0" width="28.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="358.8" y="638.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (12,384 samples, 2.44%)</title><rect x="355.8" y="611.0" width="28.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="358.8" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (12,384 samples, 2.44%)</title><rect x="355.8" y="595.0" width="28.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="358.8" y="606.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (12,384 samples, 2.44%)</title><rect x="355.8" y="579.0" width="28.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="358.8" y="590.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (12,384 samples, 2.44%)</title><rect x="355.8" y="563.0" width="28.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="358.8" y="574.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (12,384 samples, 2.44%)</title><rect x="355.8" y="547.0" width="28.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="358.8" y="558.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (12,384 samples, 2.44%)</title><rect x="355.8" y="531.0" width="28.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="358.8" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (12,384 samples, 2.44%)</title><rect x="355.8" y="515.0" width="28.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="358.8" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (12,383 samples, 2.44%)</title><rect x="355.8" y="499.0" width="28.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="358.8" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (12,383 samples, 2.44%)</title><rect x="355.8" y="483.0" width="28.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="358.8" y="494.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (11,296 samples, 2.22%)</title><rect x="355.8" y="467.0" width="26.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="358.8" y="478.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,233 samples, 0.24%)</title><rect x="355.8" y="451.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="358.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,233 samples, 0.24%)</title><rect x="355.8" y="435.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="358.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$424/702163598.get$Lambda (883 samples, 0.17%)</title><rect x="355.8" y="419.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="358.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$424 (883 samples, 0.17%)</title><rect x="355.8" y="403.0" width="2.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="358.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$448/109413651.get$Lambda (350 samples, 0.07%)</title><rect x="357.8" y="419.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="360.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$448 (350 samples, 0.07%)</title><rect x="357.8" y="403.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="360.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (10,063 samples, 1.98%)</title><rect x="358.6" y="451.0" width="23.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="361.6" y="462.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (912 samples, 0.18%)</title><rect x="358.6" y="435.0" width="2.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="361.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9,151 samples, 1.80%)</title><rect x="360.8" y="435.0" width="21.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="363.8" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (9,151 samples, 1.80%)</title><rect x="360.8" y="419.0" width="21.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="363.8" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9,151 samples, 1.80%)</title><rect x="360.8" y="403.0" width="21.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="363.8" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (3,507 samples, 0.69%)</title><rect x="360.8" y="387.0" width="8.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="363.8" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (1,256 samples, 0.25%)</title><rect x="360.8" y="371.0" width="2.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="363.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$436/1148243958.apply (2,236 samples, 0.44%)</title><rect x="363.7" y="371.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="366.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (2,236 samples, 0.44%)</title><rect x="363.7" y="355.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="366.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (2,236 samples, 0.44%)</title><rect x="363.7" y="339.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="366.7" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (490 samples, 0.10%)</title><rect x="363.7" y="323.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="366.7" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (490 samples, 0.10%)</title><rect x="363.7" y="307.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="366.7" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (490 samples, 0.10%)</title><rect x="363.7" y="291.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="366.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (1,746 samples, 0.34%)</title><rect x="364.8" y="323.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="367.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (313 samples, 0.06%)</title><rect x="364.8" y="307.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="367.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (313 samples, 0.06%)</title><rect x="364.8" y="291.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="367.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$451/1240847809.get$Lambda (313 samples, 0.06%)</title><rect x="364.8" y="275.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="367.8" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$451 (313 samples, 0.06%)</title><rect x="364.8" y="259.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="367.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (1,433 samples, 0.28%)</title><rect x="365.5" y="307.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="368.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1,433 samples, 0.28%)</title><rect x="365.5" y="291.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="368.5" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (805 samples, 0.16%)</title><rect x="365.5" y="275.0" width="1.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="368.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (626 samples, 0.12%)</title><rect x="367.4" y="275.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="370.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (626 samples, 0.12%)</title><rect x="367.4" y="259.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="370.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (626 samples, 0.12%)</title><rect x="367.4" y="243.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="370.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (5,644 samples, 1.11%)</title><rect x="368.9" y="387.0" width="13.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="371.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (5,644 samples, 1.11%)</title><rect x="368.9" y="371.0" width="13.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="371.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$321/493893851.apply (5,644 samples, 1.11%)</title><rect x="368.9" y="355.0" width="13.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="371.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (5,644 samples, 1.11%)</title><rect x="368.9" y="339.0" width="13.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="371.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (5,644 samples, 1.11%)</title><rect x="368.9" y="323.0" width="13.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="371.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$172/833586384.apply (5,644 samples, 1.11%)</title><rect x="368.9" y="307.0" width="13.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="371.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (5,644 samples, 1.11%)</title><rect x="368.9" y="291.0" width="13.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="371.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (333 samples, 0.07%)</title><rect x="368.9" y="275.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="371.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (333 samples, 0.07%)</title><rect x="368.9" y="259.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="371.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$436/1148243958.get$Lambda (333 samples, 0.07%)</title><rect x="368.9" y="243.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="371.9" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$436 (333 samples, 0.07%)</title><rect x="368.9" y="227.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="371.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,447 samples, 0.28%)</title><rect x="369.7" y="275.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="372.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,447 samples, 0.28%)</title><rect x="369.7" y="259.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="372.7" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (770 samples, 0.15%)</title><rect x="369.7" y="243.0" width="1.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="372.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (677 samples, 0.13%)</title><rect x="371.5" y="243.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="374.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (677 samples, 0.13%)</title><rect x="371.5" y="227.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="374.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (677 samples, 0.13%)</title><rect x="371.5" y="211.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="374.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (1,730 samples, 0.34%)</title><rect x="373.0" y="275.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="376.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (319 samples, 0.06%)</title><rect x="373.0" y="259.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="376.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (319 samples, 0.06%)</title><rect x="373.0" y="243.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="376.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$440/24271132.get$Lambda (319 samples, 0.06%)</title><rect x="373.0" y="227.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="376.0" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$440 (319 samples, 0.06%)</title><rect x="373.0" y="211.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="376.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,411 samples, 0.28%)</title><rect x="373.8" y="259.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="376.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,411 samples, 0.28%)</title><rect x="373.8" y="243.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="376.8" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (804 samples, 0.16%)</title><rect x="373.8" y="227.0" width="1.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="376.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (607 samples, 0.12%)</title><rect x="375.6" y="227.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="378.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (607 samples, 0.12%)</title><rect x="375.6" y="211.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="378.6" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (607 samples, 0.12%)</title><rect x="375.6" y="195.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="378.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (2,134 samples, 0.42%)</title><rect x="377.1" y="275.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="380.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (1,191 samples, 0.23%)</title><rect x="377.1" y="259.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="380.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (620 samples, 0.12%)</title><rect x="377.1" y="243.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="380.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (571 samples, 0.11%)</title><rect x="378.5" y="243.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="381.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (571 samples, 0.11%)</title><rect x="378.5" y="227.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="381.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (571 samples, 0.11%)</title><rect x="378.5" y="211.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="381.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (943 samples, 0.19%)</title><rect x="379.8" y="259.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="382.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (497 samples, 0.10%)</title><rect x="379.8" y="243.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="382.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (446 samples, 0.09%)</title><rect x="381.0" y="243.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="384.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (446 samples, 0.09%)</title><rect x="381.0" y="227.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="384.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (446 samples, 0.09%)</title><rect x="381.0" y="211.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="384.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (446 samples, 0.09%)</title><rect x="381.0" y="195.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="384.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (446 samples, 0.09%)</title><rect x="381.0" y="179.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="384.0" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (446 samples, 0.09%)</title><rect x="381.0" y="163.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="384.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1,087 samples, 0.21%)</title><rect x="382.0" y="467.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="385.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1,087 samples, 0.21%)</title><rect x="382.0" y="451.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="385.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1,087 samples, 0.21%)</title><rect x="382.0" y="435.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="385.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1,087 samples, 0.21%)</title><rect x="382.0" y="419.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="385.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1,087 samples, 0.21%)</title><rect x="382.0" y="403.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="385.0" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1,087 samples, 0.21%)</title><rect x="382.0" y="387.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="385.0" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (456 samples, 0.09%)</title><rect x="382.0" y="371.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="385.0" y="382.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (456 samples, 0.09%)</title><rect x="382.0" y="355.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="385.0" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (631 samples, 0.12%)</title><rect x="383.1" y="371.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="386.1" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (631 samples, 0.12%)</title><rect x="383.1" y="355.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="386.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (88,204 samples, 17.36%)</title><rect x="384.5" y="643.0" width="204.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="387.5" y="654.0">jdk/internal/net/http/commo..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (88,204 samples, 17.36%)</title><rect x="384.5" y="627.0" width="204.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="387.5" y="638.0">jdk/internal/net/http/commo..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (73,658 samples, 14.50%)</title><rect x="384.5" y="611.0" width="171.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="387.5" y="622.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$257/2141450187.run (73,658 samples, 14.50%)</title><rect x="384.5" y="595.0" width="171.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="387.5" y="606.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (73,658 samples, 14.50%)</title><rect x="384.5" y="579.0" width="171.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="387.5" y="590.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (1,510 samples, 0.30%)</title><rect x="384.5" y="563.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="387.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (1,510 samples, 0.30%)</title><rect x="384.5" y="547.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="387.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1,510 samples, 0.30%)</title><rect x="384.5" y="531.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="387.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (1,510 samples, 0.30%)</title><rect x="384.5" y="515.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="387.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/931496835.linkToTargetMethod (730 samples, 0.14%)</title><rect x="384.5" y="499.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="387.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1324578393.invoke (730 samples, 0.14%)</title><rect x="384.5" y="483.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="387.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (730 samples, 0.14%)</title><rect x="384.5" y="467.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="387.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (730 samples, 0.14%)</title><rect x="384.5" y="451.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="387.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (730 samples, 0.14%)</title><rect x="384.5" y="435.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="387.5" y="446.0"></text>
</g>
<g>
<title>byte[] (730 samples, 0.14%)</title><rect x="384.5" y="419.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="387.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (780 samples, 0.15%)</title><rect x="386.2" y="499.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="389.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (780 samples, 0.15%)</title><rect x="386.2" y="483.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="389.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (780 samples, 0.15%)</title><rect x="386.2" y="467.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="389.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$420/1458729479.get$Lambda (780 samples, 0.15%)</title><rect x="386.2" y="451.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="389.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$420 (780 samples, 0.15%)</title><rect x="386.2" y="435.0" width="1.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="389.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (72,148 samples, 14.20%)</title><rect x="388.0" y="563.0" width="167.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="391.0" y="574.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (72,148 samples, 14.20%)</title><rect x="388.0" y="547.0" width="167.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="391.0" y="558.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (72,148 samples, 14.20%)</title><rect x="388.0" y="531.0" width="167.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="391.0" y="542.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (72,148 samples, 14.20%)</title><rect x="388.0" y="515.0" width="167.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="391.0" y="526.0">jdk/internal/net/http..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (29,894 samples, 5.88%)</title><rect x="388.0" y="499.0" width="69.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="391.0" y="510.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (29,894 samples, 5.88%)</title><rect x="388.0" y="483.0" width="69.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="391.0" y="494.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (29,894 samples, 5.88%)</title><rect x="388.0" y="467.0" width="69.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="391.0" y="478.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (29,894 samples, 5.88%)</title><rect x="388.0" y="451.0" width="69.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="391.0" y="462.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (29,894 samples, 5.88%)</title><rect x="388.0" y="435.0" width="69.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="391.0" y="446.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (29,894 samples, 5.88%)</title><rect x="388.0" y="419.0" width="69.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="391.0" y="430.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (29,894 samples, 5.88%)</title><rect x="388.0" y="403.0" width="69.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="391.0" y="414.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (29,019 samples, 5.71%)</title><rect x="388.0" y="387.0" width="67.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="391.0" y="398.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (29,019 samples, 5.71%)</title><rect x="388.0" y="371.0" width="67.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="391.0" y="382.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (28,388 samples, 5.59%)</title><rect x="388.0" y="355.0" width="66.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="391.0" y="366.0">java/ut..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (563 samples, 0.11%)</title><rect x="388.0" y="339.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="391.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$440/24271132.apply (590 samples, 0.12%)</title><rect x="389.3" y="339.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="392.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (590 samples, 0.12%)</title><rect x="389.3" y="323.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="392.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (590 samples, 0.12%)</title><rect x="389.3" y="307.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="392.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (590 samples, 0.12%)</title><rect x="389.3" y="291.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="392.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (590 samples, 0.12%)</title><rect x="389.3" y="275.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="392.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$142/1552091493.apply (26,058 samples, 5.13%)</title><rect x="390.7" y="339.0" width="60.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="393.7" y="350.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (26,058 samples, 5.13%)</title><rect x="390.7" y="323.0" width="60.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="393.7" y="334.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (450 samples, 0.09%)</title><rect x="390.7" y="307.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="393.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (450 samples, 0.09%)</title><rect x="390.7" y="291.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="393.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$494/1940969782.get$Lambda (450 samples, 0.09%)</title><rect x="390.7" y="275.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="393.7" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$494 (450 samples, 0.09%)</title><rect x="390.7" y="259.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="393.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (1,381 samples, 0.27%)</title><rect x="391.8" y="307.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="394.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1,381 samples, 0.27%)</title><rect x="391.8" y="291.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="394.8" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (740 samples, 0.15%)</title><rect x="391.8" y="275.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="394.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (641 samples, 0.13%)</title><rect x="393.5" y="275.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="396.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (641 samples, 0.13%)</title><rect x="393.5" y="259.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="396.5" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (641 samples, 0.13%)</title><rect x="393.5" y="243.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="396.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (24,227 samples, 4.77%)</title><rect x="395.0" y="307.0" width="56.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="398.0" y="318.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (295 samples, 0.06%)</title><rect x="395.0" y="291.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="398.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (295 samples, 0.06%)</title><rect x="395.0" y="275.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="398.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$490/2010863622.get$Lambda (295 samples, 0.06%)</title><rect x="395.0" y="259.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="398.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$490 (295 samples, 0.06%)</title><rect x="395.0" y="243.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="398.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,337 samples, 0.26%)</title><rect x="395.7" y="291.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="398.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,337 samples, 0.26%)</title><rect x="395.7" y="275.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="398.7" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (751 samples, 0.15%)</title><rect x="395.7" y="259.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="398.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (586 samples, 0.12%)</title><rect x="397.4" y="259.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="400.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (586 samples, 0.12%)</title><rect x="397.4" y="243.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="400.4" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (586 samples, 0.12%)</title><rect x="397.4" y="227.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="400.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (22,595 samples, 4.45%)</title><rect x="398.8" y="291.0" width="52.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="401.8" y="302.0">jdk/i..</text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$129/1413017260.apply (1,601 samples, 0.32%)</title><rect x="398.8" y="275.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="401.8" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (1,601 samples, 0.32%)</title><rect x="398.8" y="259.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="401.8" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (1,601 samples, 0.32%)</title><rect x="398.8" y="243.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="401.8" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (587 samples, 0.12%)</title><rect x="398.8" y="227.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="401.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (1,014 samples, 0.20%)</title><rect x="400.1" y="227.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="403.1" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (431 samples, 0.08%)</title><rect x="400.1" y="211.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="403.1" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (583 samples, 0.11%)</title><rect x="401.1" y="211.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="404.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (20,994 samples, 4.13%)</title><rect x="402.5" y="275.0" width="48.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="405.5" y="286.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (539 samples, 0.11%)</title><rect x="402.5" y="259.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="405.5" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (539 samples, 0.11%)</title><rect x="402.5" y="243.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="405.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$486/1745057828.get$Lambda (278 samples, 0.05%)</title><rect x="402.5" y="227.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="405.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$486 (278 samples, 0.05%)</title><rect x="402.5" y="211.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="405.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$487/707438118.get$Lambda (261 samples, 0.05%)</title><rect x="403.1" y="227.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="406.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$487 (261 samples, 0.05%)</title><rect x="403.1" y="211.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="406.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/651615589.linkToTargetMethod (588 samples, 0.12%)</title><rect x="403.7" y="259.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="406.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (588 samples, 0.12%)</title><rect x="403.7" y="243.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="406.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$464/2012603104.get$Lambda (588 samples, 0.12%)</title><rect x="403.7" y="227.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="406.7" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$464 (588 samples, 0.12%)</title><rect x="403.7" y="211.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="406.7" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (4,212 samples, 0.83%)</title><rect x="405.1" y="259.0" width="9.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="408.1" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,674 samples, 0.33%)</title><rect x="405.1" y="243.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="408.1" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (591 samples, 0.12%)</title><rect x="405.1" y="227.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="408.1" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (591 samples, 0.12%)</title><rect x="405.1" y="211.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="408.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1,083 samples, 0.21%)</title><rect x="406.5" y="227.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="409.5" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1,071 samples, 0.21%)</title><rect x="406.5" y="211.0" width="2.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="409.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (1,371 samples, 0.27%)</title><rect x="409.0" y="243.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="412.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1,371 samples, 0.27%)</title><rect x="409.0" y="227.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="412.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1,371 samples, 0.27%)</title><rect x="409.0" y="211.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="412.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (437 samples, 0.09%)</title><rect x="409.0" y="195.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="412.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (437 samples, 0.09%)</title><rect x="409.0" y="179.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="412.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (437 samples, 0.09%)</title><rect x="409.0" y="163.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="412.0" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (437 samples, 0.09%)</title><rect x="409.0" y="147.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="412.0" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$461/482899685.get (474 samples, 0.09%)</title><rect x="410.0" y="195.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="413.0" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (474 samples, 0.09%)</title><rect x="410.0" y="179.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="413.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (460 samples, 0.09%)</title><rect x="411.1" y="195.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="414.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (460 samples, 0.09%)</title><rect x="411.1" y="179.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="414.1" y="190.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (460 samples, 0.09%)</title><rect x="411.1" y="163.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="414.1" y="174.0"></text>
</g>
<g>
<title>java.util.OptionalLong (460 samples, 0.09%)</title><rect x="411.1" y="147.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="414.1" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (1,167 samples, 0.23%)</title><rect x="412.2" y="243.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="415.2" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (1,163 samples, 0.23%)</title><rect x="412.2" y="227.0" width="2.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="415.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2,742 samples, 0.54%)</title><rect x="414.9" y="259.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="417.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,327 samples, 0.26%)</title><rect x="414.9" y="243.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="417.9" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (695 samples, 0.14%)</title><rect x="414.9" y="227.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="417.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (632 samples, 0.12%)</title><rect x="416.5" y="227.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="419.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (632 samples, 0.12%)</title><rect x="416.5" y="211.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="419.5" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (632 samples, 0.12%)</title><rect x="416.5" y="195.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="419.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,415 samples, 0.28%)</title><rect x="418.0" y="243.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="421.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,415 samples, 0.28%)</title><rect x="418.0" y="227.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="421.0" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (758 samples, 0.15%)</title><rect x="418.0" y="211.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="421.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (657 samples, 0.13%)</title><rect x="419.7" y="211.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="422.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (657 samples, 0.13%)</title><rect x="419.7" y="195.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="422.7" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (657 samples, 0.13%)</title><rect x="419.7" y="179.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="422.7" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (509 samples, 0.10%)</title><rect x="421.2" y="259.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="424.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (607 samples, 0.12%)</title><rect x="422.4" y="259.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="425.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (601 samples, 0.12%)</title><rect x="423.8" y="259.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="426.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (314 samples, 0.06%)</title><rect x="425.2" y="259.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="428.2" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (314 samples, 0.06%)</title><rect x="425.2" y="243.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="428.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (10,882 samples, 2.14%)</title><rect x="426.0" y="259.0" width="25.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="429.0" y="270.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$464/2012603104.run (10,882 samples, 2.14%)</title><rect x="426.0" y="243.0" width="25.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="429.0" y="254.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (10,882 samples, 2.14%)</title><rect x="426.0" y="227.0" width="25.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="429.0" y="238.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,408 samples, 0.28%)</title><rect x="426.0" y="211.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="429.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,408 samples, 0.28%)</title><rect x="426.0" y="195.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="429.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$472/1342553686.get$Lambda (322 samples, 0.06%)</title><rect x="426.0" y="179.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="429.0" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$472 (322 samples, 0.06%)</title><rect x="426.0" y="163.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="429.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$473/1136680286.get$Lambda (445 samples, 0.09%)</title><rect x="426.7" y="179.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="429.7" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$473 (445 samples, 0.09%)</title><rect x="426.7" y="163.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="429.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$478/1518507171.get$Lambda (641 samples, 0.13%)</title><rect x="427.7" y="179.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="430.7" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$478 (641 samples, 0.13%)</title><rect x="427.7" y="163.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="430.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,342 samples, 0.26%)</title><rect x="429.2" y="211.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="432.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,342 samples, 0.26%)</title><rect x="429.2" y="195.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="432.2" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (716 samples, 0.14%)</title><rect x="429.2" y="179.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="432.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (626 samples, 0.12%)</title><rect x="430.9" y="179.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="433.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (626 samples, 0.12%)</title><rect x="430.9" y="163.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="433.9" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (626 samples, 0.12%)</title><rect x="430.9" y="147.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="433.9" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (769 samples, 0.15%)</title><rect x="432.3" y="211.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="435.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (583 samples, 0.11%)</title><rect x="434.1" y="211.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="437.1" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (583 samples, 0.11%)</title><rect x="434.1" y="195.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="437.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (1,818 samples, 0.36%)</title><rect x="435.5" y="211.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="438.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (1,818 samples, 0.36%)</title><rect x="435.5" y="195.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="438.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (437 samples, 0.09%)</title><rect x="435.5" y="179.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="438.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (437 samples, 0.09%)</title><rect x="435.5" y="163.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="438.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$480/1590453465.get$Lambda (437 samples, 0.09%)</title><rect x="435.5" y="147.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="438.5" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$480 (437 samples, 0.09%)</title><rect x="435.5" y="131.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="438.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,381 samples, 0.27%)</title><rect x="436.5" y="179.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="439.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,381 samples, 0.27%)</title><rect x="436.5" y="163.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="439.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,381 samples, 0.27%)</title><rect x="436.5" y="147.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="439.5" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (763 samples, 0.15%)</title><rect x="436.5" y="131.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="439.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (618 samples, 0.12%)</title><rect x="438.3" y="131.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="441.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (618 samples, 0.12%)</title><rect x="438.3" y="115.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="441.3" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (618 samples, 0.12%)</title><rect x="438.3" y="99.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="441.3" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (1,732 samples, 0.34%)</title><rect x="439.7" y="211.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="442.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,732 samples, 0.34%)</title><rect x="439.7" y="195.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="442.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/232307208.invoke (1,732 samples, 0.34%)</title><rect x="439.7" y="179.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="442.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,732 samples, 0.34%)</title><rect x="439.7" y="163.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="442.7" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (436 samples, 0.09%)</title><rect x="439.7" y="147.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="442.7" y="158.0"></text>
</g>
<g>
<title>java.lang.String (436 samples, 0.09%)</title><rect x="439.7" y="131.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="442.7" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1,296 samples, 0.26%)</title><rect x="440.7" y="147.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="443.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1,296 samples, 0.26%)</title><rect x="440.7" y="131.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="443.7" y="142.0"></text>
</g>
<g>
<title>byte[] (1,284 samples, 0.25%)</title><rect x="440.7" y="115.0" width="3.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="443.7" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (3,230 samples, 0.64%)</title><rect x="443.7" y="211.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="446.7" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (944 samples, 0.19%)</title><rect x="443.7" y="195.0" width="2.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="446.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (2,286 samples, 0.45%)</title><rect x="445.9" y="195.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="448.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,286 samples, 0.45%)</title><rect x="445.9" y="179.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="448.9" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/232307208.invoke (2,286 samples, 0.45%)</title><rect x="445.9" y="163.0" width="5.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="448.9" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,286 samples, 0.45%)</title><rect x="445.9" y="147.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="448.9" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (429 samples, 0.08%)</title><rect x="445.9" y="131.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="448.9" y="142.0"></text>
</g>
<g>
<title>java.lang.String (429 samples, 0.08%)</title><rect x="445.9" y="115.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="448.9" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1,857 samples, 0.37%)</title><rect x="446.9" y="131.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="449.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1,857 samples, 0.37%)</title><rect x="446.9" y="115.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="449.9" y="126.0"></text>
</g>
<g>
<title>byte[] (1,769 samples, 0.35%)</title><rect x="446.9" y="99.0" width="4.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="449.9" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$325/1323411580.apply (1,177 samples, 0.23%)</title><rect x="451.2" y="339.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="454.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$5 (1,177 samples, 0.23%)</title><rect x="451.2" y="323.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="454.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (577 samples, 0.11%)</title><rect x="451.2" y="307.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="454.2" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (577 samples, 0.11%)</title><rect x="451.2" y="291.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="454.2" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (577 samples, 0.11%)</title><rect x="451.2" y="275.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="454.2" y="286.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (577 samples, 0.11%)</title><rect x="451.2" y="259.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="454.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (600 samples, 0.12%)</title><rect x="452.6" y="307.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="455.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (600 samples, 0.12%)</title><rect x="452.6" y="291.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="455.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (631 samples, 0.12%)</title><rect x="454.0" y="355.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="457.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (631 samples, 0.12%)</title><rect x="454.0" y="339.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="457.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$327/1389098907.apply (631 samples, 0.12%)</title><rect x="454.0" y="323.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="457.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (631 samples, 0.12%)</title><rect x="454.0" y="307.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="457.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (631 samples, 0.12%)</title><rect x="454.0" y="291.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="457.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (631 samples, 0.12%)</title><rect x="454.0" y="275.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="457.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$451/1240847809.apply (875 samples, 0.17%)</title><rect x="455.4" y="387.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="458.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (875 samples, 0.17%)</title><rect x="455.4" y="371.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="458.4" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (875 samples, 0.17%)</title><rect x="455.4" y="355.0" width="2.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="458.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (42,254 samples, 8.32%)</title><rect x="457.5" y="499.0" width="98.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="460.5" y="510.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (3,120 samples, 0.61%)</title><rect x="457.5" y="483.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="460.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3,120 samples, 0.61%)</title><rect x="457.5" y="467.0" width="7.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="460.5" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3,120 samples, 0.61%)</title><rect x="457.5" y="451.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="460.5" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3,120 samples, 0.61%)</title><rect x="457.5" y="435.0" width="7.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="460.5" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3,120 samples, 0.61%)</title><rect x="457.5" y="419.0" width="7.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="460.5" y="430.0"></text>
</g>
<g>
<title>byte[] (3,112 samples, 0.61%)</title><rect x="457.5" y="403.0" width="7.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="460.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (3,155 samples, 0.62%)</title><rect x="464.7" y="483.0" width="7.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="467.7" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (457 samples, 0.09%)</title><rect x="464.7" y="467.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="467.7" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (917 samples, 0.18%)</title><rect x="465.8" y="467.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="468.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (917 samples, 0.18%)</title><rect x="465.8" y="451.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="468.8" y="462.0"></text>
</g>
<g>
<title>java.lang.String (451 samples, 0.09%)</title><rect x="465.8" y="435.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="468.8" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (466 samples, 0.09%)</title><rect x="466.8" y="435.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="469.8" y="446.0"></text>
</g>
<g>
<title>byte[] (466 samples, 0.09%)</title><rect x="466.8" y="419.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="469.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (587 samples, 0.12%)</title><rect x="467.9" y="467.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="470.9" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (587 samples, 0.12%)</title><rect x="467.9" y="451.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="470.9" y="462.0"></text>
</g>
<g>
<title>byte[] (587 samples, 0.12%)</title><rect x="467.9" y="435.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="470.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,194 samples, 0.23%)</title><rect x="469.3" y="467.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="472.3" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,194 samples, 0.23%)</title><rect x="469.3" y="451.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="472.3" y="462.0"></text>
</g>
<g>
<title>java.lang.String (616 samples, 0.12%)</title><rect x="469.3" y="435.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="472.3" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (578 samples, 0.11%)</title><rect x="470.7" y="435.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="473.7" y="446.0"></text>
</g>
<g>
<title>byte[] (578 samples, 0.11%)</title><rect x="470.7" y="419.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="473.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (11,211 samples, 2.21%)</title><rect x="472.0" y="483.0" width="26.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="475.0" y="494.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (11,211 samples, 2.21%)</title><rect x="472.0" y="467.0" width="26.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="475.0" y="478.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (11,211 samples, 2.21%)</title><rect x="472.0" y="451.0" width="26.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="475.0" y="462.0">j..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (291 samples, 0.06%)</title><rect x="472.0" y="435.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="475.0" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (440 samples, 0.09%)</title><rect x="472.7" y="435.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="475.7" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (866 samples, 0.17%)</title><rect x="473.7" y="435.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="476.7" y="446.0"></text>
</g>
<g>
<title>java.util.TreeSet (300 samples, 0.06%)</title><rect x="475.7" y="435.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="478.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (564 samples, 0.11%)</title><rect x="476.4" y="435.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="479.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (564 samples, 0.11%)</title><rect x="476.4" y="419.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="479.4" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1284541460.get$Lambda (564 samples, 0.11%)</title><rect x="476.4" y="403.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="479.4" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (564 samples, 0.11%)</title><rect x="476.4" y="387.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="479.4" y="398.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (603 samples, 0.12%)</title><rect x="477.7" y="435.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="480.7" y="446.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (603 samples, 0.12%)</title><rect x="477.7" y="419.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="480.7" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (7,307 samples, 1.44%)</title><rect x="479.1" y="435.0" width="17.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="482.1" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1284541460.accept (7,307 samples, 1.44%)</title><rect x="479.1" y="419.0" width="17.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="482.1" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (7,307 samples, 1.44%)</title><rect x="479.1" y="403.0" width="17.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="482.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,344 samples, 0.26%)</title><rect x="479.1" y="387.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="482.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,344 samples, 0.26%)</title><rect x="479.1" y="371.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="482.1" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$127/1726426466.get$Lambda (1,344 samples, 0.26%)</title><rect x="479.1" y="355.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="482.1" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$127 (1,344 samples, 0.26%)</title><rect x="479.1" y="339.0" width="3.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="482.1" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (977 samples, 0.19%)</title><rect x="482.3" y="387.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="485.3" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$127/1726426466.accept (977 samples, 0.19%)</title><rect x="482.3" y="371.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="485.3" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (977 samples, 0.19%)</title><rect x="482.3" y="355.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="485.3" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (977 samples, 0.19%)</title><rect x="482.3" y="339.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="485.3" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (977 samples, 0.19%)</title><rect x="482.3" y="323.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="485.3" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (977 samples, 0.19%)</title><rect x="482.3" y="307.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="485.3" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (977 samples, 0.19%)</title><rect x="482.3" y="291.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="485.3" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (977 samples, 0.19%)</title><rect x="482.3" y="275.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="485.3" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (975 samples, 0.19%)</title><rect x="482.3" y="259.0" width="2.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="485.3" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (2,708 samples, 0.53%)</title><rect x="484.5" y="387.0" width="6.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="487.5" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (2,708 samples, 0.53%)</title><rect x="484.5" y="371.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="487.5" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1,339 samples, 0.26%)</title><rect x="484.5" y="355.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="487.5" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,339 samples, 0.26%)</title><rect x="484.5" y="339.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="487.5" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,339 samples, 0.26%)</title><rect x="484.5" y="323.0" width="3.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="487.5" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (1,369 samples, 0.27%)</title><rect x="487.6" y="355.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="490.6" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1,369 samples, 0.27%)</title><rect x="487.6" y="339.0" width="3.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="490.6" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2,278 samples, 0.45%)</title><rect x="490.8" y="387.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="493.8" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2,278 samples, 0.45%)</title><rect x="490.8" y="371.0" width="5.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="493.8" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (840 samples, 0.17%)</title><rect x="496.1" y="435.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="499.1" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (840 samples, 0.17%)</title><rect x="496.1" y="419.0" width="2.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="499.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (24,768 samples, 4.87%)</title><rect x="498.1" y="483.0" width="57.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="501.1" y="494.0">jdk/in..</text>
</g>
<g>
<title>java.lang.StringBuilder (1,367 samples, 0.27%)</title><rect x="498.1" y="467.0" width="3.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="501.1" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1,725 samples, 0.34%)</title><rect x="501.2" y="467.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="504.2" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1,725 samples, 0.34%)</title><rect x="501.2" y="451.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="504.2" y="462.0"></text>
</g>
<g>
<title>byte[] (1,725 samples, 0.34%)</title><rect x="501.2" y="435.0" width="4.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="504.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3,630 samples, 0.71%)</title><rect x="505.2" y="467.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="508.2" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,630 samples, 0.71%)</title><rect x="505.2" y="451.0" width="8.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="508.2" y="462.0"></text>
</g>
<g>
<title>java.lang.String (1,322 samples, 0.26%)</title><rect x="505.2" y="435.0" width="3.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="508.2" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,308 samples, 0.45%)</title><rect x="508.3" y="435.0" width="5.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="511.3" y="446.0"></text>
</g>
<g>
<title>byte[] (2,308 samples, 0.45%)</title><rect x="508.3" y="419.0" width="5.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="511.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (18,046 samples, 3.55%)</title><rect x="513.7" y="467.0" width="41.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="516.7" y="478.0">jdk..</text>
</g>
<g>
<title>java/lang/String.substring (6,307 samples, 1.24%)</title><rect x="513.7" y="451.0" width="14.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="516.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6,307 samples, 1.24%)</title><rect x="513.7" y="435.0" width="14.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="516.7" y="446.0"></text>
</g>
<g>
<title>java.lang.String (2,678 samples, 0.53%)</title><rect x="513.7" y="419.0" width="6.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="516.7" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,629 samples, 0.71%)</title><rect x="519.9" y="419.0" width="8.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="522.9" y="430.0"></text>
</g>
<g>
<title>byte[] (3,629 samples, 0.71%)</title><rect x="519.9" y="403.0" width="8.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="522.9" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2,049 samples, 0.40%)</title><rect x="528.3" y="451.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="531.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2,049 samples, 0.40%)</title><rect x="528.3" y="435.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="531.3" y="446.0"></text>
</g>
<g>
<title>byte[] (1,190 samples, 0.23%)</title><rect x="528.3" y="419.0" width="2.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="531.3" y="430.0"></text>
</g>
<g>
<title>java.lang.String (859 samples, 0.17%)</title><rect x="531.1" y="419.0" width="2.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="534.1" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (1,923 samples, 0.38%)</title><rect x="533.1" y="451.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="536.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1,923 samples, 0.38%)</title><rect x="533.1" y="435.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="536.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,923 samples, 0.38%)</title><rect x="533.1" y="419.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="536.1" y="430.0"></text>
</g>
<g>
<title>java.lang.String (876 samples, 0.17%)</title><rect x="533.1" y="403.0" width="2.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="536.1" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,047 samples, 0.21%)</title><rect x="535.1" y="403.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="538.1" y="414.0"></text>
</g>
<g>
<title>byte[] (1,047 samples, 0.21%)</title><rect x="535.1" y="387.0" width="2.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="538.1" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3,140 samples, 0.62%)</title><rect x="537.5" y="451.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="540.5" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3,140 samples, 0.62%)</title><rect x="537.5" y="435.0" width="7.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="540.5" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3,140 samples, 0.62%)</title><rect x="537.5" y="419.0" width="7.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="540.5" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3,140 samples, 0.62%)</title><rect x="537.5" y="403.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="540.5" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3,140 samples, 0.62%)</title><rect x="537.5" y="387.0" width="7.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="540.5" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (3,112 samples, 0.61%)</title><rect x="537.5" y="371.0" width="7.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="540.5" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (4,627 samples, 0.91%)</title><rect x="544.8" y="451.0" width="10.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="547.8" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1,813 samples, 0.36%)</title><rect x="544.8" y="435.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="547.8" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (1,813 samples, 0.36%)</title><rect x="544.8" y="419.0" width="4.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="547.8" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1,478 samples, 0.29%)</title><rect x="549.0" y="435.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="552.0" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (1,429 samples, 0.28%)</title><rect x="549.0" y="419.0" width="3.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="552.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$453/817487158.apply (1,336 samples, 0.26%)</title><rect x="552.5" y="435.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="555.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (1,336 samples, 0.26%)</title><rect x="552.5" y="419.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="555.5" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (1,336 samples, 0.26%)</title><rect x="552.5" y="403.0" width="3.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="555.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (14,546 samples, 2.86%)</title><rect x="555.6" y="611.0" width="33.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="558.6" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (14,546 samples, 2.86%)</title><rect x="555.6" y="595.0" width="33.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="558.6" y="606.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (14,546 samples, 2.86%)</title><rect x="555.6" y="579.0" width="33.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="558.6" y="590.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$257/2141450187.run (14,546 samples, 2.86%)</title><rect x="555.6" y="563.0" width="33.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="558.6" y="574.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (14,546 samples, 2.86%)</title><rect x="555.6" y="547.0" width="33.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="558.6" y="558.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2,148 samples, 0.42%)</title><rect x="555.6" y="531.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="558.6" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (783 samples, 0.15%)</title><rect x="555.6" y="515.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="558.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (783 samples, 0.15%)</title><rect x="555.6" y="499.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="558.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$294/1409719001.get$Lambda (304 samples, 0.06%)</title><rect x="555.6" y="483.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="558.6" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$294 (304 samples, 0.06%)</title><rect x="555.6" y="467.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="558.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$299/945266435.get$Lambda (479 samples, 0.09%)</title><rect x="556.3" y="483.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="559.3" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$299 (479 samples, 0.09%)</title><rect x="556.3" y="467.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="559.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (579 samples, 0.11%)</title><rect x="557.4" y="515.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="560.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (786 samples, 0.15%)</title><rect x="558.7" y="515.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="561.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (786 samples, 0.15%)</title><rect x="558.7" y="499.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="561.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (341 samples, 0.07%)</title><rect x="558.7" y="483.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="561.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (445 samples, 0.09%)</title><rect x="559.5" y="483.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="562.5" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (445 samples, 0.09%)</title><rect x="559.5" y="467.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="562.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (12,337 samples, 2.43%)</title><rect x="560.6" y="531.0" width="28.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="563.6" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (12,337 samples, 2.43%)</title><rect x="560.6" y="515.0" width="28.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="563.6" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (12,337 samples, 2.43%)</title><rect x="560.6" y="499.0" width="28.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="563.6" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (12,337 samples, 2.43%)</title><rect x="560.6" y="483.0" width="28.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="563.6" y="494.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (12,337 samples, 2.43%)</title><rect x="560.6" y="467.0" width="28.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="563.6" y="478.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (12,337 samples, 2.43%)</title><rect x="560.6" y="451.0" width="28.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="563.6" y="462.0">jd..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (904 samples, 0.18%)</title><rect x="560.6" y="435.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="563.6" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (904 samples, 0.18%)</title><rect x="560.6" y="419.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="563.6" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (904 samples, 0.18%)</title><rect x="560.6" y="403.0" width="2.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="563.6" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (411 samples, 0.08%)</title><rect x="562.7" y="435.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="565.7" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (411 samples, 0.08%)</title><rect x="562.7" y="419.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="565.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$472/1342553686.run (7,582 samples, 1.49%)</title><rect x="563.6" y="435.0" width="17.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="566.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (7,582 samples, 1.49%)</title><rect x="563.6" y="419.0" width="17.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="566.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (7,582 samples, 1.49%)</title><rect x="563.6" y="403.0" width="17.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="566.6" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (2,413 samples, 0.47%)</title><rect x="563.6" y="387.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="566.6" y="398.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,653 samples, 0.33%)</title><rect x="563.6" y="371.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="566.6" y="382.0"></text>
</g>
<g>
<title>java/util/List.spliterator (558 samples, 0.11%)</title><rect x="563.6" y="355.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="566.6" y="366.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (558 samples, 0.11%)</title><rect x="563.6" y="339.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="566.6" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1,095 samples, 0.22%)</title><rect x="564.9" y="355.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="567.9" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1,092 samples, 0.21%)</title><rect x="564.9" y="339.0" width="2.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="567.9" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (760 samples, 0.15%)</title><rect x="567.5" y="371.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="570.5" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (760 samples, 0.15%)</title><rect x="567.5" y="355.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="570.5" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (760 samples, 0.15%)</title><rect x="567.5" y="339.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="570.5" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$57/341796579.get (471 samples, 0.09%)</title><rect x="567.5" y="323.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="570.5" y="334.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (471 samples, 0.09%)</title><rect x="567.5" y="307.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="570.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (289 samples, 0.06%)</title><rect x="568.6" y="323.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="571.6" y="334.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (289 samples, 0.06%)</title><rect x="568.6" y="307.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="571.6" y="318.0"></text>
</g>
<g>
<title>java/util/Optional.of (289 samples, 0.06%)</title><rect x="568.6" y="291.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="571.6" y="302.0"></text>
</g>
<g>
<title>java.util.Optional (289 samples, 0.06%)</title><rect x="568.6" y="275.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="571.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (5,169 samples, 1.02%)</title><rect x="569.2" y="387.0" width="12.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="572.2" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.now (492 samples, 0.10%)</title><rect x="569.2" y="371.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="572.2" y="382.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (492 samples, 0.10%)</title><rect x="569.2" y="355.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="572.2" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (492 samples, 0.10%)</title><rect x="569.2" y="339.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="572.2" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.create (492 samples, 0.10%)</title><rect x="569.2" y="323.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="572.2" y="334.0"></text>
</g>
<g>
<title>java.time.Instant (492 samples, 0.10%)</title><rect x="569.2" y="307.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="572.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (4,677 samples, 0.92%)</title><rect x="570.4" y="371.0" width="10.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="573.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (1,834 samples, 0.36%)</title><rect x="570.4" y="355.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="573.4" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.plus (491 samples, 0.10%)</title><rect x="570.4" y="339.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="573.4" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (491 samples, 0.10%)</title><rect x="570.4" y="323.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="573.4" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (491 samples, 0.10%)</title><rect x="570.4" y="307.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="573.4" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (491 samples, 0.10%)</title><rect x="570.4" y="291.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="573.4" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (491 samples, 0.10%)</title><rect x="570.4" y="275.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="573.4" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (491 samples, 0.10%)</title><rect x="570.4" y="259.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="573.4" y="270.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (458 samples, 0.09%)</title><rect x="571.5" y="339.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="574.5" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (458 samples, 0.09%)</title><rect x="571.5" y="323.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="574.5" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (458 samples, 0.09%)</title><rect x="571.5" y="307.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="574.5" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (458 samples, 0.09%)</title><rect x="571.5" y="291.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="574.5" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (458 samples, 0.09%)</title><rect x="571.5" y="275.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="574.5" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (458 samples, 0.09%)</title><rect x="571.5" y="259.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="574.5" y="270.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (381 samples, 0.07%)</title><rect x="572.7" y="339.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="575.7" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (381 samples, 0.07%)</title><rect x="572.7" y="323.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="575.7" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (381 samples, 0.07%)</title><rect x="572.7" y="307.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="575.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (458 samples, 0.09%)</title><rect x="573.6" y="339.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="576.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (895 samples, 0.18%)</title><rect x="574.6" y="355.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="577.6" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.get (463 samples, 0.09%)</title><rect x="574.6" y="339.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="577.6" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (463 samples, 0.09%)</title><rect x="574.6" y="323.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="577.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (463 samples, 0.09%)</title><rect x="574.6" y="307.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="577.6" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (463 samples, 0.09%)</title><rect x="574.6" y="291.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="577.6" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (432 samples, 0.09%)</title><rect x="575.7" y="339.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="578.7" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (432 samples, 0.09%)</title><rect x="575.7" y="323.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="578.7" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (432 samples, 0.09%)</title><rect x="575.7" y="307.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="578.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (1,948 samples, 0.38%)</title><rect x="576.7" y="355.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="579.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (443 samples, 0.09%)</title><rect x="576.7" y="339.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="579.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1,505 samples, 0.30%)</title><rect x="577.7" y="339.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="580.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (423 samples, 0.08%)</title><rect x="577.7" y="323.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="580.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (423 samples, 0.08%)</title><rect x="577.7" y="307.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="580.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (423 samples, 0.08%)</title><rect x="577.7" y="291.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="580.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (423 samples, 0.08%)</title><rect x="577.7" y="275.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="580.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (1,082 samples, 0.21%)</title><rect x="578.7" y="323.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="581.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (1,082 samples, 0.21%)</title><rect x="578.7" y="307.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="581.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (790 samples, 0.16%)</title><rect x="578.7" y="291.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="581.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (292 samples, 0.06%)</title><rect x="580.5" y="291.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="583.5" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (292 samples, 0.06%)</title><rect x="580.5" y="275.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="583.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (1,856 samples, 0.37%)</title><rect x="581.2" y="435.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="584.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (1,856 samples, 0.37%)</title><rect x="581.2" y="419.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="584.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (1,856 samples, 0.37%)</title><rect x="581.2" y="403.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="584.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,214 samples, 0.24%)</title><rect x="581.2" y="387.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="584.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,214 samples, 0.24%)</title><rect x="581.2" y="371.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="584.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1,214 samples, 0.24%)</title><rect x="581.2" y="355.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="584.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1,214 samples, 0.24%)</title><rect x="581.2" y="339.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="584.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$486/1745057828.accept (1,214 samples, 0.24%)</title><rect x="581.2" y="323.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="584.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (1,214 samples, 0.24%)</title><rect x="581.2" y="307.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="584.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,214 samples, 0.24%)</title><rect x="581.2" y="291.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="584.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,214 samples, 0.24%)</title><rect x="581.2" y="275.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="584.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,214 samples, 0.24%)</title><rect x="581.2" y="259.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="584.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$494/1940969782.apply (1,214 samples, 0.24%)</title><rect x="581.2" y="243.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="584.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (1,214 samples, 0.24%)</title><rect x="581.2" y="227.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="584.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (1,187 samples, 0.23%)</title><rect x="581.2" y="211.0" width="2.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="584.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (642 samples, 0.13%)</title><rect x="584.0" y="387.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="587.0" y="398.0"></text>
</g>
<g>
<title>byte[] (642 samples, 0.13%)</title><rect x="584.0" y="371.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="587.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (1,584 samples, 0.31%)</title><rect x="585.5" y="435.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="588.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (1,584 samples, 0.31%)</title><rect x="585.5" y="419.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="588.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (1,584 samples, 0.31%)</title><rect x="585.5" y="403.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="588.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (1,584 samples, 0.31%)</title><rect x="585.5" y="387.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="588.5" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (1,584 samples, 0.31%)</title><rect x="585.5" y="371.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="588.5" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (468 samples, 0.09%)</title><rect x="585.5" y="355.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="588.5" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (468 samples, 0.09%)</title><rect x="585.5" y="339.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="588.5" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,116 samples, 0.22%)</title><rect x="586.6" y="355.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="589.6" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,116 samples, 0.22%)</title><rect x="586.6" y="339.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="589.6" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,087 samples, 0.21%)</title><rect x="586.6" y="323.0" width="2.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="589.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica$$Lambda$450/692403226.run (82,969 samples, 16.33%)</title><rect x="589.4" y="643.0" width="192.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="592.4" y="654.0">ru/mail/polis/service/pra..</text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.lambda$asyncAct$5 (82,969 samples, 16.33%)</title><rect x="589.4" y="627.0" width="192.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="592.4" y="638.0">ru/mail/polis/service/pra..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4,710 samples, 0.93%)</title><rect x="589.4" y="611.0" width="10.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="592.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3,538 samples, 0.70%)</title><rect x="589.4" y="595.0" width="8.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="592.4" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2,021 samples, 0.40%)</title><rect x="589.4" y="579.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="592.4" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2,021 samples, 0.40%)</title><rect x="589.4" y="563.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="592.4" y="574.0"></text>
</g>
<g>
<title>byte[] (2,021 samples, 0.40%)</title><rect x="589.4" y="547.0" width="4.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="592.4" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,517 samples, 0.30%)</title><rect x="594.1" y="579.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="597.1" y="590.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (734 samples, 0.14%)</title><rect x="594.1" y="563.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="597.1" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (783 samples, 0.15%)</title><rect x="595.8" y="563.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="598.8" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (783 samples, 0.15%)</title><rect x="595.8" y="547.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="598.8" y="558.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (783 samples, 0.15%)</title><rect x="595.8" y="531.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="598.8" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (783 samples, 0.15%)</title><rect x="595.8" y="515.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="598.8" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (783 samples, 0.15%)</title><rect x="595.8" y="499.0" width="1.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="598.8" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,172 samples, 0.23%)</title><rect x="597.6" y="595.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="600.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,172 samples, 0.23%)</title><rect x="597.6" y="579.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="600.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,172 samples, 0.23%)</title><rect x="597.6" y="563.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="600.6" y="574.0"></text>
</g>
<g>
<title>java.lang.String (439 samples, 0.09%)</title><rect x="597.6" y="547.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="600.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (733 samples, 0.14%)</title><rect x="598.6" y="547.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="601.6" y="558.0"></text>
</g>
<g>
<title>byte[] (733 samples, 0.14%)</title><rect x="598.6" y="531.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="601.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica$$Lambda$555/1072459075.act (78,259 samples, 15.40%)</title><rect x="600.3" y="611.0" width="181.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="603.3" y="622.0">ru/mail/polis/service/p..</text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.lambda$execGet$4 (78,259 samples, 15.40%)</title><rect x="600.3" y="595.0" width="181.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="603.3" y="606.0">ru/mail/polis/service/p..</text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.get (78,259 samples, 15.40%)</title><rect x="600.3" y="579.0" width="181.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="603.3" y="590.0">ru/mail/polis/service/p..</text>
</g>
<g>
<title>byte[] (540 samples, 0.11%)</title><rect x="600.3" y="563.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="603.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/931496835.linkToTargetMethod (1,168 samples, 0.23%)</title><rect x="601.5" y="563.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="604.5" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/789609002.invoke (1,168 samples, 0.23%)</title><rect x="601.5" y="547.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="604.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,168 samples, 0.23%)</title><rect x="601.5" y="531.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="604.5" y="542.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (392 samples, 0.08%)</title><rect x="601.5" y="515.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="604.5" y="526.0"></text>
</g>
<g>
<title>java.lang.String (392 samples, 0.08%)</title><rect x="601.5" y="499.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="604.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (776 samples, 0.15%)</title><rect x="602.5" y="515.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="605.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (776 samples, 0.15%)</title><rect x="602.5" y="499.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="605.5" y="510.0"></text>
</g>
<g>
<title>byte[] (776 samples, 0.15%)</title><rect x="602.5" y="483.0" width="1.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="605.5" y="494.0"></text>
</g>
<g>
<title>one.nio.http.Response (367 samples, 0.07%)</title><rect x="604.3" y="563.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="607.3" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,548 samples, 0.30%)</title><rect x="605.1" y="563.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="608.1" y="574.0"></text>
</g>
<g>
<title>byte[] (635 samples, 0.12%)</title><rect x="605.1" y="547.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="608.1" y="558.0"></text>
</g>
<g>
<title>java.lang.String[] (531 samples, 0.10%)</title><rect x="606.6" y="547.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="609.6" y="558.0"></text>
</g>
<g>
<title>java.lang.String (382 samples, 0.08%)</title><rect x="607.8" y="547.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="610.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/LSMDao.getCell (72,573 samples, 14.28%)</title><rect x="608.7" y="563.0" width="168.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="611.7" y="574.0">ru/mail/polis/dao/pran..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (9,952 samples, 1.96%)</title><rect x="608.7" y="547.0" width="23.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="611.7" y="558.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7,875 samples, 1.55%)</title><rect x="608.7" y="531.0" width="18.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="611.7" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (7,875 samples, 1.55%)</title><rect x="608.7" y="515.0" width="18.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="611.7" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (7,875 samples, 1.55%)</title><rect x="608.7" y="499.0" width="18.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="611.7" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (7,875 samples, 1.55%)</title><rect x="608.7" y="483.0" width="18.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="611.7" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (7,875 samples, 1.55%)</title><rect x="608.7" y="467.0" width="18.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="611.7" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7,875 samples, 1.55%)</title><rect x="608.7" y="451.0" width="18.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="611.7" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7,875 samples, 1.55%)</title><rect x="608.7" y="435.0" width="18.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="611.7" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (6,026 samples, 1.19%)</title><rect x="608.7" y="419.0" width="14.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="611.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable$1.next (6,026 samples, 1.19%)</title><rect x="608.7" y="403.0" width="14.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="611.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable$1.next (6,026 samples, 1.19%)</title><rect x="608.7" y="387.0" width="14.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="611.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.cellAt (6,026 samples, 1.19%)</title><rect x="608.7" y="371.0" width="14.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="611.7" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (980 samples, 0.19%)</title><rect x="608.7" y="355.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="611.7" y="366.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (980 samples, 0.19%)</title><rect x="608.7" y="339.0" width="2.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="611.7" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (2,129 samples, 0.42%)</title><rect x="611.0" y="355.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="614.0" y="366.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,129 samples, 0.42%)</title><rect x="611.0" y="339.0" width="4.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="614.0" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.pranova.Cell (390 samples, 0.08%)</title><rect x="615.9" y="355.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="618.9" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.pranova.Value (390 samples, 0.08%)</title><rect x="616.8" y="355.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="619.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.keyAt (2,137 samples, 0.42%)</title><rect x="617.7" y="355.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="620.7" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,053 samples, 0.21%)</title><rect x="617.7" y="339.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="620.7" y="350.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,053 samples, 0.21%)</title><rect x="617.7" y="323.0" width="2.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="620.7" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (1,084 samples, 0.21%)</title><rect x="620.2" y="339.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="623.2" y="350.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,084 samples, 0.21%)</title><rect x="620.2" y="323.0" width="2.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="623.2" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$542/2071213622.compare (1,849 samples, 0.36%)</title><rect x="622.7" y="419.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="625.7" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,849 samples, 0.36%)</title><rect x="622.7" y="403.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="625.7" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$551/1879157613.compare (1,849 samples, 0.36%)</title><rect x="622.7" y="387.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="625.7" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,849 samples, 0.36%)</title><rect x="622.7" y="371.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="625.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/Cell$$Lambda$550/1285597742.apply (1,849 samples, 0.36%)</title><rect x="622.7" y="355.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="625.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/Cell.getKey (1,849 samples, 0.36%)</title><rect x="622.7" y="339.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="625.7" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,052 samples, 0.21%)</title><rect x="622.7" y="323.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="625.7" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,052 samples, 0.21%)</title><rect x="622.7" y="307.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="625.7" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,052 samples, 0.21%)</title><rect x="622.7" y="291.0" width="2.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="625.7" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (797 samples, 0.16%)</title><rect x="625.1" y="323.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="628.1" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (797 samples, 0.16%)</title><rect x="625.1" y="307.0" width="1.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="628.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/LSMDao$$Lambda$559/1893170142.apply (2,077 samples, 0.41%)</title><rect x="627.0" y="531.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="630.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/Cell.getKey (2,077 samples, 0.41%)</title><rect x="627.0" y="515.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="630.0" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,077 samples, 0.41%)</title><rect x="627.0" y="499.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="630.0" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,077 samples, 0.41%)</title><rect x="627.0" y="483.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="630.0" y="494.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,077 samples, 0.41%)</title><rect x="627.0" y="467.0" width="4.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="630.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/Cell.getKey (1,082 samples, 0.21%)</title><rect x="631.8" y="547.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="634.8" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,082 samples, 0.21%)</title><rect x="631.8" y="531.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="634.8" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,082 samples, 0.21%)</title><rect x="631.8" y="515.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="634.8" y="526.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,082 samples, 0.21%)</title><rect x="631.8" y="499.0" width="2.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="634.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/LSMDao.getIterator (61,539 samples, 12.11%)</title><rect x="634.3" y="547.0" width="142.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="637.3" y="558.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>java.util.ArrayList (1,843 samples, 0.36%)</title><rect x="634.3" y="531.0" width="4.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="637.3" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (922 samples, 0.18%)</title><rect x="638.6" y="531.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="641.6" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (922 samples, 0.18%)</title><rect x="638.6" y="515.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="641.6" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (922 samples, 0.18%)</title><rect x="638.6" y="499.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="641.6" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (922 samples, 0.18%)</title><rect x="638.6" y="483.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="641.6" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (922 samples, 0.18%)</title><rect x="638.6" y="467.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="641.6" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (922 samples, 0.18%)</title><rect x="638.6" y="451.0" width="2.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="641.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.iterator (32,139 samples, 6.32%)</title><rect x="640.8" y="531.0" width="74.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="643.8" y="542.0">ru/mail/..</text>
</g>
<g>
<title>ru.mail.polis.dao.pranova.FileTable$1 (432 samples, 0.09%)</title><rect x="640.8" y="515.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="643.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable$1.&lt;init&gt; (31,707 samples, 6.24%)</title><rect x="641.8" y="515.0" width="73.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="644.8" y="526.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.position (31,707 samples, 6.24%)</title><rect x="641.8" y="499.0" width="73.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="644.8" y="510.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.keyAt (31,707 samples, 6.24%)</title><rect x="641.8" y="483.0" width="73.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="644.8" y="494.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (15,862 samples, 3.12%)</title><rect x="641.8" y="467.0" width="36.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="644.8" y="478.0">jav..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (15,862 samples, 3.12%)</title><rect x="641.8" y="451.0" width="36.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="644.8" y="462.0">jav..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (15,845 samples, 3.12%)</title><rect x="678.6" y="467.0" width="36.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="681.6" y="478.0">jav..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (15,845 samples, 3.12%)</title><rect x="678.6" y="451.0" width="36.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="681.6" y="462.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/LSMDao.getCellsIterator (20,391 samples, 4.01%)</title><rect x="715.4" y="531.0" width="47.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="718.4" y="542.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (12,101 samples, 2.38%)</title><rect x="715.4" y="515.0" width="28.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="718.4" y="526.0">co..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (270 samples, 0.05%)</title><rect x="715.4" y="499.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="718.4" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (11,831 samples, 2.33%)</title><rect x="716.0" y="499.0" width="27.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="719.0" y="510.0">c..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (389 samples, 0.08%)</title><rect x="716.0" y="483.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="719.0" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (775 samples, 0.15%)</title><rect x="716.9" y="483.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="719.9" y="494.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (775 samples, 0.15%)</title><rect x="716.9" y="467.0" width="1.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="719.9" y="478.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (508 samples, 0.10%)</title><rect x="718.7" y="483.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="721.7" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (367 samples, 0.07%)</title><rect x="719.9" y="483.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="722.9" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (367 samples, 0.07%)</title><rect x="719.9" y="467.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="722.9" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (9,792 samples, 1.93%)</title><rect x="720.7" y="483.0" width="22.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="723.7" y="494.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (9,792 samples, 1.93%)</title><rect x="720.7" y="467.0" width="22.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="723.7" y="478.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (9,792 samples, 1.93%)</title><rect x="720.7" y="451.0" width="22.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="723.7" y="462.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (9,792 samples, 1.93%)</title><rect x="720.7" y="435.0" width="22.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="723.7" y="446.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9,792 samples, 1.93%)</title><rect x="720.7" y="419.0" width="22.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="723.7" y="430.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9,792 samples, 1.93%)</title><rect x="720.7" y="403.0" width="22.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="723.7" y="414.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (7,968 samples, 1.57%)</title><rect x="720.7" y="387.0" width="18.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="723.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,932 samples, 0.38%)</title><rect x="720.7" y="371.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="723.7" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (420 samples, 0.08%)</title><rect x="720.7" y="355.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="723.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (420 samples, 0.08%)</title><rect x="720.7" y="339.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="723.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (420 samples, 0.08%)</title><rect x="720.7" y="323.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="723.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (420 samples, 0.08%)</title><rect x="720.7" y="307.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="723.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/MemTable$$Lambda$548/685012951.apply (420 samples, 0.08%)</title><rect x="720.7" y="291.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="723.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/MemTable.lambda$iterator$0 (420 samples, 0.08%)</title><rect x="720.7" y="275.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="723.7" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.pranova.Cell (420 samples, 0.08%)</title><rect x="720.7" y="259.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="723.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/MemoryTablePool$$Lambda$556/2004840127.apply (1,512 samples, 0.30%)</title><rect x="721.7" y="355.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="724.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/Cell.getKey (1,512 samples, 0.30%)</title><rect x="721.7" y="339.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="724.7" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,512 samples, 0.30%)</title><rect x="721.7" y="323.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="724.7" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,512 samples, 0.30%)</title><rect x="721.7" y="307.0" width="3.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="724.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable$1.next (6,036 samples, 1.19%)</title><rect x="725.2" y="371.0" width="14.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="728.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable$1.next (6,036 samples, 1.19%)</title><rect x="725.2" y="355.0" width="14.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="728.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.cellAt (6,036 samples, 1.19%)</title><rect x="725.2" y="339.0" width="14.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="728.2" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,031 samples, 0.20%)</title><rect x="725.2" y="323.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="728.2" y="334.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,031 samples, 0.20%)</title><rect x="725.2" y="307.0" width="2.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="728.2" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (2,123 samples, 0.42%)</title><rect x="727.6" y="323.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="730.6" y="334.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,123 samples, 0.42%)</title><rect x="727.6" y="307.0" width="5.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="730.6" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.pranova.Cell (417 samples, 0.08%)</title><rect x="732.6" y="323.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="735.6" y="334.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.pranova.Value (380 samples, 0.07%)</title><rect x="733.5" y="323.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="736.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.keyAt (2,085 samples, 0.41%)</title><rect x="734.4" y="323.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="737.4" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,032 samples, 0.20%)</title><rect x="734.4" y="307.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="737.4" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,032 samples, 0.20%)</title><rect x="734.4" y="291.0" width="2.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="737.4" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (1,053 samples, 0.21%)</title><rect x="736.8" y="307.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="739.8" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,053 samples, 0.21%)</title><rect x="736.8" y="291.0" width="2.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="739.8" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$542/2071213622.compare (1,824 samples, 0.36%)</title><rect x="739.2" y="387.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="742.2" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,824 samples, 0.36%)</title><rect x="739.2" y="371.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="742.2" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$551/1879157613.compare (1,824 samples, 0.36%)</title><rect x="739.2" y="355.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="742.2" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,824 samples, 0.36%)</title><rect x="739.2" y="339.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="742.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/Cell$$Lambda$550/1285597742.apply (1,824 samples, 0.36%)</title><rect x="739.2" y="323.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="742.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/Cell.getKey (1,824 samples, 0.36%)</title><rect x="739.2" y="307.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="742.2" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,026 samples, 0.20%)</title><rect x="739.2" y="291.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="742.2" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,026 samples, 0.20%)</title><rect x="739.2" y="275.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="742.2" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,026 samples, 0.20%)</title><rect x="739.2" y="259.0" width="2.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="742.2" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (798 samples, 0.16%)</title><rect x="741.6" y="291.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="744.6" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (798 samples, 0.16%)</title><rect x="741.6" y="275.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="744.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (8,290 samples, 1.63%)</title><rect x="743.5" y="515.0" width="19.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="746.5" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (378 samples, 0.07%)</title><rect x="743.5" y="499.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="746.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (7,912 samples, 1.56%)</title><rect x="744.4" y="499.0" width="18.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="747.4" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7,912 samples, 1.56%)</title><rect x="744.4" y="483.0" width="18.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="747.4" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (7,912 samples, 1.56%)</title><rect x="744.4" y="467.0" width="18.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="747.4" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (7,912 samples, 1.56%)</title><rect x="744.4" y="451.0" width="18.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="747.4" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (7,912 samples, 1.56%)</title><rect x="744.4" y="435.0" width="18.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="747.4" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (7,912 samples, 1.56%)</title><rect x="744.4" y="419.0" width="18.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="747.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7,912 samples, 1.56%)</title><rect x="744.4" y="403.0" width="18.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="747.4" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7,912 samples, 1.56%)</title><rect x="744.4" y="387.0" width="18.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="747.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (6,120 samples, 1.20%)</title><rect x="744.4" y="371.0" width="14.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="747.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable$1.next (6,120 samples, 1.20%)</title><rect x="744.4" y="355.0" width="14.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="747.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable$1.next (6,120 samples, 1.20%)</title><rect x="744.4" y="339.0" width="14.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="747.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.cellAt (6,120 samples, 1.20%)</title><rect x="744.4" y="323.0" width="14.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="747.4" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,074 samples, 0.21%)</title><rect x="744.4" y="307.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="747.4" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,074 samples, 0.21%)</title><rect x="744.4" y="291.0" width="2.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="747.4" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (2,064 samples, 0.41%)</title><rect x="746.9" y="307.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="749.9" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,064 samples, 0.41%)</title><rect x="746.9" y="291.0" width="4.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="749.9" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.pranova.Cell (390 samples, 0.08%)</title><rect x="751.6" y="307.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="754.6" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.pranova.Value (391 samples, 0.08%)</title><rect x="752.6" y="307.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="755.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.keyAt (2,201 samples, 0.43%)</title><rect x="753.5" y="307.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="756.5" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,104 samples, 0.22%)</title><rect x="753.5" y="291.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="756.5" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,104 samples, 0.22%)</title><rect x="753.5" y="275.0" width="2.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="756.5" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (1,097 samples, 0.22%)</title><rect x="756.0" y="291.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="759.0" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,097 samples, 0.22%)</title><rect x="756.0" y="275.0" width="2.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="759.0" y="286.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$542/2071213622.compare (1,792 samples, 0.35%)</title><rect x="758.6" y="371.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="761.6" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,792 samples, 0.35%)</title><rect x="758.6" y="355.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="761.6" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$551/1879157613.compare (1,792 samples, 0.35%)</title><rect x="758.6" y="339.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="761.6" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,792 samples, 0.35%)</title><rect x="758.6" y="323.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="761.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/Cell$$Lambda$550/1285597742.apply (1,792 samples, 0.35%)</title><rect x="758.6" y="307.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="761.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/Cell.getKey (1,792 samples, 0.35%)</title><rect x="758.6" y="291.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="761.6" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,033 samples, 0.20%)</title><rect x="758.6" y="275.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="761.6" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,033 samples, 0.20%)</title><rect x="758.6" y="259.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="761.6" y="270.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,033 samples, 0.20%)</title><rect x="758.6" y="243.0" width="2.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="761.6" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (759 samples, 0.15%)</title><rect x="761.0" y="275.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="764.0" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (759 samples, 0.15%)</title><rect x="761.0" y="259.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="764.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/MemoryTablePool.iterator (6,244 samples, 1.23%)</title><rect x="762.7" y="531.0" width="14.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="765.7" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,913 samples, 0.38%)</title><rect x="762.7" y="515.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="765.7" y="526.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (276 samples, 0.05%)</title><rect x="762.7" y="499.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="765.7" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,637 samples, 0.32%)</title><rect x="763.4" y="499.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="766.4" y="510.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (358 samples, 0.07%)</title><rect x="763.4" y="483.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="766.4" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (371 samples, 0.07%)</title><rect x="764.2" y="483.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="767.2" y="494.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (371 samples, 0.07%)</title><rect x="764.2" y="467.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="767.2" y="478.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (539 samples, 0.11%)</title><rect x="765.1" y="483.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="768.1" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (369 samples, 0.07%)</title><rect x="766.3" y="483.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="769.3" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (369 samples, 0.07%)</title><rect x="766.3" y="467.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="769.3" y="478.0"></text>
</g>
<g>
<title>java.util.ArrayList (421 samples, 0.08%)</title><rect x="767.2" y="515.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="770.2" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (670 samples, 0.13%)</title><rect x="768.2" y="515.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="771.2" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (670 samples, 0.13%)</title><rect x="768.2" y="499.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="771.2" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (670 samples, 0.13%)</title><rect x="768.2" y="483.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="771.2" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (670 samples, 0.13%)</title><rect x="768.2" y="467.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="771.2" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (409 samples, 0.08%)</title><rect x="769.7" y="515.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="772.7" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (409 samples, 0.08%)</title><rect x="769.7" y="499.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="772.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (764 samples, 0.15%)</title><rect x="770.7" y="515.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="773.7" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (377 samples, 0.07%)</title><rect x="770.7" y="499.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="773.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (387 samples, 0.08%)</title><rect x="771.6" y="499.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="774.6" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (387 samples, 0.08%)</title><rect x="771.6" y="483.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="774.6" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (387 samples, 0.08%)</title><rect x="771.6" y="467.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="774.6" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (387 samples, 0.08%)</title><rect x="771.6" y="451.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="774.6" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (387 samples, 0.08%)</title><rect x="771.6" y="435.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="774.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/MemTable$$Lambda$548/685012951.apply (387 samples, 0.08%)</title><rect x="771.6" y="419.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="774.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/MemTable.lambda$iterator$0 (387 samples, 0.08%)</title><rect x="771.6" y="403.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="774.6" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.pranova.Cell (387 samples, 0.08%)</title><rect x="771.6" y="387.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="774.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/MemTable.iterator (2,046 samples, 0.40%)</title><rect x="772.5" y="515.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="775.5" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (397 samples, 0.08%)</title><rect x="772.5" y="499.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="775.5" y="510.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (397 samples, 0.08%)</title><rect x="772.5" y="483.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="775.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (529 samples, 0.10%)</title><rect x="773.4" y="499.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="776.4" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (529 samples, 0.10%)</title><rect x="773.4" y="483.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="776.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (309 samples, 0.06%)</title><rect x="774.6" y="499.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="777.6" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (309 samples, 0.06%)</title><rect x="774.6" y="483.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="777.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (811 samples, 0.16%)</title><rect x="775.4" y="499.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="778.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (811 samples, 0.16%)</title><rect x="775.4" y="483.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="778.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (811 samples, 0.16%)</title><rect x="775.4" y="467.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="778.4" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (811 samples, 0.16%)</title><rect x="775.4" y="451.0" width="1.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="778.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/Value.getData (2,063 samples, 0.41%)</title><rect x="777.2" y="563.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="780.2" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,063 samples, 0.41%)</title><rect x="777.2" y="547.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="780.2" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,063 samples, 0.41%)</title><rect x="777.2" y="531.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="780.2" y="542.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,063 samples, 0.41%)</title><rect x="777.2" y="515.0" width="4.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="780.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (31,263 samples, 6.15%)</title><rect x="782.0" y="691.0" width="72.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="785.0" y="702.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (31,263 samples, 6.15%)</title><rect x="782.0" y="675.0" width="72.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="785.0" y="686.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (31,263 samples, 6.15%)</title><rect x="782.0" y="659.0" width="72.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="785.0" y="670.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (31,263 samples, 6.15%)</title><rect x="782.0" y="643.0" width="72.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="785.0" y="654.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (31,263 samples, 6.15%)</title><rect x="782.0" y="627.0" width="72.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="785.0" y="638.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (24,024 samples, 4.73%)</title><rect x="782.0" y="611.0" width="55.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="785.0" y="622.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (24,024 samples, 4.73%)</title><rect x="782.0" y="595.0" width="55.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="785.0" y="606.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils$$Lambda$112/1456089015.get (24,024 samples, 4.73%)</title><rect x="782.0" y="579.0" width="55.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="785.0" y="590.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils.lambda$replication$6 (24,024 samples, 4.73%)</title><rect x="782.0" y="563.0" width="55.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="785.0" y="574.0">ru/ma..</text>
</g>
<g>
<title>ru.mail.polis.service.pranova.Value (191 samples, 0.04%)</title><rect x="782.0" y="547.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="785.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils.getTimestamp (307 samples, 0.06%)</title><rect x="782.5" y="547.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="785.5" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (307 samples, 0.06%)</title><rect x="782.5" y="531.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="785.5" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (307 samples, 0.06%)</title><rect x="782.5" y="515.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="785.5" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (307 samples, 0.06%)</title><rect x="782.5" y="499.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="785.5" y="510.0"></text>
</g>
<g>
<title>java.lang.String (129 samples, 0.03%)</title><rect x="782.5" y="483.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="785.5" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (178 samples, 0.04%)</title><rect x="782.8" y="483.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="785.8" y="494.0"></text>
</g>
<g>
<title>byte[] (178 samples, 0.04%)</title><rect x="782.8" y="467.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="785.8" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica$$Lambda$555/1072459075.act (23,346 samples, 4.59%)</title><rect x="783.2" y="547.0" width="54.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="786.2" y="558.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.lambda$execGet$4 (23,346 samples, 4.59%)</title><rect x="783.2" y="531.0" width="54.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="786.2" y="542.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.get (23,346 samples, 4.59%)</title><rect x="783.2" y="515.0" width="54.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="786.2" y="526.0">ru/ma..</text>
</g>
<g>
<title>byte[] (156 samples, 0.03%)</title><rect x="783.2" y="499.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="786.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/931496835.linkToTargetMethod (329 samples, 0.06%)</title><rect x="783.5" y="499.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="786.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/789609002.invoke (329 samples, 0.06%)</title><rect x="783.5" y="483.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="786.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (329 samples, 0.06%)</title><rect x="783.5" y="467.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="786.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (222 samples, 0.04%)</title><rect x="783.8" y="451.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="786.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (222 samples, 0.04%)</title><rect x="783.8" y="435.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="786.8" y="446.0"></text>
</g>
<g>
<title>byte[] (222 samples, 0.04%)</title><rect x="783.8" y="419.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="786.8" y="430.0"></text>
</g>
<g>
<title>one.nio.http.Response (113 samples, 0.02%)</title><rect x="784.3" y="499.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="787.3" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (484 samples, 0.10%)</title><rect x="784.6" y="499.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="787.6" y="510.0"></text>
</g>
<g>
<title>byte[] (219 samples, 0.04%)</title><rect x="784.6" y="483.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="787.6" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (156 samples, 0.03%)</title><rect x="785.1" y="483.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="788.1" y="494.0"></text>
</g>
<g>
<title>java.lang.String (109 samples, 0.02%)</title><rect x="785.4" y="483.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="788.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/LSMDao.getCell (21,665 samples, 4.26%)</title><rect x="785.7" y="499.0" width="50.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="788.7" y="510.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2,962 samples, 0.58%)</title><rect x="785.7" y="483.0" width="6.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="788.7" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2,342 samples, 0.46%)</title><rect x="785.7" y="467.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="788.7" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,342 samples, 0.46%)</title><rect x="785.7" y="451.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="788.7" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,342 samples, 0.46%)</title><rect x="785.7" y="435.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="788.7" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,342 samples, 0.46%)</title><rect x="785.7" y="419.0" width="5.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="788.7" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,342 samples, 0.46%)</title><rect x="785.7" y="403.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="788.7" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,342 samples, 0.46%)</title><rect x="785.7" y="387.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="788.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,342 samples, 0.46%)</title><rect x="785.7" y="371.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="788.7" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,801 samples, 0.35%)</title><rect x="785.7" y="355.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="788.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable$1.next (1,801 samples, 0.35%)</title><rect x="785.7" y="339.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="788.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable$1.next (1,801 samples, 0.35%)</title><rect x="785.7" y="323.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="788.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.cellAt (1,801 samples, 0.35%)</title><rect x="785.7" y="307.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="788.7" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (309 samples, 0.06%)</title><rect x="785.7" y="291.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="788.7" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (309 samples, 0.06%)</title><rect x="785.7" y="275.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="788.7" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (617 samples, 0.12%)</title><rect x="786.4" y="291.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="789.4" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (617 samples, 0.12%)</title><rect x="786.4" y="275.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="789.4" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.pranova.Cell (147 samples, 0.03%)</title><rect x="787.8" y="291.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="790.8" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.pranova.Value (112 samples, 0.02%)</title><rect x="788.2" y="291.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="791.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.keyAt (616 samples, 0.12%)</title><rect x="788.4" y="291.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="791.4" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (335 samples, 0.07%)</title><rect x="788.4" y="275.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="791.4" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (335 samples, 0.07%)</title><rect x="788.4" y="259.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="791.4" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (281 samples, 0.06%)</title><rect x="789.2" y="275.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="792.2" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (281 samples, 0.06%)</title><rect x="789.2" y="259.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="792.2" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$542/2071213622.compare (541 samples, 0.11%)</title><rect x="789.9" y="355.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="792.9" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (541 samples, 0.11%)</title><rect x="789.9" y="339.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="792.9" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$551/1879157613.compare (541 samples, 0.11%)</title><rect x="789.9" y="323.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="792.9" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (541 samples, 0.11%)</title><rect x="789.9" y="307.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="792.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/Cell$$Lambda$550/1285597742.apply (541 samples, 0.11%)</title><rect x="789.9" y="291.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="792.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/Cell.getKey (541 samples, 0.11%)</title><rect x="789.9" y="275.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="792.9" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (305 samples, 0.06%)</title><rect x="789.9" y="259.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="792.9" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (305 samples, 0.06%)</title><rect x="789.9" y="243.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="792.9" y="254.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (305 samples, 0.06%)</title><rect x="789.9" y="227.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="792.9" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (236 samples, 0.05%)</title><rect x="790.6" y="259.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="793.6" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (236 samples, 0.05%)</title><rect x="790.6" y="243.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="793.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/LSMDao$$Lambda$559/1893170142.apply (620 samples, 0.12%)</title><rect x="791.1" y="467.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="794.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/Cell.getKey (620 samples, 0.12%)</title><rect x="791.1" y="451.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="794.1" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (620 samples, 0.12%)</title><rect x="791.1" y="435.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="794.1" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (620 samples, 0.12%)</title><rect x="791.1" y="419.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="794.1" y="430.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (620 samples, 0.12%)</title><rect x="791.1" y="403.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="794.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/Cell.getKey (315 samples, 0.06%)</title><rect x="792.6" y="483.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="795.6" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (315 samples, 0.06%)</title><rect x="792.6" y="467.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="795.6" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (315 samples, 0.06%)</title><rect x="792.6" y="451.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="795.6" y="462.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (315 samples, 0.06%)</title><rect x="792.6" y="435.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="795.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/LSMDao.getIterator (18,388 samples, 3.62%)</title><rect x="793.3" y="483.0" width="42.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="796.3" y="494.0">ru/m..</text>
</g>
<g>
<title>java.util.ArrayList (455 samples, 0.09%)</title><rect x="793.3" y="467.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="796.3" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (260 samples, 0.05%)</title><rect x="794.4" y="467.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="797.4" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (260 samples, 0.05%)</title><rect x="794.4" y="451.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="797.4" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (260 samples, 0.05%)</title><rect x="794.4" y="435.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="797.4" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (260 samples, 0.05%)</title><rect x="794.4" y="419.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="797.4" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (260 samples, 0.05%)</title><rect x="794.4" y="403.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="797.4" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (260 samples, 0.05%)</title><rect x="794.4" y="387.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="797.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.iterator (9,585 samples, 1.89%)</title><rect x="795.0" y="467.0" width="22.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="798.0" y="478.0">r..</text>
</g>
<g>
<title>ru.mail.polis.dao.pranova.FileTable$1 (116 samples, 0.02%)</title><rect x="795.0" y="451.0" width="0.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="798.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable$1.&lt;init&gt; (9,469 samples, 1.86%)</title><rect x="795.2" y="451.0" width="22.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="798.2" y="462.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.position (9,469 samples, 1.86%)</title><rect x="795.2" y="435.0" width="22.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="798.2" y="446.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.keyAt (9,469 samples, 1.86%)</title><rect x="795.2" y="419.0" width="22.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="798.2" y="430.0">r..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4,720 samples, 0.93%)</title><rect x="795.2" y="403.0" width="11.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="798.2" y="414.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (4,720 samples, 0.93%)</title><rect x="795.2" y="387.0" width="11.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="798.2" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (4,749 samples, 0.93%)</title><rect x="806.2" y="403.0" width="11.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="809.2" y="414.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (4,749 samples, 0.93%)</title><rect x="806.2" y="387.0" width="11.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="809.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/LSMDao.getCellsIterator (6,226 samples, 1.23%)</title><rect x="817.2" y="467.0" width="14.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="820.2" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (3,730 samples, 0.73%)</title><rect x="817.2" y="451.0" width="8.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="820.2" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (3,656 samples, 0.72%)</title><rect x="817.4" y="435.0" width="8.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="820.4" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (126 samples, 0.02%)</title><rect x="817.4" y="419.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="820.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (257 samples, 0.05%)</title><rect x="817.7" y="419.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="820.7" y="430.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (257 samples, 0.05%)</title><rect x="817.7" y="403.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="820.7" y="414.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (142 samples, 0.03%)</title><rect x="818.3" y="419.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="821.3" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (142 samples, 0.03%)</title><rect x="818.6" y="419.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="821.6" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (142 samples, 0.03%)</title><rect x="818.6" y="403.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="821.6" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,989 samples, 0.59%)</title><rect x="818.9" y="419.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="821.9" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,989 samples, 0.59%)</title><rect x="818.9" y="403.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="821.9" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,989 samples, 0.59%)</title><rect x="818.9" y="387.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="821.9" y="398.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,989 samples, 0.59%)</title><rect x="818.9" y="371.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="821.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,989 samples, 0.59%)</title><rect x="818.9" y="355.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="821.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,989 samples, 0.59%)</title><rect x="818.9" y="339.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="821.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (2,397 samples, 0.47%)</title><rect x="818.9" y="323.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="821.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (609 samples, 0.12%)</title><rect x="818.9" y="307.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="821.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (129 samples, 0.03%)</title><rect x="818.9" y="291.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="821.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (129 samples, 0.03%)</title><rect x="818.9" y="275.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="821.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (129 samples, 0.03%)</title><rect x="818.9" y="259.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="821.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (129 samples, 0.03%)</title><rect x="818.9" y="243.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="821.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/MemTable$$Lambda$548/685012951.apply (129 samples, 0.03%)</title><rect x="818.9" y="227.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="821.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/MemTable.lambda$iterator$0 (129 samples, 0.03%)</title><rect x="818.9" y="211.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="821.9" y="222.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.pranova.Cell (129 samples, 0.03%)</title><rect x="818.9" y="195.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="821.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/MemoryTablePool$$Lambda$556/2004840127.apply (480 samples, 0.09%)</title><rect x="819.2" y="291.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="822.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/Cell.getKey (480 samples, 0.09%)</title><rect x="819.2" y="275.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="822.2" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (480 samples, 0.09%)</title><rect x="819.2" y="259.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="822.2" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (480 samples, 0.09%)</title><rect x="819.2" y="243.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="822.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable$1.next (1,788 samples, 0.35%)</title><rect x="820.4" y="307.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="823.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable$1.next (1,788 samples, 0.35%)</title><rect x="820.4" y="291.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="823.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.cellAt (1,788 samples, 0.35%)</title><rect x="820.4" y="275.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="823.4" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (310 samples, 0.06%)</title><rect x="820.4" y="259.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="823.4" y="270.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (310 samples, 0.06%)</title><rect x="820.4" y="243.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="823.4" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (629 samples, 0.12%)</title><rect x="821.1" y="259.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="824.1" y="270.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (629 samples, 0.12%)</title><rect x="821.1" y="243.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="824.1" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.pranova.Cell (127 samples, 0.02%)</title><rect x="822.5" y="259.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="825.5" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.pranova.Value (115 samples, 0.02%)</title><rect x="822.8" y="259.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="825.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.keyAt (607 samples, 0.12%)</title><rect x="823.1" y="259.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="826.1" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (319 samples, 0.06%)</title><rect x="823.1" y="243.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="826.1" y="254.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (319 samples, 0.06%)</title><rect x="823.1" y="227.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="826.1" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (288 samples, 0.06%)</title><rect x="823.8" y="243.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="826.8" y="254.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (288 samples, 0.06%)</title><rect x="823.8" y="227.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="826.8" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$542/2071213622.compare (592 samples, 0.12%)</title><rect x="824.5" y="323.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="827.5" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (592 samples, 0.12%)</title><rect x="824.5" y="307.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="827.5" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$551/1879157613.compare (592 samples, 0.12%)</title><rect x="824.5" y="291.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="827.5" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (592 samples, 0.12%)</title><rect x="824.5" y="275.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="827.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/Cell$$Lambda$550/1285597742.apply (592 samples, 0.12%)</title><rect x="824.5" y="259.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="827.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/Cell.getKey (592 samples, 0.12%)</title><rect x="824.5" y="243.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="827.5" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (359 samples, 0.07%)</title><rect x="824.5" y="227.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="827.5" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (359 samples, 0.07%)</title><rect x="824.5" y="211.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="827.5" y="222.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (359 samples, 0.07%)</title><rect x="824.5" y="195.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="827.5" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (233 samples, 0.05%)</title><rect x="825.3" y="227.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="828.3" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (233 samples, 0.05%)</title><rect x="825.3" y="211.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="828.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2,496 samples, 0.49%)</title><rect x="825.9" y="451.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="828.9" y="462.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (110 samples, 0.02%)</title><rect x="825.9" y="435.0" width="0.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="828.9" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2,386 samples, 0.47%)</title><rect x="826.1" y="435.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="829.1" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2,386 samples, 0.47%)</title><rect x="826.1" y="419.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="829.1" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,386 samples, 0.47%)</title><rect x="826.1" y="403.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="829.1" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,386 samples, 0.47%)</title><rect x="826.1" y="387.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="829.1" y="398.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,386 samples, 0.47%)</title><rect x="826.1" y="371.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="829.1" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,386 samples, 0.47%)</title><rect x="826.1" y="355.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="829.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,386 samples, 0.47%)</title><rect x="826.1" y="339.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="829.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,386 samples, 0.47%)</title><rect x="826.1" y="323.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="829.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,838 samples, 0.36%)</title><rect x="826.1" y="307.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="829.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable$1.next (1,838 samples, 0.36%)</title><rect x="826.1" y="291.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="829.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable$1.next (1,838 samples, 0.36%)</title><rect x="826.1" y="275.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="829.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.cellAt (1,838 samples, 0.36%)</title><rect x="826.1" y="259.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="829.1" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (297 samples, 0.06%)</title><rect x="826.1" y="243.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="829.1" y="254.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (297 samples, 0.06%)</title><rect x="826.1" y="227.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="829.1" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (632 samples, 0.12%)</title><rect x="826.8" y="243.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="829.8" y="254.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (632 samples, 0.12%)</title><rect x="826.8" y="227.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="829.8" y="238.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.pranova.Cell (108 samples, 0.02%)</title><rect x="828.3" y="243.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="831.3" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.pranova.Value (117 samples, 0.02%)</title><rect x="828.5" y="243.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="831.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/FileTable.keyAt (684 samples, 0.13%)</title><rect x="828.8" y="243.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="831.8" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (331 samples, 0.07%)</title><rect x="828.8" y="227.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="831.8" y="238.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (331 samples, 0.07%)</title><rect x="828.8" y="211.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="831.8" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (353 samples, 0.07%)</title><rect x="829.6" y="227.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="832.6" y="238.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (353 samples, 0.07%)</title><rect x="829.6" y="211.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="832.6" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$542/2071213622.compare (548 samples, 0.11%)</title><rect x="830.4" y="307.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="833.4" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (548 samples, 0.11%)</title><rect x="830.4" y="291.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="833.4" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$551/1879157613.compare (548 samples, 0.11%)</title><rect x="830.4" y="275.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="833.4" y="286.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (548 samples, 0.11%)</title><rect x="830.4" y="259.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="833.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/Cell$$Lambda$550/1285597742.apply (548 samples, 0.11%)</title><rect x="830.4" y="243.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="833.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/Cell.getKey (548 samples, 0.11%)</title><rect x="830.4" y="227.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="833.4" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (309 samples, 0.06%)</title><rect x="830.4" y="211.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="833.4" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (309 samples, 0.06%)</title><rect x="830.4" y="195.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="833.4" y="206.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (309 samples, 0.06%)</title><rect x="830.4" y="179.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="833.4" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (239 samples, 0.05%)</title><rect x="831.1" y="211.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="834.1" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (239 samples, 0.05%)</title><rect x="831.1" y="195.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="834.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/MemoryTablePool.iterator (1,862 samples, 0.37%)</title><rect x="831.7" y="467.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="834.7" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (598 samples, 0.12%)</title><rect x="831.7" y="451.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="834.7" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (516 samples, 0.10%)</title><rect x="831.9" y="435.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="834.9" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (115 samples, 0.02%)</title><rect x="831.9" y="419.0" width="0.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="834.9" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (122 samples, 0.02%)</title><rect x="832.1" y="419.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="835.1" y="430.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (122 samples, 0.02%)</title><rect x="832.1" y="403.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="835.1" y="414.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (156 samples, 0.03%)</title><rect x="832.4" y="419.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="835.4" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (123 samples, 0.02%)</title><rect x="832.8" y="419.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="835.8" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (123 samples, 0.02%)</title><rect x="832.8" y="403.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="835.8" y="414.0"></text>
</g>
<g>
<title>java.util.ArrayList (118 samples, 0.02%)</title><rect x="833.1" y="451.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="836.1" y="462.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (206 samples, 0.04%)</title><rect x="833.3" y="451.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="836.3" y="462.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (206 samples, 0.04%)</title><rect x="833.3" y="435.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="836.3" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (206 samples, 0.04%)</title><rect x="833.3" y="419.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="836.3" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (206 samples, 0.04%)</title><rect x="833.3" y="403.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="836.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (248 samples, 0.05%)</title><rect x="834.1" y="451.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="837.1" y="462.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (135 samples, 0.03%)</title><rect x="834.1" y="435.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="837.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (113 samples, 0.02%)</title><rect x="834.4" y="435.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="837.4" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (113 samples, 0.02%)</title><rect x="834.4" y="419.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="837.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (113 samples, 0.02%)</title><rect x="834.4" y="403.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="837.4" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (113 samples, 0.02%)</title><rect x="834.4" y="387.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="837.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (113 samples, 0.02%)</title><rect x="834.4" y="371.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="837.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/MemTable$$Lambda$548/685012951.apply (113 samples, 0.02%)</title><rect x="834.4" y="355.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="837.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/MemTable.lambda$iterator$0 (113 samples, 0.02%)</title><rect x="834.4" y="339.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="837.4" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.pranova.Cell (113 samples, 0.02%)</title><rect x="834.4" y="323.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="837.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/MemTable.iterator (580 samples, 0.11%)</title><rect x="834.7" y="451.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="837.7" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (127 samples, 0.02%)</title><rect x="834.7" y="435.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="837.7" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (127 samples, 0.02%)</title><rect x="834.7" y="419.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="837.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (135 samples, 0.03%)</title><rect x="835.0" y="435.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="838.0" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (135 samples, 0.03%)</title><rect x="835.0" y="419.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="838.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (238 samples, 0.05%)</title><rect x="835.5" y="435.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="838.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (238 samples, 0.05%)</title><rect x="835.5" y="419.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="838.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (238 samples, 0.05%)</title><rect x="835.5" y="403.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="838.5" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (238 samples, 0.05%)</title><rect x="835.5" y="387.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="838.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/pranova/Value.getData (599 samples, 0.12%)</title><rect x="836.0" y="499.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="839.0" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (599 samples, 0.12%)</title><rect x="836.0" y="483.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="839.0" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (599 samples, 0.12%)</title><rect x="836.0" y="467.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="839.0" y="478.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (599 samples, 0.12%)</title><rect x="836.0" y="451.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="839.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Value.&lt;init&gt; (180 samples, 0.04%)</title><rect x="837.4" y="547.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="840.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Value.&lt;init&gt; (180 samples, 0.04%)</title><rect x="837.4" y="531.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="840.4" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (180 samples, 0.04%)</title><rect x="837.4" y="515.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="840.4" y="526.0"></text>
</g>
<g>
<title>byte[] (180 samples, 0.04%)</title><rect x="837.4" y="499.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="840.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (7,239 samples, 1.42%)</title><rect x="837.8" y="611.0" width="16.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="840.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (7,239 samples, 1.42%)</title><rect x="837.8" y="595.0" width="16.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="840.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2,146 samples, 0.42%)</title><rect x="837.8" y="579.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="840.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,146 samples, 0.42%)</title><rect x="837.8" y="563.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="840.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,139 samples, 0.42%)</title><rect x="837.8" y="547.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="840.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils$$Lambda$154/1620643826.apply (2,139 samples, 0.42%)</title><rect x="837.8" y="531.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="840.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils.lambda$replication$7 (2,139 samples, 0.42%)</title><rect x="837.8" y="515.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="840.8" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1,276 samples, 0.25%)</title><rect x="837.8" y="499.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="840.8" y="510.0"></text>
</g>
<g>
<title>java/util/Collection.stream (871 samples, 0.17%)</title><rect x="837.8" y="483.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="840.8" y="494.0"></text>
</g>
<g>
<title>java/util/List.spliterator (303 samples, 0.06%)</title><rect x="837.8" y="467.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="840.8" y="478.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (303 samples, 0.06%)</title><rect x="837.8" y="451.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="840.8" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (568 samples, 0.11%)</title><rect x="838.5" y="467.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="841.5" y="478.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (568 samples, 0.11%)</title><rect x="838.5" y="451.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="841.5" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (405 samples, 0.08%)</title><rect x="839.8" y="483.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="842.8" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (405 samples, 0.08%)</title><rect x="839.8" y="467.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="842.8" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (405 samples, 0.08%)</title><rect x="839.8" y="451.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="842.8" y="462.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$57/341796579.get (254 samples, 0.05%)</title><rect x="839.8" y="435.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="842.8" y="446.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (254 samples, 0.05%)</title><rect x="839.8" y="419.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="842.8" y="430.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (151 samples, 0.03%)</title><rect x="840.4" y="435.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="843.4" y="446.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (151 samples, 0.03%)</title><rect x="840.4" y="419.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="843.4" y="430.0"></text>
</g>
<g>
<title>java/util/Optional.of (151 samples, 0.03%)</title><rect x="840.4" y="403.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="843.4" y="414.0"></text>
</g>
<g>
<title>java.util.Optional (151 samples, 0.03%)</title><rect x="840.4" y="387.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="843.4" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.pranova.Value (515 samples, 0.10%)</title><rect x="840.8" y="499.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="843.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Value.&lt;init&gt; (348 samples, 0.07%)</title><rect x="842.0" y="499.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="845.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Value.&lt;init&gt; (348 samples, 0.07%)</title><rect x="842.0" y="483.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="845.0" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (348 samples, 0.07%)</title><rect x="842.0" y="467.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="845.0" y="478.0"></text>
</g>
<g>
<title>byte[] (348 samples, 0.07%)</title><rect x="842.0" y="451.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="845.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5,093 samples, 1.00%)</title><rect x="842.8" y="579.0" width="11.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="845.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils$$Lambda$166/1080946771.accept (5,093 samples, 1.00%)</title><rect x="842.8" y="563.0" width="11.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="845.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils.lambda$merge$2 (5,093 samples, 1.00%)</title><rect x="842.8" y="547.0" width="11.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="845.8" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (853 samples, 0.17%)</title><rect x="842.8" y="531.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="845.8" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.spliterator (155 samples, 0.03%)</title><rect x="842.8" y="515.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="845.8" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList$ArrayListSpliterator (155 samples, 0.03%)</title><rect x="842.8" y="499.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="845.8" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySet.spliterator (174 samples, 0.03%)</title><rect x="843.2" y="515.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="846.2" y="526.0"></text>
</g>
<g>
<title>java.util.HashMap$EntrySpliterator (174 samples, 0.03%)</title><rect x="843.2" y="499.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="846.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (524 samples, 0.10%)</title><rect x="843.6" y="515.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="846.6" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (524 samples, 0.10%)</title><rect x="843.6" y="499.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="846.6" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparingLong (203 samples, 0.04%)</title><rect x="844.9" y="531.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="847.9" y="542.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (126 samples, 0.02%)</title><rect x="845.1" y="515.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="848.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (126 samples, 0.02%)</title><rect x="845.1" y="499.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="848.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (126 samples, 0.02%)</title><rect x="845.1" y="483.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="848.1" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$542/2071213622.get$Lambda (126 samples, 0.02%)</title><rect x="845.1" y="467.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="848.1" y="478.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$542 (126 samples, 0.02%)</title><rect x="845.1" y="451.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="848.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,447 samples, 0.28%)</title><rect x="845.6" y="531.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="848.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,447 samples, 0.28%)</title><rect x="845.6" y="515.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="848.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (1,447 samples, 0.28%)</title><rect x="845.6" y="499.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="848.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica$$Lambda$174/1908571335.accept (1,447 samples, 0.28%)</title><rect x="845.6" y="483.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="848.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.lambda$schedule$1 (1,447 samples, 0.28%)</title><rect x="845.6" y="467.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="848.6" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (858 samples, 0.17%)</title><rect x="845.6" y="451.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="848.6" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (858 samples, 0.17%)</title><rect x="845.6" y="435.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="848.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (440 samples, 0.09%)</title><rect x="845.6" y="419.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="848.6" y="430.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (440 samples, 0.09%)</title><rect x="845.6" y="403.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="848.6" y="414.0"></text>
</g>
<g>
<title>byte[] (440 samples, 0.09%)</title><rect x="845.6" y="387.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="848.6" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (418 samples, 0.08%)</title><rect x="846.6" y="419.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="849.6" y="430.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (196 samples, 0.04%)</title><rect x="846.6" y="403.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="849.6" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (222 samples, 0.04%)</title><rect x="847.0" y="403.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="850.0" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (222 samples, 0.04%)</title><rect x="847.0" y="387.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="850.0" y="398.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (222 samples, 0.04%)</title><rect x="847.0" y="371.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="850.0" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (222 samples, 0.04%)</title><rect x="847.0" y="355.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="850.0" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (222 samples, 0.04%)</title><rect x="847.0" y="339.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="850.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Value.toResponse (589 samples, 0.12%)</title><rect x="847.6" y="451.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="850.6" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (482 samples, 0.09%)</title><rect x="847.8" y="435.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="850.8" y="446.0"></text>
</g>
<g>
<title>byte[] (213 samples, 0.04%)</title><rect x="847.8" y="419.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="850.8" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (159 samples, 0.03%)</title><rect x="848.3" y="419.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="851.3" y="430.0"></text>
</g>
<g>
<title>java.lang.String (110 samples, 0.02%)</title><rect x="848.7" y="419.0" width="0.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="851.7" y="430.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toMap (336 samples, 0.07%)</title><rect x="848.9" y="531.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="851.9" y="542.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toMap (336 samples, 0.07%)</title><rect x="848.9" y="515.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="851.9" y="526.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$CollectorImpl (152 samples, 0.03%)</title><rect x="848.9" y="499.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="851.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (109 samples, 0.02%)</title><rect x="849.3" y="499.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="852.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (109 samples, 0.02%)</title><rect x="849.3" y="483.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="852.3" y="494.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$41/580718781.get$Lambda (109 samples, 0.02%)</title><rect x="849.3" y="467.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="852.3" y="478.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$$Lambda$41 (109 samples, 0.02%)</title><rect x="849.3" y="451.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="852.3" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (1,760 samples, 0.35%)</title><rect x="849.7" y="531.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="852.7" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1,606 samples, 0.32%)</title><rect x="849.7" y="515.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="852.7" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1,606 samples, 0.32%)</title><rect x="849.7" y="499.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="852.7" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1,454 samples, 0.29%)</title><rect x="849.7" y="483.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="852.7" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1,454 samples, 0.29%)</title><rect x="849.7" y="467.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="852.7" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (1,218 samples, 0.24%)</title><rect x="849.7" y="451.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="852.7" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (1,218 samples, 0.24%)</title><rect x="849.7" y="435.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="852.7" y="446.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$41/580718781.accept (1,218 samples, 0.24%)</title><rect x="849.7" y="419.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="852.7" y="430.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.lambda$toMap$68 (1,218 samples, 0.24%)</title><rect x="849.7" y="403.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="852.7" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.merge (1,218 samples, 0.24%)</title><rect x="849.7" y="387.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="852.7" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (490 samples, 0.10%)</title><rect x="849.7" y="371.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="852.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Value.hashCode (490 samples, 0.10%)</title><rect x="849.7" y="355.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="852.7" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (266 samples, 0.05%)</title><rect x="849.7" y="339.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="852.7" y="350.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (224 samples, 0.04%)</title><rect x="850.3" y="339.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="853.3" y="350.0"></text>
</g>
<g>
<title>java.lang.Long (224 samples, 0.04%)</title><rect x="850.3" y="323.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="853.3" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (328 samples, 0.06%)</title><rect x="850.8" y="371.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="853.8" y="382.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (328 samples, 0.06%)</title><rect x="850.8" y="355.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="853.8" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (400 samples, 0.08%)</title><rect x="851.6" y="371.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="854.6" y="382.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (400 samples, 0.08%)</title><rect x="851.6" y="355.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="854.6" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (236 samples, 0.05%)</title><rect x="852.5" y="451.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="855.5" y="462.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$40/1769193365.get (236 samples, 0.05%)</title><rect x="852.5" y="435.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="855.5" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap (236 samples, 0.05%)</title><rect x="852.5" y="419.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="855.5" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (152 samples, 0.03%)</title><rect x="853.1" y="483.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="856.1" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (152 samples, 0.03%)</title><rect x="853.1" y="467.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="856.1" y="478.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3ReducingSink (152 samples, 0.03%)</title><rect x="853.1" y="451.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="856.1" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (154 samples, 0.03%)</title><rect x="853.4" y="515.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="856.4" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3 (154 samples, 0.03%)</title><rect x="853.4" y="499.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="856.4" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (358 samples, 0.07%)</title><rect x="853.8" y="531.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="856.8" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (285 samples, 0.06%)</title><rect x="854.0" y="515.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="857.0" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (181 samples, 0.04%)</title><rect x="854.0" y="499.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="857.0" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (181 samples, 0.04%)</title><rect x="854.0" y="483.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="857.0" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (109 samples, 0.02%)</title><rect x="854.0" y="467.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="857.0" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (109 samples, 0.02%)</title><rect x="854.0" y="451.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="857.0" y="462.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2ReducingSink (109 samples, 0.02%)</title><rect x="854.0" y="435.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="857.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (10,731 samples, 2.11%)</title><rect x="854.6" y="691.0" width="24.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="857.6" y="702.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (286 samples, 0.06%)</title><rect x="854.6" y="675.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="857.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (286 samples, 0.06%)</title><rect x="854.6" y="659.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="857.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$334/114199938.get$Lambda (179 samples, 0.04%)</title><rect x="854.6" y="643.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="857.6" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$334 (179 samples, 0.04%)</title><rect x="854.6" y="627.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="857.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/794075965.linkToTargetMethod (251 samples, 0.05%)</title><rect x="855.3" y="675.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="858.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (251 samples, 0.05%)</title><rect x="855.3" y="659.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="858.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$335/1550294416.get$Lambda (251 samples, 0.05%)</title><rect x="855.3" y="643.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="858.3" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$335 (251 samples, 0.05%)</title><rect x="855.3" y="627.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="858.3" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3,259 samples, 0.64%)</title><rect x="855.9" y="675.0" width="7.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="858.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$336/85824568.accept (2,762 samples, 0.54%)</title><rect x="855.9" y="659.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="858.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (2,762 samples, 0.54%)</title><rect x="855.9" y="643.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="858.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (2,762 samples, 0.54%)</title><rect x="855.9" y="627.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="858.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (2,762 samples, 0.54%)</title><rect x="855.9" y="611.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="858.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (2,762 samples, 0.54%)</title><rect x="855.9" y="595.0" width="6.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="858.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (2,762 samples, 0.54%)</title><rect x="855.9" y="579.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="858.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2,762 samples, 0.54%)</title><rect x="855.9" y="563.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="858.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2,762 samples, 0.54%)</title><rect x="855.9" y="547.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="858.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2,762 samples, 0.54%)</title><rect x="855.9" y="531.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="858.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (2,762 samples, 0.54%)</title><rect x="855.9" y="515.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="858.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$223/1006774652.run (2,762 samples, 0.54%)</title><rect x="855.9" y="499.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="858.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (2,762 samples, 0.54%)</title><rect x="855.9" y="483.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="858.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (630 samples, 0.12%)</title><rect x="855.9" y="467.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="858.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (630 samples, 0.12%)</title><rect x="855.9" y="451.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="858.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (630 samples, 0.12%)</title><rect x="855.9" y="435.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="858.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (279 samples, 0.05%)</title><rect x="855.9" y="419.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="858.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (279 samples, 0.05%)</title><rect x="855.9" y="403.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="858.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (279 samples, 0.05%)</title><rect x="855.9" y="387.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="858.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (279 samples, 0.05%)</title><rect x="855.9" y="371.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="858.9" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (279 samples, 0.05%)</title><rect x="855.9" y="355.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="858.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (351 samples, 0.07%)</title><rect x="856.5" y="419.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="859.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (351 samples, 0.07%)</title><rect x="856.5" y="403.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="859.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (351 samples, 0.07%)</title><rect x="856.5" y="387.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="859.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (351 samples, 0.07%)</title><rect x="856.5" y="371.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="859.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (351 samples, 0.07%)</title><rect x="856.5" y="355.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="859.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (351 samples, 0.07%)</title><rect x="856.5" y="339.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="859.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (351 samples, 0.07%)</title><rect x="856.5" y="323.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="859.5" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (351 samples, 0.07%)</title><rect x="856.5" y="307.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="859.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (213 samples, 0.04%)</title><rect x="857.5" y="467.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="860.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (213 samples, 0.04%)</title><rect x="857.5" y="451.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="860.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (213 samples, 0.04%)</title><rect x="857.5" y="435.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="860.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$420/1458729479.get$Lambda (213 samples, 0.04%)</title><rect x="857.5" y="419.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="860.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$420 (213 samples, 0.04%)</title><rect x="857.5" y="403.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="860.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (1,851 samples, 0.36%)</title><rect x="858.0" y="467.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="861.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (843 samples, 0.17%)</title><rect x="858.0" y="451.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="861.0" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (546 samples, 0.11%)</title><rect x="858.0" y="435.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="861.0" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (546 samples, 0.11%)</title><rect x="858.0" y="419.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="861.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (297 samples, 0.06%)</title><rect x="859.3" y="435.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="862.3" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (297 samples, 0.06%)</title><rect x="859.3" y="419.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="862.3" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (297 samples, 0.06%)</title><rect x="859.3" y="403.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="862.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (1,008 samples, 0.20%)</title><rect x="859.9" y="451.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="862.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$211/900397021.get (1,008 samples, 0.20%)</title><rect x="859.9" y="435.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="862.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (1,008 samples, 0.20%)</title><rect x="859.9" y="419.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="862.9" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,008 samples, 0.20%)</title><rect x="859.9" y="403.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="862.9" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,005 samples, 0.20%)</title><rect x="860.0" y="387.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="863.0" y="398.0"></text>
</g>
<g>
<title>byte[] (989 samples, 0.19%)</title><rect x="860.0" y="371.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="863.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$419/2108239717.accept (497 samples, 0.10%)</title><rect x="862.3" y="659.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="865.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (497 samples, 0.10%)</title><rect x="862.3" y="643.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="865.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$335/1550294416.run (497 samples, 0.10%)</title><rect x="862.3" y="627.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="865.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (497 samples, 0.10%)</title><rect x="862.3" y="611.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="865.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (497 samples, 0.10%)</title><rect x="862.3" y="595.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="865.3" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (497 samples, 0.10%)</title><rect x="862.3" y="579.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="865.3" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (497 samples, 0.10%)</title><rect x="862.3" y="563.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="865.3" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (497 samples, 0.10%)</title><rect x="862.3" y="547.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="865.3" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (650 samples, 0.13%)</title><rect x="863.4" y="675.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="866.4" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (650 samples, 0.13%)</title><rect x="863.4" y="659.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="866.4" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (511 samples, 0.10%)</title><rect x="864.9" y="675.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="867.9" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (275 samples, 0.05%)</title><rect x="864.9" y="659.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="867.9" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (275 samples, 0.05%)</title><rect x="864.9" y="643.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="867.9" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (275 samples, 0.05%)</title><rect x="864.9" y="627.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="867.9" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (275 samples, 0.05%)</title><rect x="864.9" y="611.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="867.9" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (275 samples, 0.05%)</title><rect x="864.9" y="595.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="867.9" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (275 samples, 0.05%)</title><rect x="864.9" y="579.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="867.9" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (275 samples, 0.05%)</title><rect x="864.9" y="563.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="867.9" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (236 samples, 0.05%)</title><rect x="865.6" y="659.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="868.6" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (236 samples, 0.05%)</title><rect x="865.6" y="643.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="868.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (2,141 samples, 0.42%)</title><rect x="866.1" y="675.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="869.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$229/1261782551.run (1,024 samples, 0.20%)</title><rect x="866.1" y="659.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="869.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (1,024 samples, 0.20%)</title><rect x="866.1" y="643.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="869.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,024 samples, 0.20%)</title><rect x="866.1" y="627.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="869.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,024 samples, 0.20%)</title><rect x="866.1" y="611.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="869.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,024 samples, 0.20%)</title><rect x="866.1" y="595.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="869.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1,024 samples, 0.20%)</title><rect x="866.1" y="579.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="869.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$223/1006774652.run (1,024 samples, 0.20%)</title><rect x="866.1" y="563.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="869.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1,024 samples, 0.20%)</title><rect x="866.1" y="547.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="869.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1,013 samples, 0.20%)</title><rect x="866.1" y="531.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="869.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (1,013 samples, 0.20%)</title><rect x="866.1" y="515.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="869.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (633 samples, 0.12%)</title><rect x="866.1" y="499.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="869.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (633 samples, 0.12%)</title><rect x="866.1" y="483.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="869.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (633 samples, 0.12%)</title><rect x="866.1" y="467.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="869.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/931496835.linkToTargetMethod (451 samples, 0.09%)</title><rect x="866.1" y="451.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="869.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1324578393.invoke (451 samples, 0.09%)</title><rect x="866.1" y="435.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="869.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (451 samples, 0.09%)</title><rect x="866.1" y="419.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="869.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (451 samples, 0.09%)</title><rect x="866.1" y="403.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="869.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (451 samples, 0.09%)</title><rect x="866.1" y="387.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="869.1" y="398.0"></text>
</g>
<g>
<title>byte[] (451 samples, 0.09%)</title><rect x="866.1" y="371.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="869.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (182 samples, 0.04%)</title><rect x="867.2" y="451.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="870.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (182 samples, 0.04%)</title><rect x="867.2" y="435.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="870.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (182 samples, 0.04%)</title><rect x="867.2" y="419.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="870.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$420/1458729479.get$Lambda (182 samples, 0.04%)</title><rect x="867.2" y="403.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="870.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$420 (182 samples, 0.04%)</title><rect x="867.2" y="387.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="870.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (380 samples, 0.07%)</title><rect x="867.6" y="499.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="870.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (380 samples, 0.07%)</title><rect x="867.6" y="483.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="870.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (380 samples, 0.07%)</title><rect x="867.6" y="467.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="870.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (380 samples, 0.07%)</title><rect x="867.6" y="451.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="870.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (380 samples, 0.07%)</title><rect x="867.6" y="435.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="870.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (380 samples, 0.07%)</title><rect x="867.6" y="419.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="870.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (380 samples, 0.07%)</title><rect x="867.6" y="403.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="870.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (380 samples, 0.07%)</title><rect x="867.6" y="387.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="870.6" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (380 samples, 0.07%)</title><rect x="867.6" y="371.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="870.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$240/316904712.run (1,117 samples, 0.22%)</title><rect x="868.5" y="659.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="871.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (1,117 samples, 0.22%)</title><rect x="868.5" y="643.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="871.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (377 samples, 0.07%)</title><rect x="868.5" y="627.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="871.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (377 samples, 0.07%)</title><rect x="868.5" y="611.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="871.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$422/1809300373.get$Lambda (377 samples, 0.07%)</title><rect x="868.5" y="595.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="871.5" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$422 (377 samples, 0.07%)</title><rect x="868.5" y="579.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="871.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (740 samples, 0.15%)</title><rect x="869.4" y="627.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="872.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (740 samples, 0.15%)</title><rect x="869.4" y="611.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="872.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (740 samples, 0.15%)</title><rect x="869.4" y="595.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="872.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (740 samples, 0.15%)</title><rect x="869.4" y="579.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="872.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (740 samples, 0.15%)</title><rect x="869.4" y="563.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="872.4" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (740 samples, 0.15%)</title><rect x="869.4" y="547.0" width="1.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="872.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (789 samples, 0.16%)</title><rect x="871.1" y="675.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="874.1" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (221 samples, 0.04%)</title><rect x="871.1" y="659.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="874.1" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (221 samples, 0.04%)</title><rect x="871.1" y="643.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="874.1" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (221 samples, 0.04%)</title><rect x="871.1" y="627.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="874.1" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (221 samples, 0.04%)</title><rect x="871.1" y="611.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="874.1" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (221 samples, 0.04%)</title><rect x="871.1" y="595.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="874.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (568 samples, 0.11%)</title><rect x="871.6" y="659.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="874.6" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (110 samples, 0.02%)</title><rect x="871.6" y="643.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="874.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (110 samples, 0.02%)</title><rect x="871.6" y="627.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="874.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$546/1640198127.get$Lambda (110 samples, 0.02%)</title><rect x="871.6" y="611.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="874.6" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$546 (110 samples, 0.02%)</title><rect x="871.6" y="595.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="874.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (458 samples, 0.09%)</title><rect x="871.9" y="643.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="874.9" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (172 samples, 0.03%)</title><rect x="871.9" y="627.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="874.9" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (286 samples, 0.06%)</title><rect x="872.3" y="627.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="875.3" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (286 samples, 0.06%)</title><rect x="872.3" y="611.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="875.3" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (286 samples, 0.06%)</title><rect x="872.3" y="595.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="875.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (1,979 samples, 0.39%)</title><rect x="872.9" y="675.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="875.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (168 samples, 0.03%)</title><rect x="872.9" y="659.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="875.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (168 samples, 0.03%)</title><rect x="872.9" y="643.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="875.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$333/560929173.get$Lambda (168 samples, 0.03%)</title><rect x="872.9" y="627.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="875.9" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$333 (168 samples, 0.03%)</title><rect x="872.9" y="611.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="875.9" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,096 samples, 0.22%)</title><rect x="873.3" y="659.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="876.3" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (433 samples, 0.09%)</title><rect x="873.3" y="643.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="876.3" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (433 samples, 0.09%)</title><rect x="873.3" y="627.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="876.3" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (663 samples, 0.13%)</title><rect x="874.3" y="643.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="877.3" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (663 samples, 0.13%)</title><rect x="874.3" y="627.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="877.3" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (715 samples, 0.14%)</title><rect x="875.9" y="659.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="878.9" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (715 samples, 0.14%)</title><rect x="875.9" y="643.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="878.9" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (514 samples, 0.10%)</title><rect x="877.5" y="675.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="880.5" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (514 samples, 0.10%)</title><rect x="877.5" y="659.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="880.5" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (514 samples, 0.10%)</title><rect x="877.5" y="643.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="880.5" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (513 samples, 0.10%)</title><rect x="877.5" y="627.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="880.5" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (191 samples, 0.04%)</title><rect x="877.5" y="611.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="880.5" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (191 samples, 0.04%)</title><rect x="877.5" y="595.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="880.5" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (322 samples, 0.06%)</title><rect x="878.0" y="611.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="881.0" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (322 samples, 0.06%)</title><rect x="878.0" y="595.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="881.0" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (322 samples, 0.06%)</title><rect x="878.0" y="579.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="881.0" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (322 samples, 0.06%)</title><rect x="878.0" y="563.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="881.0" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (322 samples, 0.06%)</title><rect x="878.0" y="547.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="881.0" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (322 samples, 0.06%)</title><rect x="878.0" y="531.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="881.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (216 samples, 0.04%)</title><rect x="878.7" y="675.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="881.7" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (216 samples, 0.04%)</title><rect x="878.7" y="659.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="881.7" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (216 samples, 0.04%)</title><rect x="878.7" y="643.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="881.7" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (216 samples, 0.04%)</title><rect x="878.7" y="627.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="881.7" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (191 samples, 0.04%)</title><rect x="878.7" y="611.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="881.7" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (191 samples, 0.04%)</title><rect x="878.7" y="595.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="881.7" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (135 samples, 0.03%)</title><rect x="879.2" y="675.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="882.2" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (135 samples, 0.03%)</title><rect x="879.2" y="659.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="882.2" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (135 samples, 0.03%)</title><rect x="879.2" y="643.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="882.2" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (135 samples, 0.03%)</title><rect x="879.2" y="627.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="882.2" y="638.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (133,692 samples, 26.31%)</title><rect x="879.5" y="691.0" width="310.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="882.5" y="702.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (9,412 samples, 1.85%)</title><rect x="879.5" y="675.0" width="21.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="882.5" y="686.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (4,895 samples, 0.96%)</title><rect x="879.5" y="659.0" width="11.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="882.5" y="670.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (1,212 samples, 0.24%)</title><rect x="879.5" y="643.0" width="2.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="882.5" y="654.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (1,189 samples, 0.23%)</title><rect x="882.4" y="643.0" width="2.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="885.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (2,494 samples, 0.49%)</title><rect x="885.1" y="643.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="888.1" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2,494 samples, 0.49%)</title><rect x="885.1" y="627.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="888.1" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2,494 samples, 0.49%)</title><rect x="885.1" y="611.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="888.1" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (2,494 samples, 0.49%)</title><rect x="885.1" y="595.0" width="5.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="888.1" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (4,517 samples, 0.89%)</title><rect x="890.9" y="659.0" width="10.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="893.9" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (4,517 samples, 0.89%)</title><rect x="890.9" y="643.0" width="10.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="893.9" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (4,517 samples, 0.89%)</title><rect x="890.9" y="627.0" width="10.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="893.9" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (4,517 samples, 0.89%)</title><rect x="890.9" y="611.0" width="10.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="893.9" y="622.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (2,870 samples, 0.56%)</title><rect x="890.9" y="595.0" width="6.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="893.9" y="606.0"></text>
</g>
<g>
<title>java.lang.Integer (2,870 samples, 0.56%)</title><rect x="890.9" y="579.0" width="6.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="893.9" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1,647 samples, 0.32%)</title><rect x="897.6" y="595.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="900.6" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1,647 samples, 0.32%)</title><rect x="897.6" y="579.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="900.6" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1,647 samples, 0.32%)</title><rect x="897.6" y="563.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="900.6" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1,647 samples, 0.32%)</title><rect x="897.6" y="547.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="900.6" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1,647 samples, 0.32%)</title><rect x="897.6" y="531.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="900.6" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (1,647 samples, 0.32%)</title><rect x="897.6" y="515.0" width="3.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="900.6" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (124,280 samples, 24.46%)</title><rect x="901.4" y="675.0" width="288.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="904.4" y="686.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (124,280 samples, 24.46%)</title><rect x="901.4" y="659.0" width="288.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="904.4" y="670.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (122,443 samples, 24.10%)</title><rect x="901.4" y="643.0" width="284.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="904.4" y="654.0">one/nio/http/HttpSession.processHttpBu..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (56,083 samples, 11.04%)</title><rect x="901.4" y="627.0" width="130.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="904.4" y="638.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (56,083 samples, 11.04%)</title><rect x="901.4" y="611.0" width="130.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="904.4" y="622.0">one/nio/http/Htt..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (53,158 samples, 10.46%)</title><rect x="901.4" y="595.0" width="123.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="904.4" y="606.0">RequestHandler1..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4,112 samples, 0.81%)</title><rect x="901.4" y="579.0" width="9.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="904.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (4,112 samples, 0.81%)</title><rect x="901.4" y="563.0" width="9.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="904.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,112 samples, 0.81%)</title><rect x="901.4" y="547.0" width="9.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="904.4" y="558.0"></text>
</g>
<g>
<title>java.lang.String (2,088 samples, 0.41%)</title><rect x="901.4" y="531.0" width="4.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="904.4" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,024 samples, 0.40%)</title><rect x="906.2" y="531.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="909.2" y="542.0"></text>
</g>
<g>
<title>byte[] (2,024 samples, 0.40%)</title><rect x="906.2" y="515.0" width="4.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="909.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/AsyncService.entity (49,046 samples, 9.65%)</title><rect x="910.9" y="579.0" width="113.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="913.9" y="590.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/lang/String.getBytes (945 samples, 0.19%)</title><rect x="910.9" y="563.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="913.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (945 samples, 0.19%)</title><rect x="910.9" y="547.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="913.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (945 samples, 0.19%)</title><rect x="910.9" y="531.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="913.9" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (945 samples, 0.19%)</title><rect x="910.9" y="515.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="913.9" y="526.0"></text>
</g>
<g>
<title>byte[] (945 samples, 0.19%)</title><rect x="910.9" y="499.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="913.9" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2,431 samples, 0.48%)</title><rect x="913.1" y="563.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="916.1" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2,431 samples, 0.48%)</title><rect x="913.1" y="547.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="916.1" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,431 samples, 0.48%)</title><rect x="913.1" y="531.0" width="5.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="916.1" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.pranova.Context (1,623 samples, 0.32%)</title><rect x="918.8" y="563.0" width="3.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="921.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/AsyncService.isProxied (1,966 samples, 0.39%)</title><rect x="922.6" y="563.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="925.6" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,966 samples, 0.39%)</title><rect x="922.6" y="547.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="925.6" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,966 samples, 0.39%)</title><rect x="922.6" y="531.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="925.6" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,966 samples, 0.39%)</title><rect x="922.6" y="515.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="925.6" y="526.0"></text>
</g>
<g>
<title>java.lang.String (1,015 samples, 0.20%)</title><rect x="922.6" y="499.0" width="2.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="925.6" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (951 samples, 0.19%)</title><rect x="924.9" y="499.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="927.9" y="510.0"></text>
</g>
<g>
<title>byte[] (951 samples, 0.19%)</title><rect x="924.9" y="483.0" width="2.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="927.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.execGet (41,052 samples, 8.08%)</title><rect x="927.1" y="563.0" width="95.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="930.1" y="574.0">ru/mail/pol..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,243 samples, 0.24%)</title><rect x="927.1" y="547.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="930.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,243 samples, 0.24%)</title><rect x="927.1" y="531.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="930.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica$$Lambda$555/1072459075.get$Lambda (1,243 samples, 0.24%)</title><rect x="927.1" y="515.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="930.1" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.pranova.Replica$$Lambda$555 (1,243 samples, 0.24%)</title><rect x="927.1" y="499.0" width="2.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="930.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.execAct (39,809 samples, 7.83%)</title><rect x="930.0" y="547.0" width="92.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="933.0" y="558.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils.replication (32,886 samples, 6.47%)</title><rect x="930.0" y="531.0" width="76.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="933.0" y="542.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (922 samples, 0.18%)</title><rect x="930.2" y="515.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="933.2" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1469166366.invoke (842 samples, 0.17%)</title><rect x="930.4" y="499.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="933.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2075526946.invoke (842 samples, 0.17%)</title><rect x="930.4" y="483.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="933.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (842 samples, 0.17%)</title><rect x="930.4" y="467.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="933.4" y="478.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (212 samples, 0.04%)</title><rect x="930.4" y="451.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="933.4" y="462.0"></text>
</g>
<g>
<title>java.lang.String (212 samples, 0.04%)</title><rect x="930.4" y="435.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="933.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (630 samples, 0.12%)</title><rect x="930.9" y="451.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="933.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (630 samples, 0.12%)</title><rect x="930.9" y="435.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="933.9" y="446.0"></text>
</g>
<g>
<title>byte[] (630 samples, 0.12%)</title><rect x="930.9" y="419.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="933.9" y="430.0"></text>
</g>
<g>
<title>java/net/URI.create (3,445 samples, 0.68%)</title><rect x="932.4" y="515.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="935.4" y="526.0"></text>
</g>
<g>
<title>java.net.URI (750 samples, 0.15%)</title><rect x="932.4" y="499.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="935.4" y="510.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (2,695 samples, 0.53%)</title><rect x="934.1" y="499.0" width="6.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="937.1" y="510.0"></text>
</g>
<g>
<title>java.net.URI$Parser (285 samples, 0.06%)</title><rect x="934.1" y="483.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="937.1" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (2,410 samples, 0.47%)</title><rect x="934.8" y="483.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="937.8" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (415 samples, 0.08%)</title><rect x="934.8" y="467.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="937.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (415 samples, 0.08%)</title><rect x="934.8" y="451.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="937.8" y="462.0"></text>
</g>
<g>
<title>java.lang.String (198 samples, 0.04%)</title><rect x="934.8" y="435.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="937.8" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (217 samples, 0.04%)</title><rect x="935.2" y="435.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="938.2" y="446.0"></text>
</g>
<g>
<title>byte[] (217 samples, 0.04%)</title><rect x="935.2" y="419.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="938.2" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (1,995 samples, 0.39%)</title><rect x="935.7" y="467.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="938.7" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,002 samples, 0.20%)</title><rect x="935.7" y="451.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="938.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,002 samples, 0.20%)</title><rect x="935.7" y="435.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="938.7" y="446.0"></text>
</g>
<g>
<title>java.lang.String (422 samples, 0.08%)</title><rect x="935.7" y="419.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="938.7" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (580 samples, 0.11%)</title><rect x="936.7" y="419.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="939.7" y="430.0"></text>
</g>
<g>
<title>byte[] (580 samples, 0.11%)</title><rect x="936.7" y="403.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="939.7" y="414.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (993 samples, 0.20%)</title><rect x="938.1" y="451.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="941.1" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (452 samples, 0.09%)</title><rect x="938.1" y="435.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="941.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (452 samples, 0.09%)</title><rect x="938.1" y="419.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="941.1" y="430.0"></text>
</g>
<g>
<title>java.lang.String (182 samples, 0.04%)</title><rect x="938.1" y="403.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="941.1" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (270 samples, 0.05%)</title><rect x="938.5" y="403.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="941.5" y="414.0"></text>
</g>
<g>
<title>byte[] (270 samples, 0.05%)</title><rect x="938.5" y="387.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="941.5" y="398.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (541 samples, 0.11%)</title><rect x="939.1" y="435.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="942.1" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (541 samples, 0.11%)</title><rect x="939.1" y="419.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="942.1" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (541 samples, 0.11%)</title><rect x="939.1" y="403.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="942.1" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (541 samples, 0.11%)</title><rect x="939.1" y="387.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="942.1" y="398.0"></text>
</g>
<g>
<title>java.lang.String (244 samples, 0.05%)</title><rect x="939.1" y="371.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="942.1" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (297 samples, 0.06%)</title><rect x="939.7" y="371.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="942.7" y="382.0"></text>
</g>
<g>
<title>byte[] (297 samples, 0.06%)</title><rect x="939.7" y="355.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="942.7" y="366.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.toString (216 samples, 0.04%)</title><rect x="940.4" y="515.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="943.4" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapCharBuffer.toString (216 samples, 0.04%)</title><rect x="940.4" y="499.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="943.4" y="510.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (216 samples, 0.04%)</title><rect x="940.4" y="483.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="943.4" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (216 samples, 0.04%)</title><rect x="940.4" y="467.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="943.4" y="478.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (216 samples, 0.04%)</title><rect x="940.4" y="451.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="943.4" y="462.0"></text>
</g>
<g>
<title>byte[] (216 samples, 0.04%)</title><rect x="940.4" y="435.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="943.4" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (453 samples, 0.09%)</title><rect x="940.9" y="515.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="943.9" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (453 samples, 0.09%)</title><rect x="940.9" y="499.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="943.9" y="510.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.decode (741 samples, 0.15%)</title><rect x="941.9" y="515.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="944.9" y="526.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (741 samples, 0.15%)</title><rect x="941.9" y="499.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="944.9" y="510.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.allocate (741 samples, 0.15%)</title><rect x="941.9" y="483.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="944.9" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapCharBuffer (431 samples, 0.08%)</title><rect x="941.9" y="467.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="944.9" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapCharBuffer.&lt;init&gt; (310 samples, 0.06%)</title><rect x="942.9" y="467.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="945.9" y="478.0"></text>
</g>
<g>
<title>char[] (310 samples, 0.06%)</title><rect x="942.9" y="451.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="945.9" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (153 samples, 0.03%)</title><rect x="943.7" y="515.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="946.7" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (153 samples, 0.03%)</title><rect x="943.7" y="499.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="946.7" y="510.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (240 samples, 0.05%)</title><rect x="944.0" y="515.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="947.0" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (176 samples, 0.03%)</title><rect x="944.0" y="499.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="947.0" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (176 samples, 0.03%)</title><rect x="944.0" y="483.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="947.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (235 samples, 0.05%)</title><rect x="944.6" y="515.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="947.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (235 samples, 0.05%)</title><rect x="944.6" y="499.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="947.6" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (124 samples, 0.02%)</title><rect x="944.6" y="483.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="947.6" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (111 samples, 0.02%)</title><rect x="944.9" y="483.0" width="0.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="947.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (600 samples, 0.12%)</title><rect x="945.1" y="515.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="948.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (600 samples, 0.12%)</title><rect x="945.1" y="499.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="948.1" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (333 samples, 0.07%)</title><rect x="945.1" y="483.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="948.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (267 samples, 0.05%)</title><rect x="945.9" y="483.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="948.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (267 samples, 0.05%)</title><rect x="945.9" y="467.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="948.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (267 samples, 0.05%)</title><rect x="945.9" y="451.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="948.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (18,455 samples, 3.63%)</title><rect x="946.5" y="515.0" width="42.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="949.5" y="526.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (18,455 samples, 3.63%)</title><rect x="946.5" y="499.0" width="42.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="949.5" y="510.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (18,455 samples, 3.63%)</title><rect x="946.5" y="483.0" width="42.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="949.5" y="494.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (18,455 samples, 3.63%)</title><rect x="946.5" y="467.0" width="42.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="949.5" y="478.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (179 samples, 0.04%)</title><rect x="946.5" y="451.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="949.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (179 samples, 0.04%)</title><rect x="946.5" y="435.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="949.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$148/1783803788.get$Lambda (179 samples, 0.04%)</title><rect x="946.5" y="419.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="949.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$148 (179 samples, 0.04%)</title><rect x="946.5" y="403.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="949.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (643 samples, 0.13%)</title><rect x="946.9" y="451.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="949.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (643 samples, 0.13%)</title><rect x="946.9" y="435.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="949.9" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (358 samples, 0.07%)</title><rect x="946.9" y="419.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="949.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (285 samples, 0.06%)</title><rect x="947.8" y="419.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="950.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (285 samples, 0.06%)</title><rect x="947.8" y="403.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="950.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (285 samples, 0.06%)</title><rect x="947.8" y="387.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="950.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (618 samples, 0.12%)</title><rect x="948.4" y="451.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="951.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (618 samples, 0.12%)</title><rect x="948.4" y="435.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="951.4" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (326 samples, 0.06%)</title><rect x="948.4" y="419.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="951.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (292 samples, 0.06%)</title><rect x="949.2" y="419.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="952.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (292 samples, 0.06%)</title><rect x="949.2" y="403.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="952.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (292 samples, 0.06%)</title><rect x="949.2" y="387.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="952.2" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (508 samples, 0.10%)</title><rect x="949.8" y="451.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="952.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (882 samples, 0.17%)</title><rect x="951.0" y="451.0" width="2.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="954.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (9,371 samples, 1.84%)</title><rect x="953.1" y="451.0" width="21.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="956.1" y="462.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1,014 samples, 0.20%)</title><rect x="953.1" y="435.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="956.1" y="446.0"></text>
</g>
<g>
<title>java/util/Collection.stream (793 samples, 0.16%)</title><rect x="953.1" y="419.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="956.1" y="430.0"></text>
</g>
<g>
<title>java/util/List.spliterator (297 samples, 0.06%)</title><rect x="953.1" y="403.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="956.1" y="414.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (297 samples, 0.06%)</title><rect x="953.1" y="387.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="956.1" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (496 samples, 0.10%)</title><rect x="953.8" y="403.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="956.8" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (496 samples, 0.10%)</title><rect x="953.8" y="387.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="956.8" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (221 samples, 0.04%)</title><rect x="954.9" y="419.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="957.9" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (221 samples, 0.04%)</title><rect x="954.9" y="403.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="957.9" y="414.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (221 samples, 0.04%)</title><rect x="954.9" y="387.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="957.9" y="398.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$57/341796579.get (221 samples, 0.04%)</title><rect x="954.9" y="371.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="957.9" y="382.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (221 samples, 0.04%)</title><rect x="954.9" y="355.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="957.9" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (3,737 samples, 0.74%)</title><rect x="955.4" y="435.0" width="8.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="958.4" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (3,737 samples, 0.74%)</title><rect x="955.4" y="419.0" width="8.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="958.4" y="430.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (146 samples, 0.03%)</title><rect x="955.4" y="403.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="958.4" y="414.0"></text>
</g>
<g>
<title>java.util.ArrayList (222 samples, 0.04%)</title><rect x="955.8" y="403.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="958.8" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap (423 samples, 0.08%)</title><rect x="956.3" y="403.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="959.3" y="414.0"></text>
</g>
<g>
<title>java.util.TreeSet (141 samples, 0.03%)</title><rect x="957.3" y="403.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="960.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (309 samples, 0.06%)</title><rect x="957.6" y="403.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="960.6" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (309 samples, 0.06%)</title><rect x="957.6" y="387.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="960.6" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1284541460.get$Lambda (309 samples, 0.06%)</title><rect x="957.6" y="371.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="960.6" y="382.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (309 samples, 0.06%)</title><rect x="957.6" y="355.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="960.6" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (1,807 samples, 0.36%)</title><rect x="958.3" y="403.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="961.3" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1,807 samples, 0.36%)</title><rect x="958.3" y="387.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="961.3" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1284541460.accept (1,807 samples, 0.36%)</title><rect x="958.3" y="371.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="961.3" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1,807 samples, 0.36%)</title><rect x="958.3" y="355.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="961.3" y="366.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (811 samples, 0.16%)</title><rect x="958.3" y="339.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="961.3" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$127/1726426466.accept (523 samples, 0.10%)</title><rect x="958.3" y="323.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="961.3" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (523 samples, 0.10%)</title><rect x="958.3" y="307.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="961.3" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (523 samples, 0.10%)</title><rect x="958.3" y="291.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="961.3" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (523 samples, 0.10%)</title><rect x="958.3" y="275.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="961.3" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (523 samples, 0.10%)</title><rect x="958.3" y="259.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="961.3" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (523 samples, 0.10%)</title><rect x="958.3" y="243.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="961.3" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (523 samples, 0.10%)</title><rect x="958.3" y="227.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="961.3" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (523 samples, 0.10%)</title><rect x="958.3" y="211.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="961.3" y="222.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (288 samples, 0.06%)</title><rect x="959.5" y="323.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="962.5" y="334.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (288 samples, 0.06%)</title><rect x="959.5" y="307.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="962.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (213 samples, 0.04%)</title><rect x="960.2" y="339.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="963.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (213 samples, 0.04%)</title><rect x="960.2" y="323.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="963.2" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$127/1726426466.get$Lambda (213 samples, 0.04%)</title><rect x="960.2" y="307.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="963.2" y="318.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$127 (213 samples, 0.04%)</title><rect x="960.2" y="291.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="963.2" y="302.0"></text>
</g>
<g>
<title>java/util/List.copyOf (422 samples, 0.08%)</title><rect x="960.7" y="339.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="963.7" y="350.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (422 samples, 0.08%)</title><rect x="960.7" y="323.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="963.7" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (205 samples, 0.04%)</title><rect x="960.7" y="307.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="963.7" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (205 samples, 0.04%)</title><rect x="960.7" y="291.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="963.7" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (205 samples, 0.04%)</title><rect x="960.7" y="275.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="963.7" y="286.0"></text>
</g>
<g>
<title>java/util/List.of (217 samples, 0.04%)</title><rect x="961.2" y="307.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="964.2" y="318.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (217 samples, 0.04%)</title><rect x="961.2" y="291.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="964.2" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (361 samples, 0.07%)</title><rect x="961.7" y="339.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="964.7" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (361 samples, 0.07%)</title><rect x="961.7" y="323.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="964.7" y="334.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (271 samples, 0.05%)</title><rect x="962.5" y="403.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="965.5" y="414.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (271 samples, 0.05%)</title><rect x="962.5" y="387.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="965.5" y="398.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (418 samples, 0.08%)</title><rect x="963.1" y="403.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="966.1" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap (418 samples, 0.08%)</title><rect x="963.1" y="387.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="966.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (143 samples, 0.03%)</title><rect x="964.1" y="435.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="967.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (3,307 samples, 0.65%)</title><rect x="964.4" y="435.0" width="7.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="967.4" y="446.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (3,307 samples, 0.65%)</title><rect x="964.4" y="419.0" width="7.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="967.4" y="430.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3,038 samples, 0.60%)</title><rect x="964.4" y="403.0" width="7.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="967.4" y="414.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (3,038 samples, 0.60%)</title><rect x="964.4" y="387.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="967.4" y="398.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (3,038 samples, 0.60%)</title><rect x="964.4" y="371.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="967.4" y="382.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (606 samples, 0.12%)</title><rect x="964.4" y="355.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="967.4" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (892 samples, 0.18%)</title><rect x="965.8" y="355.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="968.8" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (892 samples, 0.18%)</title><rect x="965.8" y="339.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="968.8" y="350.0"></text>
</g>
<g>
<title>byte[] (892 samples, 0.18%)</title><rect x="965.8" y="323.0" width="2.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="968.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,540 samples, 0.30%)</title><rect x="967.9" y="355.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="970.9" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,540 samples, 0.30%)</title><rect x="967.9" y="339.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="970.9" y="350.0"></text>
</g>
<g>
<title>java.lang.String (659 samples, 0.13%)</title><rect x="967.9" y="323.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="970.9" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (881 samples, 0.17%)</title><rect x="969.5" y="323.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="972.5" y="334.0"></text>
</g>
<g>
<title>byte[] (881 samples, 0.17%)</title><rect x="969.5" y="307.0" width="2.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="972.5" y="318.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (269 samples, 0.05%)</title><rect x="971.5" y="403.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="974.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (436 samples, 0.09%)</title><rect x="972.1" y="435.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="975.1" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (436 samples, 0.09%)</title><rect x="972.1" y="419.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="975.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (734 samples, 0.14%)</title><rect x="973.1" y="435.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="976.1" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (194 samples, 0.04%)</title><rect x="973.1" y="419.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="976.1" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (186 samples, 0.04%)</title><rect x="973.6" y="419.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="976.6" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (186 samples, 0.04%)</title><rect x="973.6" y="403.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="976.6" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (354 samples, 0.07%)</title><rect x="974.0" y="419.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="977.0" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (354 samples, 0.07%)</title><rect x="974.0" y="403.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="977.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (3,952 samples, 0.78%)</title><rect x="974.8" y="451.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="977.8" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (154 samples, 0.03%)</title><rect x="974.8" y="435.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="977.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (632 samples, 0.12%)</title><rect x="975.2" y="435.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="978.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (154 samples, 0.03%)</title><rect x="976.7" y="435.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="979.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (154 samples, 0.03%)</title><rect x="976.7" y="419.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="979.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (3,012 samples, 0.59%)</title><rect x="977.0" y="435.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="980.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (3,012 samples, 0.59%)</title><rect x="977.0" y="419.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="980.0" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (284 samples, 0.06%)</title><rect x="977.0" y="403.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="980.0" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList (309 samples, 0.06%)</title><rect x="977.7" y="403.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="980.7" y="414.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (1,441 samples, 0.28%)</title><rect x="978.4" y="403.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="981.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (1,441 samples, 0.28%)</title><rect x="978.4" y="387.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="981.4" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (1,441 samples, 0.28%)</title><rect x="978.4" y="371.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="981.4" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (1,441 samples, 0.28%)</title><rect x="978.4" y="355.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="981.4" y="366.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (1,441 samples, 0.28%)</title><rect x="978.4" y="339.0" width="3.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="981.4" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (522 samples, 0.10%)</title><rect x="981.7" y="403.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="984.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (522 samples, 0.10%)</title><rect x="981.7" y="387.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="984.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor11.newInstance (361 samples, 0.07%)</title><rect x="981.7" y="371.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="984.7" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (361 samples, 0.07%)</title><rect x="981.7" y="355.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="984.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (161 samples, 0.03%)</title><rect x="982.6" y="371.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="985.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (161 samples, 0.03%)</title><rect x="982.6" y="355.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="985.6" y="366.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (456 samples, 0.09%)</title><rect x="983.0" y="403.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="986.0" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (456 samples, 0.09%)</title><rect x="983.0" y="387.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="986.0" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (456 samples, 0.09%)</title><rect x="983.0" y="371.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="986.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (2,302 samples, 0.45%)</title><rect x="984.0" y="451.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="987.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (513 samples, 0.10%)</title><rect x="984.0" y="435.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="987.0" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (231 samples, 0.05%)</title><rect x="984.0" y="419.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="987.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (282 samples, 0.06%)</title><rect x="984.6" y="419.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="987.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (282 samples, 0.06%)</title><rect x="984.6" y="403.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="987.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (282 samples, 0.06%)</title><rect x="984.6" y="387.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="987.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (282 samples, 0.06%)</title><rect x="984.6" y="371.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="987.6" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (282 samples, 0.06%)</title><rect x="984.6" y="355.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="987.6" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (247 samples, 0.05%)</title><rect x="985.2" y="435.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="988.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (1,542 samples, 0.30%)</title><rect x="985.8" y="435.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="988.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (303 samples, 0.06%)</title><rect x="985.8" y="419.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="988.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (303 samples, 0.06%)</title><rect x="985.8" y="403.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="988.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$138/1830298872.get$Lambda (140 samples, 0.03%)</title><rect x="985.8" y="387.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="988.8" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$138 (140 samples, 0.03%)</title><rect x="985.8" y="371.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="988.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$142/1552091493.get$Lambda (163 samples, 0.03%)</title><rect x="986.1" y="387.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="989.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$142 (163 samples, 0.03%)</title><rect x="986.1" y="371.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="989.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,239 samples, 0.24%)</title><rect x="986.5" y="419.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="989.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,239 samples, 0.24%)</title><rect x="986.5" y="403.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="989.5" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (692 samples, 0.14%)</title><rect x="986.5" y="387.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="989.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (547 samples, 0.11%)</title><rect x="988.1" y="387.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="991.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (547 samples, 0.11%)</title><rect x="988.1" y="371.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="991.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (547 samples, 0.11%)</title><rect x="988.1" y="355.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="991.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Basic.primaryFor (1,079 samples, 0.21%)</title><rect x="989.4" y="515.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="992.4" y="526.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (215 samples, 0.04%)</title><rect x="989.5" y="499.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="992.5" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap (215 samples, 0.04%)</title><rect x="989.5" y="483.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="992.5" y="494.0"></text>
</g>
<g>
<title>java/util/HashSet.add (805 samples, 0.16%)</title><rect x="990.0" y="499.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="993.0" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.put (805 samples, 0.16%)</title><rect x="990.0" y="483.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="993.0" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (805 samples, 0.16%)</title><rect x="990.0" y="467.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="993.0" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (434 samples, 0.09%)</title><rect x="990.0" y="451.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="993.0" y="462.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (434 samples, 0.09%)</title><rect x="990.0" y="435.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="993.0" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (371 samples, 0.07%)</title><rect x="991.0" y="451.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="994.0" y="462.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (371 samples, 0.07%)</title><rect x="991.0" y="435.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="994.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils.convertRequest (6,031 samples, 1.19%)</title><rect x="991.9" y="515.0" width="14.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="994.9" y="526.0"></text>
</g>
<g>
<title>java.lang.String[] (195 samples, 0.04%)</title><rect x="991.9" y="499.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="994.9" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (957 samples, 0.19%)</title><rect x="992.3" y="499.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="995.3" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (376 samples, 0.07%)</title><rect x="992.3" y="483.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="995.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (581 samples, 0.11%)</title><rect x="993.2" y="483.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="996.2" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (144 samples, 0.03%)</title><rect x="993.2" y="467.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="996.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (437 samples, 0.09%)</title><rect x="993.5" y="467.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="996.5" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (437 samples, 0.09%)</title><rect x="993.5" y="451.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="996.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (4,046 samples, 0.80%)</title><rect x="994.5" y="499.0" width="9.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="997.5" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (395 samples, 0.08%)</title><rect x="994.5" y="483.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="997.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (3,651 samples, 0.72%)</title><rect x="995.5" y="483.0" width="8.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="998.5" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (3,503 samples, 0.69%)</title><rect x="995.5" y="467.0" width="8.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="998.5" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (3,503 samples, 0.69%)</title><rect x="995.5" y="451.0" width="8.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="998.5" y="462.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (142 samples, 0.03%)</title><rect x="995.5" y="435.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="998.5" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (229 samples, 0.05%)</title><rect x="995.8" y="435.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="998.8" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (437 samples, 0.09%)</title><rect x="996.3" y="435.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="999.3" y="446.0"></text>
</g>
<g>
<title>java.util.TreeSet (151 samples, 0.03%)</title><rect x="997.3" y="435.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1000.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (299 samples, 0.06%)</title><rect x="997.7" y="435.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1000.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (299 samples, 0.06%)</title><rect x="997.7" y="419.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1000.7" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1284541460.get$Lambda (299 samples, 0.06%)</title><rect x="997.7" y="403.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1000.7" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (299 samples, 0.06%)</title><rect x="997.7" y="387.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1000.7" y="398.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (298 samples, 0.06%)</title><rect x="998.4" y="435.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1001.4" y="446.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (298 samples, 0.06%)</title><rect x="998.4" y="419.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1001.4" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1,484 samples, 0.29%)</title><rect x="999.1" y="435.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1002.1" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1284541460.accept (1,484 samples, 0.29%)</title><rect x="999.1" y="419.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1002.1" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1,484 samples, 0.29%)</title><rect x="999.1" y="403.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1002.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (204 samples, 0.04%)</title><rect x="999.1" y="387.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1002.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (204 samples, 0.04%)</title><rect x="999.1" y="371.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1002.1" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$127/1726426466.get$Lambda (204 samples, 0.04%)</title><rect x="999.1" y="355.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1002.1" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$127 (204 samples, 0.04%)</title><rect x="999.1" y="339.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1002.1" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (482 samples, 0.09%)</title><rect x="999.5" y="387.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1002.5" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$127/1726426466.accept (482 samples, 0.09%)</title><rect x="999.5" y="371.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1002.5" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (482 samples, 0.09%)</title><rect x="999.5" y="355.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1002.5" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (482 samples, 0.09%)</title><rect x="999.5" y="339.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1002.5" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (482 samples, 0.09%)</title><rect x="999.5" y="323.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1002.5" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (482 samples, 0.09%)</title><rect x="999.5" y="307.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1002.5" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (482 samples, 0.09%)</title><rect x="999.5" y="291.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1002.5" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (482 samples, 0.09%)</title><rect x="999.5" y="275.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1002.5" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (482 samples, 0.09%)</title><rect x="999.5" y="259.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1002.5" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (441 samples, 0.09%)</title><rect x="1000.7" y="387.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1003.7" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (441 samples, 0.09%)</title><rect x="1000.7" y="371.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1003.7" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (217 samples, 0.04%)</title><rect x="1000.7" y="355.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1003.7" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (217 samples, 0.04%)</title><rect x="1000.7" y="339.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1003.7" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (217 samples, 0.04%)</title><rect x="1000.7" y="323.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1003.7" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (224 samples, 0.04%)</title><rect x="1001.2" y="355.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1004.2" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (224 samples, 0.04%)</title><rect x="1001.2" y="339.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1004.2" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (357 samples, 0.07%)</title><rect x="1001.7" y="387.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1004.7" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (357 samples, 0.07%)</title><rect x="1001.7" y="371.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1004.7" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (463 samples, 0.09%)</title><rect x="1002.5" y="435.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1005.5" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (463 samples, 0.09%)</title><rect x="1002.5" y="419.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1005.5" y="430.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (148 samples, 0.03%)</title><rect x="1003.6" y="467.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1006.6" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.of (148 samples, 0.03%)</title><rect x="1003.6" y="451.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1006.6" y="462.0"></text>
</g>
<g>
<title>java.util.Optional (148 samples, 0.03%)</title><rect x="1003.6" y="435.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1006.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (833 samples, 0.16%)</title><rect x="1003.9" y="499.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1006.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (833 samples, 0.16%)</title><rect x="1003.9" y="483.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1006.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (833 samples, 0.16%)</title><rect x="1003.9" y="467.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1006.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (833 samples, 0.16%)</title><rect x="1003.9" y="451.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1006.9" y="462.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (833 samples, 0.16%)</title><rect x="1003.9" y="435.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1006.9" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (350 samples, 0.07%)</title><rect x="1003.9" y="419.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1006.9" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (350 samples, 0.07%)</title><rect x="1003.9" y="403.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1006.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$117/1366093034.apply (483 samples, 0.10%)</title><rect x="1004.8" y="419.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1007.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (483 samples, 0.10%)</title><rect x="1004.8" y="403.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1007.8" y="414.0"></text>
</g>
<g>
<title>java.util.ArrayList (242 samples, 0.05%)</title><rect x="1004.8" y="387.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1007.8" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (241 samples, 0.05%)</title><rect x="1005.3" y="387.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1008.3" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (241 samples, 0.05%)</title><rect x="1005.3" y="371.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1008.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replicas.toString (217 samples, 0.04%)</title><rect x="1005.9" y="515.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1008.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (217 samples, 0.04%)</title><rect x="1005.9" y="499.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1008.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1300723205.invoke (217 samples, 0.04%)</title><rect x="1005.9" y="483.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1008.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (217 samples, 0.04%)</title><rect x="1005.9" y="467.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1008.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (217 samples, 0.04%)</title><rect x="1005.9" y="451.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1008.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (217 samples, 0.04%)</title><rect x="1005.9" y="435.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1008.9" y="446.0"></text>
</g>
<g>
<title>byte[] (217 samples, 0.04%)</title><rect x="1005.9" y="419.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1008.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.asyncAct (2,595 samples, 0.51%)</title><rect x="1006.4" y="531.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1009.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,312 samples, 0.26%)</title><rect x="1006.4" y="515.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1009.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,312 samples, 0.26%)</title><rect x="1006.4" y="499.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1009.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica$$Lambda$450/692403226.get$Lambda (1,312 samples, 0.26%)</title><rect x="1006.4" y="483.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1009.4" y="494.0"></text>
</g>
<g>
<title>ru.mail.polis.service.pranova.Replica$$Lambda$450 (1,312 samples, 0.26%)</title><rect x="1006.4" y="467.0" width="3.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1009.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,283 samples, 0.25%)</title><rect x="1009.4" y="515.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1012.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,283 samples, 0.25%)</title><rect x="1009.4" y="499.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1012.4" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1,271 samples, 0.25%)</title><rect x="1009.4" y="483.0" width="3.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1012.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replica.schedule (4,328 samples, 0.85%)</title><rect x="1012.4" y="531.0" width="10.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1015.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (289 samples, 0.06%)</title><rect x="1012.6" y="515.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1015.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (289 samples, 0.06%)</title><rect x="1012.6" y="499.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1015.6" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (186 samples, 0.04%)</title><rect x="1012.6" y="483.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1015.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (272 samples, 0.05%)</title><rect x="1013.3" y="515.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1016.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (272 samples, 0.05%)</title><rect x="1013.3" y="499.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1016.3" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniAccept (170 samples, 0.03%)</title><rect x="1013.3" y="483.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1016.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils.collect (2,930 samples, 0.58%)</title><rect x="1013.9" y="515.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1016.9" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList (109 samples, 0.02%)</title><rect x="1013.9" y="499.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1016.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/90689146.linkToTargetMethod (544 samples, 0.11%)</title><rect x="1014.7" y="499.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1017.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/190755687.invokeStatic (544 samples, 0.11%)</title><rect x="1014.7" y="483.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1017.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils$$Lambda$161/1603100438.get$Lambda (544 samples, 0.11%)</title><rect x="1014.7" y="467.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1017.7" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.service.pranova.FutureUtils$$Lambda$161 (544 samples, 0.11%)</title><rect x="1014.7" y="451.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1017.7" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (118 samples, 0.02%)</title><rect x="1016.0" y="499.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1019.0" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (118 samples, 0.02%)</title><rect x="1016.0" y="483.0" width="0.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1019.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (900 samples, 0.18%)</title><rect x="1016.2" y="499.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1019.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (900 samples, 0.18%)</title><rect x="1016.2" y="483.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1019.2" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (482 samples, 0.09%)</title><rect x="1016.2" y="467.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1019.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (112 samples, 0.02%)</title><rect x="1017.3" y="467.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1020.3" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (112 samples, 0.02%)</title><rect x="1017.3" y="451.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1020.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (306 samples, 0.06%)</title><rect x="1017.6" y="467.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1020.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (306 samples, 0.06%)</title><rect x="1017.6" y="451.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1020.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (306 samples, 0.06%)</title><rect x="1017.6" y="435.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1020.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (872 samples, 0.17%)</title><rect x="1018.3" y="499.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1021.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (872 samples, 0.17%)</title><rect x="1018.3" y="483.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1021.3" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (486 samples, 0.10%)</title><rect x="1018.3" y="467.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1021.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (124 samples, 0.02%)</title><rect x="1019.4" y="467.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1022.4" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (124 samples, 0.02%)</title><rect x="1019.4" y="451.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1022.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (262 samples, 0.05%)</title><rect x="1019.7" y="467.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1022.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (262 samples, 0.05%)</title><rect x="1019.7" y="451.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1022.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (262 samples, 0.05%)</title><rect x="1019.7" y="435.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1022.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.&lt;init&gt; (155 samples, 0.03%)</title><rect x="1020.3" y="499.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1023.3" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (155 samples, 0.03%)</title><rect x="1020.3" y="483.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1023.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/FutureUtils.merge (753 samples, 0.15%)</title><rect x="1020.7" y="515.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1023.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (292 samples, 0.06%)</title><rect x="1021.1" y="499.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1024.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (292 samples, 0.06%)</title><rect x="1021.1" y="483.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1024.1" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (193 samples, 0.04%)</title><rect x="1021.1" y="467.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1024.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (295 samples, 0.06%)</title><rect x="1021.8" y="499.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1024.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (295 samples, 0.06%)</title><rect x="1021.8" y="483.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1024.8" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (172 samples, 0.03%)</title><rect x="1021.8" y="467.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1024.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (123 samples, 0.02%)</title><rect x="1022.2" y="467.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1025.2" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (123 samples, 0.02%)</title><rect x="1022.2" y="451.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1025.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/pranova/Replicas.quorum (1,029 samples, 0.20%)</title><rect x="1022.5" y="563.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1025.5" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.pranova.Replicas (1,029 samples, 0.20%)</title><rect x="1022.5" y="547.0" width="2.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1025.5" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2,925 samples, 0.58%)</title><rect x="1024.8" y="595.0" width="6.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1027.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,925 samples, 0.58%)</title><rect x="1024.8" y="579.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1027.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,925 samples, 0.58%)</title><rect x="1024.8" y="563.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1027.8" y="574.0"></text>
</g>
<g>
<title>java.lang.String (1,104 samples, 0.22%)</title><rect x="1024.8" y="547.0" width="2.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1027.8" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,821 samples, 0.36%)</title><rect x="1027.4" y="547.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1030.4" y="558.0"></text>
</g>
<g>
<title>byte[] (1,821 samples, 0.36%)</title><rect x="1027.4" y="531.0" width="4.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1030.4" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (13,460 samples, 2.65%)</title><rect x="1031.6" y="627.0" width="31.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1034.6" y="638.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (1,773 samples, 0.35%)</title><rect x="1031.6" y="611.0" width="4.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1034.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3,542 samples, 0.70%)</title><rect x="1035.8" y="611.0" width="8.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1038.8" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (3,433 samples, 0.68%)</title><rect x="1035.8" y="595.0" width="7.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1038.8" y="606.0"></text>
</g>
<g>
<title>java.lang.String[] (109 samples, 0.02%)</title><rect x="1043.7" y="595.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1046.7" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8,145 samples, 1.60%)</title><rect x="1044.0" y="611.0" width="18.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1047.0" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8,145 samples, 1.60%)</title><rect x="1044.0" y="595.0" width="18.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1047.0" y="606.0"></text>
</g>
<g>
<title>char[] (3,893 samples, 0.77%)</title><rect x="1044.0" y="579.0" width="9.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1047.0" y="590.0"></text>
</g>
<g>
<title>char[] (239 samples, 0.05%)</title><rect x="1053.0" y="579.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1056.0" y="590.0"></text>
</g>
<g>
<title>java.lang.String (1,129 samples, 0.22%)</title><rect x="1053.6" y="579.0" width="2.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1056.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,884 samples, 0.57%)</title><rect x="1056.2" y="579.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1059.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,884 samples, 0.57%)</title><rect x="1056.2" y="563.0" width="6.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1059.2" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,884 samples, 0.57%)</title><rect x="1056.2" y="547.0" width="6.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1059.2" y="558.0"></text>
</g>
<g>
<title>byte[] (2,884 samples, 0.57%)</title><rect x="1056.2" y="531.0" width="6.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1059.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (737 samples, 0.15%)</title><rect x="1062.9" y="627.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1065.9" y="638.0"></text>
</g>
<g>
<title>byte[] (737 samples, 0.15%)</title><rect x="1062.9" y="611.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1065.9" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2,041 samples, 0.40%)</title><rect x="1064.6" y="627.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1067.6" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,041 samples, 0.40%)</title><rect x="1064.6" y="611.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1067.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,041 samples, 0.40%)</title><rect x="1064.6" y="595.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1067.6" y="606.0"></text>
</g>
<g>
<title>java.lang.String (920 samples, 0.18%)</title><rect x="1064.6" y="579.0" width="2.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1067.6" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,121 samples, 0.22%)</title><rect x="1066.7" y="579.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1069.7" y="590.0"></text>
</g>
<g>
<title>byte[] (1,121 samples, 0.22%)</title><rect x="1066.7" y="563.0" width="2.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1069.7" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (50,122 samples, 9.86%)</title><rect x="1069.3" y="627.0" width="116.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1072.3" y="638.0">one/nio/util/U..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (50,122 samples, 9.86%)</title><rect x="1069.3" y="611.0" width="116.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1072.3" y="622.0">one/nio/util/U..</text>
</g>
<g>
<title>char[] (24,845 samples, 4.89%)</title><rect x="1069.3" y="595.0" width="57.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1072.3" y="606.0">char[]</text>
</g>
<g>
<title>char[] (3,362 samples, 0.66%)</title><rect x="1127.0" y="595.0" width="7.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1130.0" y="606.0"></text>
</g>
<g>
<title>java.lang.String (6,735 samples, 1.33%)</title><rect x="1134.8" y="595.0" width="15.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1137.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (15,180 samples, 2.99%)</title><rect x="1150.5" y="595.0" width="35.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1153.5" y="606.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (15,180 samples, 2.99%)</title><rect x="1150.5" y="579.0" width="35.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1153.5" y="590.0">jav..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (15,180 samples, 2.99%)</title><rect x="1150.5" y="563.0" width="35.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1153.5" y="574.0">jav..</text>
</g>
<g>
<title>byte[] (15,172 samples, 2.99%)</title><rect x="1150.5" y="547.0" width="35.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1153.5" y="558.0">byt..</text>
</g>
<g>
<title>one/nio/net/Session.read (1,837 samples, 0.36%)</title><rect x="1185.7" y="643.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1188.7" y="654.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (1,837 samples, 0.36%)</title><rect x="1185.7" y="627.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1188.7" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,837 samples, 0.36%)</title><rect x="1185.7" y="611.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1188.7" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,837 samples, 0.36%)</title><rect x="1185.7" y="595.0" width="4.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1188.7" y="606.0"></text>
</g>
</g>
</svg>
